[General]
languageName=PSL
extensions=psl
scripts=$HTE_HOME/new_plugins/PSL.tcl
iconsPath=$HTE_HOME/images
version=1.0

[Syntax]
ignoreCase=Yes
stringStart="
stringEnd="
charStart='
charEnd='
operatorChars=@;[*]=:|&-<>!=
preprocMark=#
highlightGroups=keyWord function verifyDirective constructs declarations VHDL Verilog SystemVerilog

[Style]
tabWidth=2
softTabs=Yes
autoIndent=Yes

[Comment]
singleLine=--
multiLineStart=/*
multiLineEnd=*/

[HLCallbacks]
sequence=declarationCmd
property=declarationCmd
endpoint=declarationCmd
vmode=vunitCmd
vprop=vunitCmd
vunit=vunitCmd
inherit=inheritCmd
integer=integerCmd
struct=structCmd
assert=vDirectivesCmd
assume=vDirectivesCmd
assume_guarantee=vDirectivesCmd
restrict=vDirectivesCmd
restrict_guarantee=vDirectivesCmd
cover=vDirectivesCmd
fairness=vDirectivesCmd

[HLTags]
parentheses=#0000ff
operator=#0000ff
sequence=#800080
property=#0080c0
endpoint=#800800
const=#69abcc
boolean=#69abcc
integer=#008080
function=#0000c0
vunittype=#800080
designmodule=#0080c0
baseVUnit=#009c00
intType=#550088
structType=#800008
verifyDirective=#0000ff
constructs=brown
declarations=#c00000
preproc=#0000c3
VHDL=#c00000
Verilog=#c00000
SystemVerilog=#c00000
label=#0000c0

[TagNames]
parentheses="Parentheses"
sequence="Sequence"
property="Property"
const="Constant"
boolean="Boolean"
endpoint="End Point"
function="Function"
vunittype="Verification Unit"
designmodule="Design Module"
baseVUnit="Base Verification Unit"
intType="Integer Type"
structType="Struct Type"
VHDL="VHDL keywords"
Verilog="Verilog keywords"
SystemVerilog="System Verilog keywords"
label="Label"
integer="Integer"
keyWord="Keyword"
verifyDirective="Verification Directive"
constructs="Constructs"
declarations="Declarations"
char="Character"
comment="Comment"
operator="Operator"
string="String"
preproc="Preprocessor Directives"

[TagHelpTips]
parentheses=Parenthesis, braces and square brackets.
sequence=Name of a user-defined sequence.
property=Name of a user-defined property.
const=Name of a constant.
boolean=Name of a boolean.
endpoint=Name of a user-defined end point.
function=PSL's boolean layer built-in functions.
vunittype=Name of a user-defined verification unit, mode or property.
designmodule=HDL design module under verification.
baseVUnit=Name of an inherited verification unit.
intType=Name of an integer.
structType=Name of a structure.
integer=Integer not inside a string.
verifyDirective=All verification layer directives(assert, assume, restrict ...etc).
constructs=Preprocessor constructs(%if, %for, %end ...etc).
declarations=PSL Named declaration keywords.
VHDL=Supported VHDL keywords.
Verilog=Supported Verilog keywords.
SystemVerilog=Supported System Verilog keywords.
label=Name of a Label.
comment=Commented line(preceeded by -- or //) or a commented block(enclosed between /* and */).
operator=Operators such as "|=>".
keyWord=PSL pre-defined keywords. See also "Keywords...".
char=Character within single quotes.
string=String within double quotes.
preproc=Preprocessor Directives(#define, #include ...etc).

[ParseCallbacks]
sequence=declarationCmd
property=declarationCmd
endpoint=declarationCmd
vmode=vunitCmd
vprop=vunitCmd
vunit=vunitCmd
default=defaultCmd
assert=vDirectivesCmd
assume=vDirectivesCmd
assume_guarantee=vDirectivesCmd
restrict=vDirectivesCmd
restrict_guarantee=vDirectivesCmd
cover=vDirectivesCmd
fairness=vDirectivesCmd
strong=vStrongDirectivesCmd

[keyWord]
A
AF
AG
AX
abort
always
before
before!
before!_
before_
E
EF
EG
EX
eventually!
F
forall
G
in
never
next
next!
next_a
next_a!
next_e
next_e!
next_event
next_event!
next_event_a!
next_event_e!
U
union
until
until!
until!_
until_
W
whilenot
whilenot!
whilenot!_
whilenot_
within
within!
within!_
within_
X
X!

[verifyDirective]
cover
assert
assume
assume_guarantee
restrict
restrict_guarantee
strong
fairness

[declarations]
vmode
vprop
vunit
inherit
const
boolean
property
sequence
endpoint
default
clock

[function]
rose
prev
fell
stable
isunknown
countones
onehot
onehot0

[constructs]
%for
%if
%then
%else
%end

[VHDL]
and
or
not
is
to

[Verilog]
integer
struct

[SystemVerilog]
inf
