
                   Release Notes For ModelSim Altera 5.5e
                                      
   
   
                                Oct 05 2001
   ______________________________________________________________________
   
     Product Installation and Licensing Information
   For brief instructions about product installation please visit the
   "install_notes" file on the Model Technology web site. The
   install_notes file can be viewed at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see
   the ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp
   
   
     Release Notes Archives
   For release notes of previous versions visit the release notes archive
   at: [3]http://www.model.com/support/default.asp
   or find them in the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes
   
   
     How to get Support
   
   This OEM product is supported by Altera Corporation
     * Telephone Support
       Call 800-800-3753 or 408-544-7000
       
       
     * Email Support
       [4]support@altera.com
       
       
     * World-Wide-Web Support
       [5]https://websupport.altera.com/
       
   
   ______________________________________________________________________
   
  Index to Release Notes
  
     [6]Key Information
   
     [7]User Interface Defects Repaired in 5.5e
   
     [8]Verilog Defects Repaired in 5.5e
   
     [9]PLI Defects Repaired in 5.5e
   
     [10]VHDL Defects Repaired in 5.5e
   
     [11]FLI Defects Repaired in 5.5e
   
     [12]VITAL Defects Repaired in 5.5e
   
     [13]Mixed Language Defects Repaired in 5.5e
   
     [14]General Defects Repaired in 5.5e
   
     [15]Mentor Graphics DRs Repaired in 5.5e
   
     [16]Known Defects in 5.5e
   
     [17]Product Changes to 5.5e
   
     [18]New Features Added to 5.5e
   ______________________________________________________________________
   
   Key Information
     * You must recompile or refresh your models if you are moving
       forward from 5.5 Betas or earlier release versions. See
       "Regenerating your Libraries" in the ModelSim Start Here Guide for
       more information on refreshing your models.
     * Listed below are platform support changes starting with the next
       major ModelSim release, version 5.6:
          + The Windows 95 platform will no longer be supported.
          + The executables in .../modeltech/hp700 will be based on HPUX
            11.0. If you need HPUX 10.20 compatible executables, they
            will be in a new platform directory .../modeltech/hp700_1020.
     * Acrobat reader version 4.0 or greater must be used to read any
       .PDF files contained in ModelSim versions 5.5c or greater.
     * The following lists the supported platforms:
          + win32aloem - Windows 95, 98, Me, NT, 2000
          + sunos5aloem - Solaris 2.6, 7, 8
          + hp700aloem - HP-UX 10.2, 11
   ______________________________________________________________________
   
   User Interface Defects Repaired in 5.5e
     * Zooming full did not work if a previous .wave.tree zoomfull
       command was interrupted with the 'stop' icon.
     * When performing a cold checkpoint restore, if all licenses were
       reserved or in use, ModelSim queued for a license but did not
       display queueing information in a dialog box or in the invocation
       window. The user interface was changed to display queueing
       information if a license cannot be checked out.
     * When waveform comparisons were displayed in the List Window and
       the user clicked the right mouse button, the simulator failed to
       find the comparison object.
     * The default display width for List Window values was incorrect if
       the value range was similar to -20 to -4 where the most negative
       value required more space than the least negative value.
     * The virtual count was incorrectly set to zero after a checkpoint
       command was executed. Also, the virtual count command now returns
       a count of all the currently defined virtuals, not just those not
       saved. A -unsaved option was added in order to count only those
       virtuals that have not been saved.
     * Executing a macro file that performed compiles, then pressing the
       break button caused a Tcl error and the simulator to hang.
   ______________________________________________________________________
   
   Verilog Defects Repaired in 5.5e
     * The -fast compiler option generated code that crashed the
       simulator in some unusual cases.
     * On the rs64 platform (64-bit rs6000), part selects of the
       high-order bits of 32-bit objects (regs & wires) containing 1 in
       the high-order bit resulted in propagation of the 1-bit into
       high-order bits of the result. 32-bit masking is now performed on
       part selects.
     * Removed the hard limit of 256 for total number of files included
       via `include in Verilog. The vlog compiler no longer imposes a
       limit on the number of included files.
     * Annotating a multisource input-to-input INTERCONNECT delay that
       was driven from VHDL sometimes caused a simulation crash.
     * The -fast cell optimizations failed to allow instantiations of
       UDPs from any library other than the "work" library.
     * Verilog macros that contained procedure calls that had a quoted
       string for the value of at least one parameter were not being
       parsed correctly.
   ______________________________________________________________________
   
   PLI Defects Repaired in 5.5e
   ______________________________________________________________________
   
   VHDL Defects Repaired in 5.5e
     * If a locally defined procedure had the same name as an
       implictly-defined procedure (arising, for example, from a FILE
       type), then a call to this local procedure would not compile since
       the argument list for the implicit one was not satisfied.
     * The simulator crashed during the elaboration of an entity
       containing a procedure that contained a constant with a local
       array subtype.
     * The vsim drivers command failed to handle 'collapsed' ports, and
       crashed the simulator. The crash was observed only with 64-bit
       ModelSim, and could potentially occur with 32-bit ModelSim as
       well.
     * Signals defined in an external package and passed to a procedure
       were not handled properly. This was a problem on all platforms,
       but manifested as a crash on 64-bit platforms only.
     * Incorrect simulation results occurred if a port of mode out or
       inout was undriven in a model and the type of the port was an
       array of records. The port did not generate a driving value (when
       it should have generated a value) to the actual signal associated
       with the port.
   ______________________________________________________________________
   
   FLI Defects Repaired in 5.5e
   ______________________________________________________________________
   
   VITAL Defects Repaired in 5.5e
   ______________________________________________________________________
   
   Mixed Language Defects Repaired in 5.5e
   ______________________________________________________________________
   
   General Defects Repaired in 5.5e
     * Simulating a top level module which was compiled nodebug sometimes
       caused an infinite loop.
     * The vcd add command caused a simulator crash if the vcd file
       command was unable to create a vcd file. The vcd add command now
       issues an error indicating that no vcd file was opened.
     * vsim commands with large argument tokens (strings exceeding 512
       characters) could fail unpredictably.
     * The compilers and simulator would incorrectly issue a warning
       ("...Logical libraries should be mapped to directory paths.") with
       the following logical/physical library mappings, because lib1 was
       incorrectly determined to be a logical library.
       lib1 = lib1
       lib2 = lib1
       In addition, whenever lib2 was used, because of faulty error
       recovery, it was incorrectly determined to be a physical library.
     * wlf2log was not recognizing bidirectional ports declared as
       vectors. They were getting output as internal signals, and would
       not appear if the -inout switch was used.
     * An incorrect license error occurred when viewing ".wlf" files
       using dataset open when a license wasn't already checked out. This
       was an OEM PE only defect.
     * ModelSim did not create a PATH variable when attempting to add the
       executables directory to the PATH variable if the PATH variable
       did not exist. In addition, a warning message is now generated if
       the PATH variable does not exist.
   ______________________________________________________________________
   
   Mentor Graphics DRs Repaired in 5.5e
     * 304398 - Overloaded procedures from standard libraries overwrite
       local procedures with same name.
     * 305968 - Breakpoint context menu does not change to 'disable' when
       breakpoint set
     * 304844 - VLOG crashes/generates compile errors when there are too
       many include statements
     * 306325 - Library mapping with same name for library and logical
       library not working any more
     * 307125 - vcd2wlf utility generates error with valid VCD data
   ______________________________________________________________________
   
   Known Defects in 5.5e
     * When the Source Window is brought up the first time, the source
       colorization and highlighting of executable lines will not change
       dynamically but remain constant. For the case where there is an
       existing Source Window, and you do a File > Open, and pick a file
       which has source lines that just fit the Source Window, the same
       non-changeable colorization and highlighting occurs.
     * When multiple variables are selected in the Source Window, the
       variable balloon (via Right Mouse Button) displays the same
       variable even when the cursor is moved from one variable to the
       next.
     * Selected text in the Source Window or Transcript Window gets
       unhighlighted when the cursor moves out of the window or to the
       toolbar or menu bar. This is a Windows only issue.
     * Using the menu sequence Design > Create a New Library to create a
       new library and mapping when a library already existed causes a
       window system error message to appear via a dialog box.
     * Executing the vmap command at the VSIM prompt does not update the
       Library drop-down list.
     * When single-stepping in a .coverage_source Window, as long as the
       context stays within the current file the coverage numbers can be
       seen to increment with each step. If a step causes another source
       file to be brought up, then the coverage numbers in the first
       column do not increment correctly. Sometimes clicking on the name
       of the current source file in the Coverage_Summary Window will
       correct the problem.
     * Start a compare, and do some compare runs. If a compare reload
       command is unsuccessful, ModelSim does an implicit compare end
       without providing an option to save results and the data is lost.
     * When ModelSim is invoked with "vsim -lib vhwork", the library
       entry in the Design tab of the Load Design dialog box incorrectly
       shows the default library "work" instead of the specified library
       "vhwork".
     * Loading a Tcl shared library fails on rs64 with the following
       message: ERROR: couldn't load file " testload.sl": readExports:
       bad magic number
     * List Window Marker problems:
          + If you add a bunch of signals to the List Window then select
            Markers > Add Marker with nothing selected in the List
            Window, then the 2nd list line is highlighted. If you then
            click on another line then no marker outline is left on the
            supposedly added marker line.
          + If you click on some line and do Markers > Add Marker then
            the line selected is marked with an outline but the second
            list line is highlighted.
          + With a marker added on a particular line, if you then click
            on various lines in the List Window then the marker outline
            occasionally moves to some other line (usually the previously
            selected line). Markers don't stay put.
     * List Window scrolling problems:
          + When using the Find dialog box to find signals, when the next
            signal is outside of what is currently showing in the List
            Window, the window is not scrolled to show the next item
            found.
          + If you do a find to the left and the search goes past the
            beginning of the list to wrap around to the end of the list
            and there's a lot of stuff in the List Window that is out of
            view, then the List Window scrolls right only one page even
            though that does not bring the next selected item into view.
          + When doing a search forward on an item's values, the next
            line to match is scrolled to the top line but the scroll bar
            stays the full length of the scroll bar region. (This is in a
            List Window where there aren't very many lines of data.)
          + The documentation for the List Window says that the up and
            down arrow keys are supposed to move the line selection up or
            down one line. The current behavior is that the up and down
            arrow keys behave exactly the same as the TAB and shift-TAB
            keys (searches for next transition).
     * In some cases, Redhat 6.0 did not have coverage for the entire
       source file. There is no problem with Redhat 6.1, 6.2 and 7.0.
     * In the Library page of the Main Window workspace, if a design unit
       is selected and accessed with a right button click to Edit or
       Refresh or Recompile, the following error will occur: Error -
       cannot read work/_info: No such file or directory This bogus error
       message occurs only when the Library entry field in the Library
       page is set to work, and work is logically mapped to another
       library directory name. The work around is to set the Library
       entry field to the actual library name instead of work.
     * There is an inconsistency in how the path separator works when
       parsing commands. Given that the path separator in the example
       below is "/ ", .top.clk should not work.
       echo $PathSeparator
       # /
       exa /top/clk
       # 1
       exa /clk
       # 1
       exa clk
       # 1
       exa .top.clk
       # 1
       exa .clk
       # evaluating expression ".clk"
       # No object found matching clk in context /
       # Item '.clk' not found
     * The following steps show a waveform compare problem.
          + In the compare wizard, specify an opened dataset and a sim
            dataset to be compared (via the compare start functionality).
          + Log some simulation signals.
          + The button "Update after simulation run" should NOT be
            checked.
          + Click the "Compute Diffs Now" button in the wizard. This
            message was given: "Null time range for signal compare". The
            message could be improved to "Cannot compare run because no
            simulation data currently available"
          + Do a run 500.
          + Do a compare info command. The following message is given:
            "No comparison differences" Does it mean my comparisons were
            all matches? A better message choice might be "No available
            compare data, please do a compare run or compare update
            first.".
       A compare run or compare update had not been done, so there should
       be no compare results or data. The Wave Window is correct at this
       point; the compare signal does not show any compare result.
     * No waves are displayed in the Wave Window for virtual constants or
       virtual functions that are children of virtuals.
     * Virtual signals which are a concatenation of a signal from a view
       dataset and a sim dataset show "-No Data-" in the Signals Window,
       even after simulation.
     * A virtual signal containing a Verilog bit was expanded within a
       Signals Window. Double clicking on this Verilog bit to invoke a
       view declaration did not bring up the Source Window. If the Source
       Window was already opened, it did not highlight this signal.
   ______________________________________________________________________
   
   Product Changes to 5.5e
     * Range checking on scalar subtypes will now be performed by default
       on all VHDL designs when variables or signals are assigned values
       explicitly (through assignment statements), or implicitly through
       parameter passing or port mapping. For example, if x and y are
       variables of type natural and integer, respectively, the vcom
       compiler emits range checks for the assignment x := y. For better
       performance, use the -norangecheck vcom compiler switch to inhibit
       range checking. For compatibility, the -rangecheck switch is still
       supported. Results are indeterminate if -norangecheck and
       -rangecheck switches both appear on a single vcom command line.
   ______________________________________________________________________
   
   New Features Added to 5.5e
     * Comment and Uncomment functions have been added to the source
       editor. To use the functions: select a range of text in the Source
       Window then click Edit->Comment Selected. The selected lines will
       be turned into comments by inserting the correct language comment
       characters at the beginning of each line. Selecting the Uncomment
       Selected menu item will remove the comment characters from the
       selected lines.
       Currently, this feature only applies to VHDL and Verilog source
       code. It does not apply to Tcl or any other language.
     * Added a feature in the GUI for additional flexibility in mapping
       binary buses to state names. Virtual type definitions may now
       include sparse mapping of bus values to alphanumeric strings.
       An example of an 8-bit one-hot encoding using a variety of
       supported syntax is:
       virtual type {NULL_STATE st1 {2 st2} {0x04 st3} {16'h08 st4} {'h10
       st5} {16#20 st6} {0b01000000 st7} {0x80 st8} {default BAD_STATE}}
       myMappedType
       The first two terms use positional association to map value zero
       to string "NULL_STATE" and value 1 to string "st1". Positional
       association may be used up until the first mapping pair.
       From there, mapping pairs are used to associate a value with a
       string. Values can be expressed in decimal or based notation.
       Three kinds of based notation are supported: Verilog, VHDL, and
       C-language styles. The values are interpreted without regard to
       the size of the bus to be mapped. Bus widths up to 64 bits are
       supported.
       The string member of each mapping does not need to be quoted
       unless it contains a space or other special character. The value
       "default" has special meaning and corresponds to any value not
       explicitly specified.
     * The hardware modeler is now supported in the linux platform.
       hm_entity and libhm.sl library files are included in the linux
       binaries directory at .../modeltech/linux. These libraries support
       Synopsys Hardware Modeling release 3.6a.


