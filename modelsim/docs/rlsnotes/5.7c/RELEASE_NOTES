
                   Release Notes For ModelSim Altera 5.7c
                                      
                Copyright Model Technology, a Mentor Graphics
              Corporation company, 2003 - All rights reserved.
                                      
   
   
                                Mar 14 2003
   ______________________________________________________________________
   
     Product Installation and Licensing Information
   For brief instructions about product installation please visit the
   "install_notes" file on the Model Technology web site. The
   install_notes file can be viewed at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see
   the ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp
   
   
     Release Notes Archives
   For release notes of previous versions visit the release notes archive
   at: [3]http://www.model.com/support/default.asp
   or find them in the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes
   
   
     How to get Support
   
   This OEM product is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport
       
   
   ______________________________________________________________________
   
  Index to Release Notes
  
     [5]Key Information
   
     [6]User Interface Defects Repaired in 5.7c
   
     [7]Verilog Defects Repaired in 5.7c
   
     [8]PLI Defects Repaired in 5.7c
   
     [9]VHDL Defects Repaired in 5.7c
   
     [10]FLI Defects Repaired in 5.7c
   
     [11]VITAL Defects Repaired in 5.7c
   
     [12]Mixed Language Defects Repaired in 5.7c
   
     [13]General Defects Repaired in 5.7c
   
     [14]Mentor Graphics DRs Repaired in 5.7c
   
     [15]Known Defects in 5.7c
   
     [16]Product Changes to 5.7c
   
     [17]New Features Added to 5.7c
   ______________________________________________________________________
   
   Key Information
     * You must recompile or refresh your models if you are moving
       forward from 5.7 Betas or 5.6x or earlier release versions. See
       "Regenerating your Libraries" in the ModelSim Start Here Guide for
       more information on refreshing your models.
     * Acrobat reader version 4.0 or greater must be used to read any
       .pdf file contained in ModelSim version 5.5c or greater.
     * Product changes and new features mentioned here are introduced in
       the 5.7c release. If you are migrating to the 5.7c release from
       5.6x or earlier releases, please also consult version 5.7x release
       notes for product changes and new features introduced during the
       5.7 patch releases. The previous version release notes can be
       found in your modeltech installation directory at docs/rlsnotes.
     * The HP-UX 10.20 platform is no longer supported as of the ModelSim
       5.7 release. The hp700 platform executables are built on HP-UX
       11.0. Please note that in order for FLI/PLI shared libraries to be
       loaded and executed correctly by the hp700 version of vsim, they
       must be compiled and linked on HP-UX 11.0.
     * Beginning with the 5.6 release (on Windows platforms only),
       attempts to link in libvsim.lib or tk83.lib using the Microsoft
       Visual C++ linker version 5.0 will fail with a message similar to
       "Invalid file or disk full: cannot seek to 0xaa77b00". Microsoft
       Visual C++ version 6.0 should be used.
     * The following platforms will be discontinued as of the ModelSim
       5.8 release:
          + Redhat Linux 6.0
          + Redhat Linux 6.1
     * The following lists the supported platforms:
          + win32aloem - Windows 98, Me, NT, 2000, XP
          + sunos5aloem - Solaris 2.6, 7, 8
          + hp700aloem - HP-UX 11
   ______________________________________________________________________
   
   User Interface Defects Repaired in 5.7c
     * When ModelSim was installed in a directory whose name contained
       spaces, invocation of the Tcl debugger reported an error and
       failed to load. The installation directory's name was incorrectly
       inserted into the initial list of properties.
     * Signals with large value strings (e.g. large arrays) caused some
       Xservers to crash when displayed in the Signals window.
     * Virtual signal definitions of the form <name>'(' <expression> ')'
       were incorrectly handled in the case where the <name> was a
       hierarchical name using '.' as the path separator. The GUI created
       a virtual with the value <expression> instead of an indexed name.
     * When the entire design was logged, restart in some cases took much
       more time to complete than the original design logging and load.
       The problem occurred with large designs containing design objects
       filtered out with wildcards.
     * The Dataflow window displayed only the first of multiple
       primitives instantiated on the same line. (e.g. and
       (N1,A1,A2),(N2,B1,B2),(N3,C1,C2),(N4,D1,D2) ). You must recompile
       the module containing the instantiation to get the bug fix.
     * In the Source window, the examine popup failed with a Tcl error
       when the object was a constant.
     * Expanding a library in the library tab of the Main window resulted
       in a crash if a design unit in the library did not have a source
       file entry in the library database (an abnormal condition).
     * The Wave window textColor setting was being ignored.
     * The Dataflow window did not properly represent concurrent
       conditional assignment statements if the RHS expression involved
       indexed items. The fix for this is in the compiler, vcom,
       therefore the VHDL model must be recompiled to see the fix.
     * ModelSim failed to invoke if the saved geometry of the Main window
       had a negative offset (i.e. the window origin was off the screen
       to the left and above the top.)
     * The -x and -y options to the view command would not accept
       negative origin values.
   ______________________________________________________________________
   
   Verilog Defects Repaired in 5.7c
     * Optimization of continuous assignment statements with more than 64
       variables and operators caused an internal buffer to overflow by
       one byte. On certain platforms (e.g., Linux), the one-byte
       overflow caused the compiler to crash.
     * The $display format "%F" was not being correctly handled on all
       platforms.
     * The compiler crashed when compiling with -fast if the design
       contained an out-of-bounds bit-select of a vector port of an
       inlined module instance.
     * The +no_notifier and +no_tchk_msg switches were not correctly
       reflected by the timing check status commands tcheck_status and
       tcheck_set.
     * A relational operator evaluated to an incorrect result if both
       operands were a call to the same function.
     * Hierarchical assignments with optimized Verilog cell output ports,
       were using the output's pending value rather than output's driven
       value.
     * A module having a long name (several hundred characters) or
       special characters in the name could not be recompiled into the
       same library without generating a false error.
     * A signed operand was sign extended when lengthened no matter what
       the result type of the containing expression was. Operands should
       be sign extended only if the expression result type is signed.
     * When compiling modules that were enclosed in a
       `protect...`endprotect block, the _primary.vhd file should not be
       generated.
     * vlog produced corrupt library files on 64-bit big-endian platforms
       (sunos5v9, hppa64, rs64) leading to a refresh failure with the
       following error message:
       "** Error: work/.../_primary.dat(...): resetall already declared
       in this scope".
     * A relational operator expression having an operand that is a
       concatenation of just one net resulted in a compiler internal
       error.
     * The step -over command misbehaved on the hp700 platform by
       stepping into Verilog functions.
   ______________________________________________________________________
   
   PLI Defects Repaired in 5.7c
     * The PLI returned an incorrect value for a system task argument if
       the argument was an out-of-bounds bit-select of a vector net. This
       also affected built-in system tasks such as $display.
     * Usage of acc_handle_object() with optimized Verilog cells worked
       only when compiled with +acc=p.
     * Name lookup in the VPI used VHDL-style extended identifier parsing
       (name enclosed within backslashes) instead of Verilog-style
       escaped identifier parsing (name starts with '\' and ends with '
       '). Now name lookup in the VPI first tries using context-based
       parsing where if the context is VHDL then the VHDL-style extended
       identifier parsing is used and if the context is Verilog then the
       Verilog-style escaped identifier parsing is used. Here is an
       example:
       "/\\VHDL testbench\\/uut/\\vlog instance /net1".
       If the context-based parsing does not succeed in finding a match
       and the name contains a backslash then an attempt is made to parse
       the name using only Verilog-style escaped identifier parsing.
   ______________________________________________________________________
   
   VHDL Defects Repaired in 5.7c
     * Calling a user-defined log function which had the same name as a
       built-in math function but different argument types generated bad
       code and caused the simulation to crash.
     * The simulator did not generate errors on invalid aliases. The
       following conditions resulted in the error not being flagged:
          + The alias had to be an array type.
          + The subtype indication for the alias had to be constrained.
          + The subtype constraint or the actual's constraint had to be
            not locally static.
       If all three conditions were met, the compiler could not check the
       validity of the alias and a size check had to be done at
       simulation time. The error was that this runtime check was not
       generated.
     * When there were two clocked processes within distinct
       architectures, use of the examine command to view signals present
       in at least one of the architectures resulted in a simulator
       crash.
     * In some cases vsim crashed due to incorrect code generation. In
       order for this crash to occur the following conditions had to be
       true:
          + Multiple design units had to be compiled with one vcom
            command.
          + One of the design units compiled had to be a package body
            (A).
          + There had to be a reference to package body A's header before
            the definition of package body A.
          + The design unit that referenced package body A's header had
            to have a string literal of a type defined in package body
            A's header.
     * An alias to an array signal in a package crashed at load time if
       the alias was declared in an entity. The work around is to declare
       the alias in the architecture.
     * The initial value of a signal could be incorrectly set if the
       signal had an explicit initial value, was of type array or record,
       was connected to a out or inout port, and the port declaration did
       not have an explicit initial value. The signal's explicit initial
       value was incorrectly used to initialize the lower level drivers
       of the port.
   ______________________________________________________________________
   
   FLI Defects Repaired in 5.7c
     * Calls to FLI initialization functions that occurred during restore
       and load_elab did not have the same current context setting as
       their occurrences during a normal design instantiation.
     * Calls to mti_FindVar() and mti_FirstVar() resulted in a crash
       after restart.
     * mti_GetParentSignal() was incorrectly returning the parent of a
       signal (of direction IN) that was connected via a port mapping
       which included a type conversion or conversion function.
       mti_GetParentSignal() will now correctly return a NULL in this
       case.
   ______________________________________________________________________
   
   VITAL Defects Repaired in 5.7c
     * When a path delay from a bit of a bus to an output was specified,
       the wrong delay was selected in some cases. The 'last_event
       attribute used for the path delay was incorrectly updated.
   ______________________________________________________________________
   
   Mixed Language Defects Repaired in 5.7c
   ______________________________________________________________________
   
   General Defects Repaired in 5.7c
     * Coverage reports using the -lines option had incorrect headers for
       the branch information. The "True" and "False" branch headings
       were reversed.
     * A false "SDF Backannotation Successfully Completed" message was
       issued if the ModelSim application previously ran a simulation
       with SDF and then ran another simulation without SDF in the same
       invocation of the ModelSim application.
     * The simulator was not reporting errors that occurred when writing
       a checkpoint file (for example when the disk became full). The
       checkpoint file appeared to be written successfully but the
       restore reported errors about reading an incorrect number of
       bytes.
     * The command run -over did not perform the same action as step
       -over.
     * The vmake command now ignores objects compiled with -nodebug.
       Previously an incomplete make file was generated when a -nodebug
       compiled object was encountered.
   ______________________________________________________________________
   
   Mentor Graphics DRs Repaired in 5.7c
     * DR336547 - Wrong/invalid port connection not caught.
       When a Verilog module instantiated a VHDL entity with too many
       ports or parameters, no warning/error message was produced if the
       entity instantiated another Verilog module.
     * DR337391 - Crash on vcdstim.
       When using the -vcdstim option with a vcd file (not extended vcd)
       and a Verilog top level, the simulator crashed.
     * DR338795 - Memory leak loading design on Solaris.
       vsim could use all memory and then crash with a fatal memory
       allocation failure while loading a large design on sunos5 or
       sunos5v9 platforms.
     * ER338202 - Add optimization for inlined Verilog modules with
       distributed delays and no path delays.
       Verilog modules without path delays are uneffected by the
       delay_mode_path option and Verilog modules with path delays are
       not inlined. The new vsim option +nocheckDELAY when used in
       conjunction with delay_mode_path allows inlined Verilog modules
       with distributed delays and no path delays to be cell optimized.
     * DR337577 - mgls_asynch failed to reconnect to application which
       called it after an unexpected exit.
     * DR338791 - Getting a stack trace and the simulator exits with an
       error code 211.
     * DR336922 - Arithmetic function causes ModelSim to crash on
       Solaris.
       Calling a user defined log function with the same name as a
       built-in math function, but different argument types generated bad
       code. This resulted in a simulation crash.
     * DR338145 - vlog error: can't compile while ok with Modelsim 5.6e.
     * DR336171 - Multiple instances on one line render differently/wrong
       in Dataflow window.
       The Dataflow window displayed only the first of multiple
       primitives instantiated on the same line. (e.g. and
       (N1,A1,A2),(N2,B1,B2),(N3,C1,C2),(N4,D1,D2) ). You must recompile
       the module containing the instantiation to get the bug fix.
     * DR335967 - The examine command does not work properly in the
       Source window.
     * DR338083 - PLI Documentation incorrect.
ModelSim SE User's Manuel   page 133
   64-bit Solaris platform
        cc -v -xarch=v9 -O -I$//modeltech/include -c app.c
        ld -G -B symbolic app.o -o app.so
The "-I$/" is incorrect and should be just "-I"
     * ER335604 - LIC: Rqst that ModelSim PE does not block an OEM
       version of ModelSim.
   ______________________________________________________________________
   
   Known Defects in 5.7c
     * The following type of window geometry value, WxH-x-y, (for
       example, 600x300-10-20) set by PrefGeometry in the modelsim.tcl is
       not supported.
   ______________________________________________________________________
   
   Product Changes to 5.7c
     * The when command now supports the use of <, >, <=, and >= for
       time, real, and integer expressions. These operations can also be
       used with $now.
     * Changed the limitation that allows running only one instance of PE
       on a machine with a node-locked license so that one instance of
       any OEM can be run on the same machine where one instance of PE is
       running.
   ______________________________________________________________________
   
   New Features Added to 5.7c
     * Preference variables have been added for the Dataflow window
       (PrefDataflow) to control user's preferences of the following
       Dataflow window features:
    hidecells      -- Hide the internals of a library cell.
    inoutlocation  -- Place inout pins on bottom of symbol.
    keepdataflow   -- Keep previous contents when adding new nets or instances.
    lognets        -- Log nets when they are added to the Dataflow window.
    nosprout       -- Disable sprouting.
    selectenv      -- Change environment on selection in the Dataflow window.
    selequivnets   -- Selection of nets that traverse hierarchy will cause
                      all the equivalent nets to be selected.
    showhierarchy  -- Display connectivity using hierarchical instances.
    symlibs        -- List of symbol definition files.
     * There is now support for Verilog-XL system tasks $disable_warnings
       and $enable_warnings.
     * A new FLI function, mti_SignalIsResolved(), can be used to find
       out if a specified signal is resolved or not. For details please
       see the Foreign Language Interface manual.
     * Users can now access the vlog compile switch, -vlog95compat, from
       Modelsim's compile dialog box or by setting the value
       "vlog95compat = 1" in the modelsim.ini file. This change produces
       a compatibility issue with existing project files and requires
       that all existing projects be converted to the new version. The
       need for conversion is detected when opening a project and happens
       automatically. Since the new project format is not backward
       compatible, the user is prompted as to where a copy of the
       original project should be placed.


