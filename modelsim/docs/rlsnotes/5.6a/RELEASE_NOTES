
                   Release Notes For ModelSim Altera 5.6a
                                      
   
   
                                Apr 30 2002
   ______________________________________________________________________
   
     Product Installation and Licensing Information
   For brief instructions about product installation please visit the
   "install_notes" file on the Model Technology web site. The
   install_notes file can be viewed at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see
   the ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp
   
   
     Release Notes Archives
   For release notes of previous versions visit the release notes archive
   at: [3]http://www.model.com/support/default.asp
   or find them in the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes
   
   
     How to get Support
   
   This OEM product is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport
       
   
   ______________________________________________________________________
   
  Index to Release Notes
  
     [5]Key Information
   
     [6]User Interface Defects Repaired in 5.6a
   
     [7]Verilog Defects Repaired in 5.6a
   
     [8]PLI Defects Repaired in 5.6a
   
     [9]VHDL Defects Repaired in 5.6a
   
     [10]FLI Defects Repaired in 5.6a
   
     [11]VITAL Defects Repaired in 5.6a
   
     [12]Mixed Language Defects Repaired in 5.6a
   
     [13]General Defects Repaired in 5.6a
   
     [14]Mentor Graphics DRs Repaired in 5.6a
   
     [15]Known Defects in 5.6a
   
     [16]Product Changes to 5.6a
   
     [17]New Features Added to 5.6a
   ______________________________________________________________________
   
   Key Information
     * You must recompile or refresh your models if you are moving
       forward from 5.6 Betas or 5.5x or earlier release versions. See
       "Regenerating your libraries" in the ModelSim Start Here Guide for
       more information on refreshing your models.
     * Acrobat reader version 4.0 or greater must be used to read any
       .pdf file contained in ModelSim version 5.5c or greater.
     * Product changes and new features mentioned here are introduced in
       the 5.6a release. If you are migrating to the 5.6a release from
       5.4 and earlier releases, please also consult version 5.6 and 5.5x
       release notes for product changes and new features introduced
       during the 5.6 and 5.5 patch releases. The previous version
       release notes can be found in your modeltech installation at
       docs/rlsnotes.
     * Beginning with the 5.6 release, the hp700 platform executables are
       now built on HP-UX 11.0. If you want to use ModelSim in an HP-UX
       10.20 environment, you must use the hp700_1020 platform
       executables.
     * Beginning with the 5.6 release (on Windows platforms only)
       attempts to link in libvsim.lib or tk83.lib using the Microsoft
       Visual C++ linker using version 5.0 will fail with a message
       similar to:
       Invalid file or disk full: cannot seek to 0xaa77b00
       Microsoft Visual C++ version 6.0 should be used.
     * The following lists the supported platforms:
          + win32aloem - Windows 98, Me, NT, 2000, XP
          + sunos5aloem - Solaris 2.6, 7, 8
          + hp700aloem - HP-UX 11
   ______________________________________________________________________
   
   User Interface Defects Repaired in 5.6a
     * In some cases, on the rs6000 platform, it was not possible to
       single-step into VHDL or Verilog procedures, or set breakpoints at
       call statements. Due to improvements in machine code generation,
       expected patterns for procedure calls were not respected, and
       breakpoints could not be inserted. Expected patterns for procedure
       calls have been restored.
     * The restart command did not successfully re-log VHDL shared
       variables which resulted in unexpected behavior in the Wave and
       List windows.
     * When command line switches -wlftlim or -wlfslim were used, or
       modelsim.ini settings WlfTimeLimit or WlfSizeLimit were used, the
       resulting WLF file in some cases was unreadable and caused a
       simulation crash.
     * The -size option of the dataset snapshot command has been
       implemented.
     * The simulator crashed if items were deleted (including
       drag-n-drop) from the Wave window while waves were actively
       drawing.
   ______________________________________________________________________
   
   Verilog Defects Repaired in 5.6a
     * If a Verilog cell was optimized with an inlined module that
       contained a sequential UDP inside of that inlined module, certain
       state information was not updated properly after evaluation. This
       led to erroneous results.
     * The +acc=p compiler option failed to make registered ports
       visible.
     * Vector nets used in the delayed_data or delayed_ref arguments of
       $setuphold sometimes crashed the simulator if the design was
       compiled with -fast.
     * Some continuous assignments failed to sign extend the right-hand
       side expression.
     * The Verilog system function $value$plusargs was not returning a 0
       status when the specified plus argument was not found on the vsim
       command line.
     * Compiling with the -fast option resulted in false error messages
       in some cases when inlining a module instantiation containing
       unconnected ports.
     * A non-blocking assignment to a concatenation corrupted the
       left-most variable in the concatenation if the right-hand-side of
       the assignment was wider than the concatenation.
     * The SDF backannotation of a mixed design ran too slowly due to
       optimized annotation of large fanout nets not working properly.
     * $fread was returning at least 32 bits of data regardless of the
       target register width. $fread now returns only enough data to fill
       the target register.
     * A multisource interconnect annotation from a source port with no
       internal connections to a destination port with multiple drivers
       sometimes caused a crash.
     * Deterministic timing check conditions (i.e. &&& reset) were
       incorrectly evaluated as non-deterministic (i.e. satisfied with a
       reset of X).
     * There was a performance problem during design elaboration with
       Verilog gate-level libraries. Specifically, if the gate library
       was compiled with the -fast option to vlog, and the netlist that
       used the library was not, a particularly slow (and unnecessary)
       path of code was triggered. This problem could be significantly
       exacerbated by running without the design being local to the
       current machine.
     * Backannotation of SDF INTERCONNECTs to a continuous assignment
       statement input corrupted memory and sometimes crashed the
       simulator.
     * Applying multiple INTERCONNECT annotations to a port using
       +transport_int_delays always resulted in the shortest delay being
       selected. It now selects the correct delay.
     * Changed delay net delay calculation to insure that the correct
       data value is latched on negative setuphold/recrem limit
       boundaries when the timing check is satisfied. For example
       $setuphold(posedge CLK, D, -2, 50, notify_reg,,, dCLK, dD);
       A D change 2 time units after posedge CLK will cause the new D
       value to be latched.
     * Under certain conditions, a path pulse spike on an unspecified
       path crashed the simulator.
   ______________________________________________________________________
   
   PLI Defects Repaired in 5.6a
   ______________________________________________________________________
   
   VHDL Defects Repaired in 5.6a
     * An index expression for an array object whose element was of an
       access type accessing an incomplete type caused a compiler crash.
     * An implicit signal created by using `delayed in a generate
       statement caused a crash.
     * Synthesis checks incorrectly flagged the use of a signal's
       attributes (i.e. range, high, low, left, right, and reverse_range)
       as reads of that signal. The checks required that signal to appear
       in the sensitivity list. If the signal was not present in the
       sensitivity list a warning was generated.
     * Given a package P, if the statement use work.all occurred within
       the package body of P, the compiler could incorrectly report
       expressions as ambiguous. An example of an ambiguous error message
       is:
       2 subprograms named "deallocate" are valid in this context
     * When arrays constructed from record types were initialized with
       aggregates, the aggregate values were incorrectly computed by the
       compiler and stored in static memory. Since the simulator is free
       to reorder fields of records, the compiler's initialization could
       potentially cause incorrect initial values to be assigned to the
       arrays. This problem can be avoided within the source by
       specifying associations within aggregates. For example:
       ((field1 => X"0123", field2 => X"01"), (X"4567", X"23"));
       The compiler was changed so that arrays of records are initialized
       by the simulator.
     * The -nocheck switch is available in the PE version of vcom. It
       disables the generation of range and index checking code. However,
       the PE version did not include the necessary accompanying switches
       -noindexcheck and -norangecheck which selectively disable
       generation of index checking and range checking code
       (respectively). The PE version of vcom now accepts the
       -noindexcheck and -norangecheck switches.
     * On the HP platform only, when setting a breakpoint on the
       statement that is the body of an if statement, sometimes a crash
       occurred when failing the if condition. This occurred only when
       the if statement involved a compound expression with
       short-circuiting in which vectors were being returned by functions
       in the if expression. Furthermore, the statement on the body of
       the if expression had to be very trivial.
     * Assigning an aggregate others value to a NULL array could cause a
       crash. Example:
       sig(sig'range) <= (others => '0');
       where sig'range is (0 downto 1).
     * Attributes like 'range, 'high, and 'low of constant arrays could
       be evaluated incorrectly in globally static names or globally
       static expressions if the constants were initialized with the
       expression ( others => ...).
     * The VHDL compiler incorrectly gave an error when the type
       specified to the new operator was a resolved subtype. It was only
       an error when a resolution function was specified within the new
       operator.
     * The compiler attempts to initialize each variable with its first
       assignment when its initial value is not previously used in
       statements of a design unit. This transformation was incorrectly
       performed when initial values were used in other declarations. For
       example, in the process below, variable y was incorrectly assigned
       6.
p : process is
   x : integer := 3;
   y : integer := x;
begin
   x := 6;
       The compiler was changed to inspect other declarations before
       replacing the initial value of a variable by its first assigned
       value.
     * On the rs6000 platform, while single-stepping, the simulator would
       not return to a reactivated WAIT statement, but would instead
       proceed to the following executable statement. This behavior was
       different from single-stepping on other platforms.
     * When compiled with -O5, certain array assignments were incorrectly
       optimized. These array assignments occurred in subprograms and had
       identical types for the source and destination arrays. As a result
       of this error, the simulator sometimes crashed.
     * On the rs6000 plarform, in certain cases with large VHDL
       architectures a process variable could not be displayed in the
       Variables window nor could it be sucessfully reported on with the
       examine command.
     * If a component instantiation had a port map that contained a type
       conversion a bogus error occurred when configuring the component
       instantiation. The error message was similar to:
       Deferred constant (null) has not been initialized.
       Cannot reference deferred constant (null) before full declaration
       is elaborated.
       This occurred only when the architecture containing the component
       instantiation was instantiated multiple times.
     * In certain cases the compiler's optimizer incorrectly transformed
       statements fitting the pattern:
       IF ( a = b ) = false THEN ...
       This resulted in an unpredictable simulation failure.
   ______________________________________________________________________
   
   FLI Defects Repaired in 5.6a
     * mti_RestoreString() reported a restored byte count mismatch error
       when used in uncompressed mode or with the -load_elab switch.
   ______________________________________________________________________
   
   VITAL Defects Repaired in 5.6a
     * VitalExtendToFillDelay caused the invalid error, "Fatal:
       (vsim-3420) Array sizes do not match", when a design unit was
       loaded a second time.
     * The SDF complete message was incorrectly displayed for a design
       with negative setup and hold constraints where no SDF was actually
       applied.
     * Vital2000 negative constraint processing did not properly handle
       vectored generics.
   ______________________________________________________________________
   
   Mixed Language Defects Repaired in 5.6a
     * There were several cases in mixed language designs where the
       INTERCONNECT delays were not correctly back annotated.
   ______________________________________________________________________
   
   General Defects Repaired in 5.6a
     * WLF files could generate error messages of the form:
       "WLF Error: Unable to resolve type of signal alias \"%s\" (#%d).
       Ignoring signal."
       This message occurred if the formal and the actual were scalar
       types but the direction of the range constraints were different.
       For example, when one range was (0 to 10) and the other was (10
       downto 0). If a sufficient number of these error messages were
       generated, ModelSim crashed.
     * The examine command would list generics when -in or -ports was
       specified to include only certain kinds of signals.
     * init_signal_spy did not function correctly when a path separator
       other than a "/" or "." was used.
     * Passing arguments to the ModelSim Show command resulted in an
       error. For example, "Show /" produced:
       Error: (vsim-4006) Unexpected argument '/'.
     * On the RS6000 platform, LFS64 support of SDF files did not work
       correctly. You can now create and read in SDF files larger than 2
       Gig.
     * Loading a Tcl library on the rs6000 and rs64 platforms failed with
       the following error:
       Error: couldn't load file "testload.sl": readExports: bad magic
       number
     * ModelSim was not finding the list of possible character encodings.
       This prevented the change directory command (cd) from working in
       the Japanese version of Windows NT.
     * Starting ModelSim on UNIX systems in the installation directory
       resulted in ModelSim using a relative path to required TCL
       libraries. Using the cd command to change to a different directory
       prevented ModelSim from finding some TCL libraries. This also
       occurred when vsim was invoked with a relative path.
     * Updated the video poker TCL example to eliminate the usage of the
       Tix widget in order to be compatible with 5.6.
     * A memory leak occurred when compiling with the workspace area
       displayed.
     * When executing a vmap command from a do script or at the shell
       level where a warning condition resulted, the warning condition
       manifested as either an error condition or was ignored. On UNIX
       platforms an error was always generated and on Windows platforms
       the condition was ignored. Now when vmap encounters a warning
       condition it uses the proper severity level and exit status on all
       platforms.
     * The -vcdstim switch's functionality should not have driven Verilog
       outputs.
     * The tail of large blocks of allocated memory was not cleared
       properly during a restart elaboration with a design that had a
       very large vector port.
   ______________________________________________________________________
   
   Mentor Graphics DRs Repaired in 5.6a
     * DR 317806 - ModelSim crashing when viewing wlf file.
     * DR 319080 - Modelsim info header doesn't appear when executing
       "vsim".
     * DR 318631 - vcom error: ** Fatal: Unexpected signal 11.
     * DR 318897 - Using -o5 switch with vcom causes unexpected signal
       11.
     * DR 318954 - Error: 2 subprograms named "deallocate" are valid in
       this context.
     * DR 318992 - -norangecheck option not available in PE.
     * DR 319653 - Differences with the -fast and w/o the -fast option.
     * DR 319762 - crash during vsim when using sdf file.
     * DR 320123 - # ** Fatal: (vsim-3420) Array sizes do not match. Left
       is 8. Right is 4230737.
     * DR 319300 - Backslashes used to pad filenames now cause problem in
       5.6.
     * DR 319923 - vcd2wlf can not convert to wlf with $var type of
       realtime.
     * DR 318839 - Using the -o5 switch with vcom causes "**Fatal:
       (SIGBUS) Bad pointer access.".
     * DR 319367 - Missing delay in backannotation with hierarchy on
       mixed design.
     * DR 320024 - Simulator crashed when wlf file up to a certain size.
     * DR 319907 - Memory Leak when Loading Altera Nios IP.
     * DR 318715 - Excessive memory usage during multiple compiles.
   ______________________________________________________________________
   
   Known Defects in 5.6a
     * If a variable is declared in a procedure and added to the Wave
       window, it will not display results in the waveform pane. This is
       Mentor DR 305485.
   ______________________________________________________________________
   
   Product Changes to 5.6a
     * The modeltech licensing daemon is now supported on Linux.
     * The vcom -vital2000 flag is no longer needed. Simply map the IEEE
       symbolic library to point to the vital2000 actual library and
       recompile.
   ______________________________________________________________________
   
   New Features Added to 5.6a
     * Added support for use of -l option of vsim with -load_elab.
     * The View->Encoding cascading menu has been added. This menu
       contains a list of possible character encodings. Making a
       selection in this menu is equivalent to executing the encoding
       system newEncoding command from the ModelSim prompt. The default
       encoding is iso8859-1. When changed, the setting is stored in the
       Windows registry or .modelsim file on UNIX systems and restored
       for subsequent invocations of ModelSim. The current encoding is
       displayed in the menu with a check mark in Windows and a selected
       radiobutton on UNIX systems. The current setting may also be
       determined by executing the encoding system command.
     * The -direction option to the vcd dumpports and vcd files commands
       has been augmented to accommodate Verilog ports.
     * A new option, +dumpports+direction has been added to the vsim
       command line to modify the format of extended VCD files to contain
       direction information. This applies to ModelSim's vcd commands and
       to the $dumpports system task.


