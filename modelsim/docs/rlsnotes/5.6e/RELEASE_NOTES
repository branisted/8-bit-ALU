
                   Release Notes For ModelSim Altera 5.6e
                                      
                Copyright Model Technology, a Mentor Graphics
              Corporation company, 2002 - All rights reserved.
                                      
   
   
                                Oct 23 2002
   ______________________________________________________________________
   
     Product Installation and Licensing Information
   For brief instructions about product installation please visit the
   "install_notes" file on the Model Technology web site. The
   install_notes file can be viewed at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see
   the ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp
   
   
     Release Notes Archives
   For release notes of previous versions visit the release notes archive
   at: [3]http://www.model.com/support/default.asp
   or find them in the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes
   
   
     How to get Support
   
   This OEM product is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport
       
   
   ______________________________________________________________________
   
  Index to Release Notes
  
     [5]Key Information
   
     [6]User Interface Defects Repaired in 5.6e
   
     [7]Verilog Defects Repaired in 5.6e
   
     [8]PLI Defects Repaired in 5.6e
   
     [9]VHDL Defects Repaired in 5.6e
   
     [10]FLI Defects Repaired in 5.6e
   
     [11]VITAL Defects Repaired in 5.6e
   
     [12]Mixed Language Defects Repaired in 5.6e
   
     [13]General Defects Repaired in 5.6e
   
     [14]Mentor Graphics DRs Repaired in 5.6e
   
     [15]Known Defects in 5.6e
   
     [16]Product Changes to 5.6e
   
     [17]New Features Added to 5.6e
   ______________________________________________________________________
   
   Key Information
     * You must recompile or refresh your models if you are moving
       forward from 5.6 Betas or 5.5x or earlier release versions. See
       "Regenerating your Libraries" in the ModelSim Start Here Guide for
       more information on refreshing your models.
     * Acrobat reader version 4.0 or greater must be used to read any
       .pdf file contained in ModelSim version 5.5c or greater.
     * Product changes and new features mentioned here are introduced in
       the 5.6e release. If you are migrating to the 5.6e release from
       5.4 and earlier releases, please also consult version 5.6x and
       5.5x release notes for product changes and new features introduced
       during the 5.6 and 5.5 patch releases. The previous version
       release notes can be found in your modeltech installation at
       docs/rlsnotes.
     * Beginning with the 5.6 release, the hp700 platform executables are
       built on HP-UX 11.0. If you want to use ModelSim in an HP-UX 10.20
       environment, you must use the hp700_1020 platform executables.
       Please note that in order for FLI/PLI shared libraries to be
       loaded and executed correctly by the hp700 version of vsim, they
       must be compiled and linked on HP-UX 11.0. For the hp700_1020
       version of vsim, shared libraries must be compiled and linked on
       HP-UX 10.20.
     * Beginning with the 5.6 release (on Windows platforms only)
       attempts to link in libvsim.lib or tk83.lib using the Microsoft
       Visual C++ linker version 5.0 will fail with a message similar to
       "Invalid file or disk full: cannot seek to 0xaa77b00". Microsoft
       Visual C++ version 6.0 should be used.
     * There is a signature change in the 5.6b ieee math_real library. If
       you have a design that was compiled in 5.6 or 5.6a, which when
       loaded with 5.6b or greater vsim produces error messages similar
       to the following:
       # ** Error: (vsim-13) Recompile work.testbench because
       modeltech/linux/../ieee.math_real has changed.
       # Error loading design
       then you need to recompile your design with 5.6e vcom. This change
       is a result of a bug fix to improve the accuracy of the
       representation of floating-point constants. See the 5.6b release
       notes under VHDL Defects Repaired for details.
     * The WLF file format version has changed starting with ModelSim
       5.6c. Modelsim 5.6c and later releases will be able to read older
       WLF files. Modelsim 5.6b and earlier releases will NOT be able to
       read WLF files generated with ModelSim 5.6c and later releases.
       The WLF format changes improve the reliability of manipulating the
       Wave/List windows while the simulation is running.
     * The following lists the supported platforms:
          + win32aloem - Windows 98, Me, NT, 2000, XP
          + sunos5aloem - Solaris 2.6, 7, 8
          + hp700aloem - HP-UX 11
   ______________________________________________________________________
   
   User Interface Defects Repaired in 5.6e
     * In the Dataflow window, clicking on an implicit signal that was
       generated from a constant value (e.g., buf(out, 1'b0)) caused the
       display of a "Cannot find net" error message.
     * Compare expand bitwise/buswise for vectors did not work.
     * Using Hide Selected when in Show Hierarchy mode would not work if
       the selected instance was not the hierarchy block.
     * Dragging virtual signals into the Dataflow window produced errors.
       The Dataflow window now ignores virtual signals.
     * Hierarchical path names for instance array items in a dataset were
       not handled correctly. Paths to simulation instances were handled
       correctly. A stack trace dialog was displayed when clicking on an
       instance array item in the Structure window. Also, errors were
       displayed for commands entered in the Main window.
     * The PrefSignals(geometry) (and other Pref(geometry) variables) are
       used to set the default geometry of the particular window type.
       These variables were ignored in the modelsim.tcl file.
     * The Dataflow TraceX function failed when an input transition to X
       occurred at the same time as the output; i.e. no delay through the
       gate.
     * The Dataflow window produced errors when a signal containing a
       VHDL signal attribute was dropped into the window. The correct
       behavior is to ignore these implicit signals.
     * The Waveform Compare dialog did not correctly handle signals or
       regions whose names were extended identifiers.
     * Wave panes were saved in the wave format file in the order
       created, instead of the order they appeared in the Wave window.
       This resulted in the wave format file restoring the wave panes in
       a different order.
     * A dataset snapshot sometimes produced an assertion similar to:
       new_checkpoint: Assertion `(ch->flags & 0x01)==0' failed.
     * In some cases the WLF files created with the dataset snapshot
       feature were not readable and attempts to open them caused the
       simulator to crash.
     * The Dataflow window produced a Tcl error when performing a TraceX
       or ChaseX and no Wave window time cursor was active or if the
       cursor was beyond the end of simulation time (>$now). It will use
       $now in this situation and activate a wave cursor in the default
       Wave window.
   ______________________________________________________________________
   
   Verilog Defects Repaired in 5.6e
     * System tasks like $display crashed when given a complete net array
       as an argument.
     * Under optimization -O5, loops containing part-assignments to
       low-order bits of registers declared to be greater than 32 bits
       could be incorrectly optimized. In particular, uses of large
       registers might be hoisted out of loops, even though their values
       changed within the loops.
     * Added signed support for register arrays, including memories.
     * The Verilog 2001 LRM (Section 2.5) requires that the size of any
       numeric literal that does not have a specified size and has an
       unknown (x or z) high-order bit will be determined from its
       surrounding expression. Previously, unsized literals had length
       32. The compiler has been changed to extend an unknown value in
       the high-order bit to the full length of the expression containing
       the literal. This new interpretation can be inhibited by including
       the new switch -vlog95compat on the vlog command line.
     * When single-stepping through while and for loops, some loops could
       be constructed so that the cursor would skip to a statement within
       the body of the loop instead of moving to the loop's terminating
       condition. The compiler was not emitting line number information
       on loop terminating conditions. Consequently, the user interface
       would move the cursor to the line number of the instructions
       emitted prior to the terminating condition. The compiler has been
       changed to emit line number information prior to code for the
       terminating condition. This change will affect execution counts
       when performing line coverage. Line coverage will now correctly
       include evaluation of terminating conditions and remove counts
       from lines that were incorrectly identified with terminating
       conditions.
     * Delayed inputs (delayed versions of inputs in $setuphold/$recrem
       statements) could have pulses shorter than the propagation delay
       extended.
     * The vlog compiler sometimes crashed when a parameter was used for
       the index of an indexed part-select in a module port list.
     * When compiling a cell library with vlog -fast, distributed delays
       were sometimes ignored. This happened for cells which were
       inlined, had `delay_mode_path in effect, and did not have a
       specify block with module path delays.
     * Forcing a verilog register with a delay of 0 sometimes caused
       incorrect evaluation of statements sensitive to the register. The
       statements were incorrectly evaluated at the next timestep where
       there was an event instead of being evaluated at the current
       timestep. For this to occur, there must have been no pending
       events or processes. If there were pending events or processes,
       the statements would be evaluated correctly.
     * Improved Verilog pulse filtering to correctly handle pulses
       (including negative pulses) in more complex waveforms.
     * A delay expression containing a function call crashed the
       simulator.
     * The vlog -compile_uselib switch sometimes crashed when compiling a
       very large design.
     * The simulator sometimes crashed when assigning to an out of bounds
       register part-select.
     * The fall delays of SDF INTERCONNECT statements were not correctly
       annotated to the inputs of optimized Verilog cells when
       +multisource_int_delays was specified.
     * Optimized Verilog cells did not choose the correct conditional
       specify path.
     * Optimized Verilog cells didn't report the annotated IOPATHs
       correctly (when +sdf_verbose was specified).
     * The simulator crashed when an optimized Verilog cell was specified
       as a top level design unit.
     * An x or z assignment with a decimal base (e.g. 4'dx or 'dz) was
       assigning 1 or 0, respectively. (This is a special case clarified
       in the 1364-2001 Standard which allows for a single x or z
       specified for a decimal base.)
     * An expression containing the && or || operator and at least one
       constant operand resulted in a compiler internal error if the
       expression was a port connection.
     * Accesses of parameterized descending non-zero based memories were
       sometimes miscalculated for modules compiled without the -fast
       option.
   ______________________________________________________________________
   
   PLI Defects Repaired in 5.6e
     * The PLI function acc_set_value() supported the setting of
       bit-selects of registers only with a delay model of accNoDelay.
       This limitation is not part of the IEEE Standard 1364 and no
       longer exists in ModelSim.
   ______________________________________________________________________
   
   VHDL Defects Repaired in 5.6e
     * With -O5 optimizations, if a call to a function or procedure in a
       package modified one of its parameters and was within a loop,
       scalar optimizations could be performed on the modified
       parameters, possibly undoing the effects of the function or
       procedure. Now -O5 optimizations are not performed on loops with
       calls to functions and procedures in packages.
     * An integer literal containing a signed exponent part (the sign
       must be +) did not include the exponent in the value of the
       integer. For example, 2e+008 was evaluated as 2, rather than
       200000000. The compiler was changed so that integers can have
       signed exponent parts, as well as exponent parts without a sign.
     * When compiling a configuration declaration, the following warning
       is now generated if the configuration name is the same as the
       entity name:
"Configuration config_name is replacing entity with the same name."
     * The ranges of the return values of the internally accelerated
       To_StdLogicVector functions did not match the ranges of the return
       values of the std_logic_1164 package VHDL functions.
     * The VHDL compiler was incorrectly reporting an error while mapping
       actual parameters to formals when the source contained named
       associations. This error occurred only in cases where a formal
       parameter was a nested array/record (e.g., an array of records, a
       record of records, etc.) and the parameter order did not group all
       elements of the nested type together.
     * In some cases ports of type RECORD crashed the simulator. The
       crash occurred when the record type consisted of only one scalar
       element. The port map uses subelement association and the actual
       must be a scalar signal that is not part of another composite.
     * The splitio command would not always create an output VHDL array
       signal with the correct range. In some cases the range was in
       reference to the actual signal in the instantiated instance
       instead of the VHDL array signal. The incorrect behaivor was
       visible in the Signals window or VCD files.
     * Type descriptors of string literals could be uninitialized when:
         1. The literals had the same length.
         2. The literals were associated to ports that had constrained
            types.
         3. The literals occurred within direct entity instantiations.
         4. The first entity instantiation was within a conditional
            generate statement whose condition at elaboration time
            evaluated to false, thereby cancelling the instantiation and
            leaving all shared type descriptors uninitialized.
       These symptoms can be eliminated by leaving the ports
       unconstrained.
     * If the default binding rules selected an entity that was
       out-of-date with respect to its dependencies, vcom would issue an
       error message but the compilation would complete successfully. The
       successful compilation would make the default binding OPEN. The
       compiler now issues a warning about being unable to load the
       default entity.
     * The simulator did not catch out-of-date dependencies in some
       cases. If an entity and its architecture both had a dependency on
       a package that changed, and only the entity was recompiled, the
       architecture would load without any error messages. In some cases
       this resulted in a simulator crash.
     * vsim crashed due to a stack overflow which could occur if a
       subprogram contained declarations of record or array variables.
       The overflow would occur if the variables were declared to be very
       large. Although it is still possible to overflow the stack, the
       chances have been reduced.
     * Pulse rejection behavior of VHDL "reject" was not working
       correctly as of the ModelSim 5.6 release.
   ______________________________________________________________________
   
   FLI Defects Repaired in 5.6e
     * The FLI now ensures that the VPI is properly initialized before
       calling the LoadDone callbacks.
   ______________________________________________________________________
   
   VITAL Defects Repaired in 5.6e
     * The VitalMemoryViolation routine sometimes failed.
     * Designs containing SDF-annotated accelerated VITAL models did not
       checkpoint and restore properly. After a cold restore, incorrect
       delays would sometimes be chosen. This problem also occurred when
       using the -elab/-load_elab options.
   ______________________________________________________________________
   
   Mixed Language Defects Repaired in 5.6e
     * If a VHDL top level had a Verilog parameterized array of instances
       under its hierarchy, the simulation crashed.
   ______________________________________________________________________
   
   General Defects Repaired in 5.6e
     * The vsim option -keepstdout can now be specified with the
       -load_elab option.
     * Setting the PathSeparator to a backslash "\" caused failures and
       possibly ModelSim to hang. Now an error is reported if an attempt
       is made to set the PathSeparator to a backslash "\" character and
       the value is forced to a forward slash "/".
     * A "Memory Failure" could occur when using Signal Spy on an array
       in a mixed HDL design.
     * When doing a restart of a vsim -load_elab design, the original
       vsim arguments are now used to set up SDF files, if any, for
       back-annotation of the design.
   ______________________________________________________________________
   
   Mentor Graphics DRs Repaired in 5.6e
     * DR 277272 - The VHDL compiler incorrectly determined that the type
       descriptor of the string was identical to the type descriptor of
       the slice, because they were the same lexically. Because the upper
       bound of the slice was determined by a non-static variable, the
       slice was not identical to the string. The compiler has been
       changed to perform lexical comparisons on type descriptors only
       when they are static.
     * DR 328141 - Wave panes were saved in the wave format file in the
       order created, instead of the order they appeared in the Wave
       window. This resulted in the wave format file restoring the wave
       panes in a different order.
     * DR328241 - Optimization problem with "posedge A or negedge A".
     * DR 326845 - The alignment field in the button_adder dialogue does
       not work.
     * DR 328625 - Cannot compare regions that use extended identifiers.
     * DR 329058 - The shift command does not work.
     * DR 321992 - _lock file problems when running compile script.
       The simulator crash that caused the lock file problem was
       extremely rare, (a recursive stack overflow), and caused the
       compiler to not be able to catch the signal and clean up after
       itself.
     * DR 329692 - ModelSim crashes when using "dataset snapshot" with
       option "-mode sequential."
     * DR 329917 - Chase X doesn't work correctly and crashes on 64-bit
       ModelSim.
     * DR 329927 - Latest LEON code fails in 5.6d, works in 5.6b.
     * DR 329939 - Problem with VCD generation.
       There are three new options to the vcd2wlf utility for splitting
       Extended VCD port values into their corresponding input and output
       components by creating two signals instead of just one in the
       resulting WLF file. By default, the new input-component signal
       keeps the same name as the original port name while the
       output-component name is the original name with an "__o" appended
       to it. The new options are:
          + -splitio
          + -splitio_in_ext extension
          + -splitio_out_ext extension
       The latter two options allow the default extension to be changed.
     * DR 328621 - Vsim crashes when loading ROM.
       vsim crashed due to a stack overflow which occurred if a
       subprogram contained declarations of record or array variables.
       The overflow occurred if the variables declared were very large.
       Although it is now still possible to overflow the stack, the
       chances have been reduced.
     * DR 291817 - wrong "ERROR: Recompile ... because ... changed."
       Two issues were addressed in this DR.
       If the default binding rules selected an entity that was
       out-of-date with respect to its dependencies, vcom would issue an
       error message but the compile would complete successfully. The
       successful compile would make the default binding OPEN. The
       compile now issues a warning abound being unable to load the
       default entity.
       The simulator would not catch out-of-date dependencies in some
       cases. If an entity and its architecture both had a dependency on
       a package that changed, and only the entity was recompiled, the
       architecture would load without any error messages. In some cases
       this could result in a simulator crash.
     * DR 308180 - "Define Clock" window has unnecessary restrictions on
       entering values in fields.
   ______________________________________________________________________
   
   Known Defects in 5.6e
   ______________________________________________________________________
   
   Product Changes to 5.6e
     * The concatenation operator produces results that follow 1993 LRM
       rules for concatentation, independently of the -87 or -93 vcom
       switches. Starting with release 5.6, the result of a concatenation
       has an array index range that adheres to the 1993 rules as denoted
       in "7.2.4 Adding operators" in the LRM. In past releases, the
       array bounds of a concatenation were computed following the 1987
       rules, sometimes deviating from them. Since the 1987 rules were
       not well formed, the 1993 rules are being followed now. This will
       have its most noticeable impact when the result of a
       concatentation is passed as the actual to a formal with an
       unconstrained array type, since the formal takes on the bounds of
       the actual in this case.
     * The Dataflow window automatically hides the contents of instances
       that have either 'celldefine, VITAL_LEVEL0, or VITAL_LEVEL1
       attributes. To display the contents of a particular instance,
       select the instance and choose Navigate->Show Selected from the
       menu. To disable automatic cell recognition, unselect the "Hide
       cells" in the Tools->Options dialog box.
   ______________________________________________________________________
   
   New Features Added to 5.6e
     * There are three new options to the vcd2wlf utility for splitting
       Extended VCD port values into their corresponding input and output
       components by creating two signals instead of just one in the
       resulting WLF file. By default, the new input-component signal
       keeps the same name as the original port name while the
       output-component name is the original name with an "__o" appended
       to it. The new options are:
          + -splitio
          + -splitio_in_ext extension
          + -splitio_out_ext extension
       The latter two options allow the default extension to be changed.
     * Signal Spy (init_signal_spy and init_signal_driver) now supports
       spying or driving the following in VHDL-based designs:
          + Records
          + Elements of Records
          + Arrays of Arrays
          + Multi-dimensional Arrays
          + Arrays of Records
          + Arrays of Reals
          + Arrays of Time
       This new functionality is limited in that you cannot reference a
       bit or slice of the above arrays, as well as a bit or slice of an
       element of a record. The prior limitation, with respect to
       referencing a bit, will not exist in the 5.7 release of ModelSim.
     * In the recent release of ModelSim, the Dataflow window is
       popped-up when a double-click is done in the waveform pane of the
       Wave window. This is to display the signals driving process(es).
       It's useful, but some customers asked that there be a way to
       disable this link of both windows. The
       PrefWave(ShowDriversEnabled) preference was added to turn this
       link on or off. This preference can be modified from the Wave
       window menu "Tools->Window Preferences".


