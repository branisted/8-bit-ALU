
                   Release Notes For ModelSim Altera 6.3e


                                Feb 02 2008

               Copyright 1991-2008 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
   Corporation. The original recipient of this document may duplicate this
  document in whole or in part for internal business purposes only, provided
  that this entire notice appears in all copies. In duplicating any part of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.

   TRADEMARKS: The trademarks, logos and service marks ("Marks") used herein
    are the property of Mentor Graphics Corporation or other third parties.
   No one is permitted to use these Marks without the prior written consent
    of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as a
     source of a product, but is intended to indicate a product from, or
  associated with, a particular third party. The following are trademarks of
   of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.

   End-User License Agreement: You can print a copy of the End-User License
         Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.3e

     [7]Verilog Defects Repaired in 6.3e

     [8]PLI Defects Repaired in 6.3e

     [9]VHDL Defects Repaired in 6.3e

     [10]FLI Defects Repaired in 6.3e

     [11]VITAL Defects Repaired in 6.3e

     [12]SystemC Defects Repaired in 6.3e

     [13]Assertion Defects Repaired in 6.3e

     [14]Mixed Language Defects Repaired in 6.3e

     [15]Coverage Defects Repaired in 6.3e

     [16]General Defects Repaired in 6.3e

     [17]Mentor Graphics DRs Repaired in 6.3e

     [18]Known Defects in 6.3e

     [19]Product Changes to 6.3e

     [20]New Features Added to 6.3e
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + linuxaloem - RedHat 7.2 and higher.
   ______________________________________________________________________

   User Interface Defects Repaired in 6.3e
     * When displaying a zoomed out set of signals, the display could end
       before the end of the recorded data. The signals appeared when the
       display was zoomed in. The data now displays correctly.
     * The zoomed out view of signals could sometimes miss transitions. Zooming
       in showed the correct display. The zoomed out view is now correct.
     * The Delete menu pick and Delete key did not work in the Dataflow window.
     * The  env  forward/back buttons and env -forward/-back command line
       switches  did not always work correctly. Also in certain cases the
       current environment was not put onto the stack, so you could not go
       forward or back to it using the buttons or switches.
     * Renaming an open dataset and then right-clicking in the Structure window
       for that dataset caused the "close" menu item to break. In this case the
       wrong (old) dataset was referenced and an error message was issued.
     * The compare end command would cause a crash if the List window contained
       a compare object.
     * Expanding a packed structure in the Wave window caused a crash.
     * The Project status icon now correctly reflects the status following a
       compile. Projects now correctly test whether a file has been changed
       externally. The frequency in which a Project tests files defaults to 5
       seconds,  however,  this  frequency  can  be  changed  by  setting
       ProjectStatusDelay within the project section of the MPF file. The value
       is described in millseconds. For example, the following setting would
       cause disk files to be tested every 7 seconds:
       [project]
       ProjectStatusDelay 7000
     * Attempting to format a vector waveform as "analog" would fail if the
       waveform data contained non-numeric data, such as an "X". This would
       only fail when using the Format > Analog (automatic) menu item.
     * During restart a message similar to "vsim.wlf: permission denied" could
       be written to a shell window. This was only a nuisance and did not
       affect WLF file data nor simulation results. This only effected the
       Windows platform.
     * Annotated values in the Source window would remain after this simulation
       is  exited  with  a quit -sim command, until the Source window was
       scrolled, which would cause a redraw and the values would disappear. Now
       the values disappear when the quit command is executed, as expected.
     * The UCDB testbrowser now supports filenames with spaces.
     * The UCDB testbrowser now supports filenames containing curly braces
       "{}".
     * Source annotation did not display values inside VHDL generate blocks.
     * The contrast in the Wave window scrollbar has been improved for better
       visibility.
     * The Locals window does not update correctly when the size of a dynamic
       object changes.
     * Virtual signals or functions could cause a crash if evaluation of the
       signal or function resulted in an error (e.g. divide by zero). Now the
       resulting value will be reported as "EvalError".
     * The Watch window item properties dialog box does not always display the
       correct radix for the item.
     * The add dataflow command had silently ignored unmatched objects. It now
       emits an error message in that case.
     * Tcl virtual functions were failing when multiple-dimensional data was
       used, such as verilog memory, without any error message. Now an error
       message is provided.
     * Unnamed final blocks were incorrectly given an implicit name beginning
       with #FORCE# instead of #FINAL# when displayed in the GUI.
     * The colorization threshold information for Test Browser and Test Tracker
       now is saved in the .modelsim file.
     * The svverification license problem with the -gui option has been fixed.
     * A virtual function used to map a single bit value into an enumerated
       virtual type returned the wrong enumerated value.
     * Fixed problems with GUI virtual functions that had VHDL bit_vector type
       signals as arguments.
     * The vopt dialog box ("Design Optimization...") will execute an invalid
       vopt command when other vopt options are specified.
     * Virtual  expressions  that used the (context) qualifier along with
       relative pathnames that contained extended identifiers would sometimes
       fail to accept the expression. This problem has been resolved.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.3e
     * Corrected behavior of `__FILE__ when used within a macro.
     * Fork-Joins were overly optimized when the body contanied a 'wait fork'
       statement.
     * For Verilog configurations: When using vopt, an instance that is a child
       of a configured cell will now inherit the configured cell's liblist, and
       if  the  liblist  is  not present, searching will now occur in the
       configured cell's library. Without vopt, the simulation now searches
       upward in the context tree for a liblist attached to a configured cell.
     * Returning a value from a void function by way of assignment to the void
       function name was not reported as an error.
     * A call to either $fdisplay or $fwrite resulted in a simulator crash in
       an optimized design if calls to the same system task call instance
       alternated between a "file descriptor" and a "multi channel descriptor"
       for the output file argument if the mcd specified either stdout or
       stderr.
     * External constraint blocks that are declared with a constraint prototype
       but have no defined body will now elicit a warning from vlog and vopt.
       Previously, vlog and vopt would issue an error if a constraint prototype
       without a corresponding constraint block body was found. For strict
       SystemVerilog LRM compliance, the "-error 2227" option may be specified
       on the vlog or vopt command line to promote the warning to an error.
     * After being compiled, refreshing a protected design for the -novopt flow
       could result in refresh failures.
     * In the -novopt flow, association by name to a non-existent parameter
       would generate a warning rather than an error.
     * If  multiple sequential blocks nested in a common scope used class
       variables with the same name, incorrect null dereferences could result.
     * Failed  to  issue  an  error when the left hand side of a blocking
       assignment was a part select or bit select of a clocking block output.
     * Tasks invoked using the function void cast form were not being caught as
       illegal. This error may be suppressed by using "-suppress" with the
       reported error number.
     * Dynamic casts from a base handle to a derived handle were not being
       allowed when the base handle contained the value null.
     * An always_comb/always_latch missed activations in some cases if the
       implied sensitivity included references to elements of unpacked arrays
       (memory elements).
     * vlog crashed when a parameter value involved a function call with named
       arguments using the default value. For example:
       parameter p = func(.in());
     * A constant propagated through a continuous assignment to an "always"
       sensitivity that suspends at time zero failed to execute the always
       construct at time zero. Although this is a race condition, the intention
       is to behave the same as in an unoptimized design.
     * A  large  delay scaled according to the simulator resolution limit
       overflowed a 64-bit integer in some cases, resulting in a smaller or
       negative delay.
     * The -G vopt option attempted to override a localparam. A localparam may
       not be overridden by any method, and the -G vsim option was already
       enforcing this rule.
     * vopt failed to correctly identify the library containing an interface if
       the  library was specified by a "use" or "liblist" clause within a
       configuration.
     * A hierarchical force of a port in an optimized design had the effect of
       propagating the forced value to other ports in the design not connected
       to the forced port if the highest level connections were identical
       literals or other non-net expressions.
     * Improved support for mixed ANSI-style Verilog ports.
     * The last backslash character of Verilog string literals having backslash
       at  the begining and end positions were getting converted to space
       character.
     * "vl_save_stack_on_wait" internal error occured when using multiple
       complex delay expressions involving automatic variables.
     * The  simulator  sometimes crashed when disabling a fork block that
       contained the code executing the disable statement.
     * The simulator would always select the first matching instance clause of
       a configuration in determining a liblist for library searches. The
       simulator has been changed so that it will select the most specific
       instance clause that matches the current instance path.
     * In certain cases, when a parameterized class had a type parameter with a
       default that was itself a parameterized class specialization, some types
       were incorrectly determined. As a result, incorrect assignment errors or
       other type incompatibilities could be reported.
     * An empty named port connection in a bind statement can cause vsim to
       crash in novopt mode.
     * A bug introduced with 6.3a prevented a enum type port to be connected
       with an element (of the same type) of a struct.
     * vopt did not generate an error message when bind is in compilation unit
       scope and the target of bind does not exist in the design.
     * Simultaneous data and ref events to setuphold or recrem could cause a
       setup or recovery timing check violation to not be reported.
     * When importing an SV package, if a VHDL package with the same name was
       encountered in a different library, the SV package import would fail.
     * In some cases typically involving nested generate loops and conditions,
       an optimized design would fail to elaborate.
     * Changes were made to the compiler and simulator clarifying an aspect of
       interpretation of configurations. The default liblist will now be used
       to  find  design units that are below an instance which matches an
       instance  or  cell  clause, where no other liblist clause applies.
       Previously, searching only occurred in the same library that contained
       the cell described in an applicable use clause. For example, in the
       presence of clause "instance t.i use l.c", search for a cell whose path
       is  t.i.j  will take place in the library specified by the default
       liblist, which may be different from library l.
     * A blocking assignment to a hierarchical reference in a program block was
       incorrectly reported as an error.
     * Fixed incorrect dependency computation for vmake with Verilog include
       files.
     * Vsim crash on elaboration error when an array of instances is present in
       the design.
     * When -v2k_int_delays was specified, "write timing" command used the
       higher level net name (hiconn) to refer to the MIPD port. This was
       harder to correlate than the port name (loconn).
     * Primitives connected to input/inout ports are usually optimized to
       become behavioral assign statements. This caused incorrect MIPD and
       specify path behavior. Now a warning suggests the use of -v2k_int_delays
       or compiled SDF when this condition is detected.
     * In ModelSim PE version, $stop did not cause proper flushing of files
       written through $fwrite and similar systasks.
     * By default suppress the warning "(vsim-PLI-3691) Expected a system task,
       not  a system function '$system'." when using $system and $systemf
       without setting the return values.
     * SystemVerilog tasks and functions with default argument values generated
       internal  errors  if  the  defaults referenced the values of other
       arguments. This now reports a more useful error during compilation.
     * Indexing into an array of virtual interfaces in a class method would
       sometimes cause vsim to crash with a segmentation fault.
     * SystemVerilog enum variable types were not allowed within a constant
       function. This is now supported.
     * The "wait fork" statement in SystemVerilog should only wait for the
       immedite child subprocesses, but was instead waiting for all child
       subprocesses.
   ______________________________________________________________________

   PLI Defects Repaired in 6.3e
     * Fixed  crash in acc_handle_by_name when trying to get handle to an
       element of instance array through a ref handle.
     * A problem when vpi_get_value() was used on packed elements of sparse
       arrays has been fixed.
   ______________________________________________________________________

   VHDL Defects Repaired in 6.3e
     * When performing tcheck commands on VITAL designs, the simulator searches
       for VITAL processes that perform timing checks. In this search, a VITAL
       process was assumed to perform timing checks only if its label contained
       the string "vital". This restriction has been removed.
     * When generating an optimized design that references an optimized black
       box design the optimization could fail with the following error:
       # ** Error: (vopt-23) Unable to change to directory path "". No such
       file or directory. (errno = ENOENT)
       # ** Fatal: Unexpected signal: 11.
     * An optimization sometimes mistakenly reordered multiple assignments to
       the same signal in a for loop.
     * vopt  did  an  extra size check in a concurrent conditional signal
       assignment even when a waveform would never be assigned. As a result of
       fixing this, some vcom/vopt compiler errors produced when checking
       concurrent signal assignments have become warnings, with errors being
       flagged during elaboration or run time.
     * Instantiation of a component with non-existent ports in the default
       binding  will  no  longer  cause  vopt  to  issue an error, if the
       instantiation is within a generate block whose condition or range cannot
       be determined.
     * By default, range and length violations detected within subprograms will
       result in warnings, rather than errors. The new command-line switch,
       -noDeferSubpgmCheck,  will  cause  range  and length violations in
       subprograms to be reported as errors. To dispense with the use of a
       command-line switch, property NoDeferSubpgmCheck has been added to the
       modelsim.ini  file,  controlling the way in which range and length
       violations in subprograms are reported.
     * An  elaboration  error  could occur if a clocked process contained
       statements that read a slice or index of an array signal and the slice
       or index was out of range for that array.
     * vsim would crash when a signal array fanned out to multiple slices of a
       subarray.
     * When a VHDL configuration contains a block specification that is a
       generate statement label in the form of an index or slice expression,
       some  of  the iterations of a generate loop may not be configured.
       Unconfigured  component  instantiations will use default bindings.
       However, vopt did not recognize that entities associated (by default)
       with components could be loaded, and did not generate code for these
       entities.  In  this  case, during elaboration of the design by the
       simulator, the following error would be reported.
       # ** Error: (vsim-3171) Could not find machine code ...
     * Fixes  a  crash in vcom while optimizing a wait statement, where a
       subelement of an unconstrained array subprogram parameter appears in an
       expression describing an edge sensitive wait. For example:
       wait for s[3]'event and s[3] = '1'
     * Specifying the +acc switch to vopt with an instance path whose last
       element is the name of a VHDL design unit could cause vopt to crash.
     * The vopt +floatgenerics command-line option was not working. Now it is
       fixed, and fully equivalent to the +floatparameters option.
     * In rare cases, a signal array driven in a lower block failed to have its
       value propagated through instances of other block(s) instantiated at a
       higher level.
   ______________________________________________________________________

   FLI Defects Repaired in 6.3e
   ______________________________________________________________________

   VITAL Defects Repaired in 6.3e
   ______________________________________________________________________

   SystemC Defects Repaired in 6.3e
     * Fixed sccom error related to sc_logic while merging debug databases from
       different libraries at link time(sccom -link).
     * Fixed sccom error related to use of sc_fifo and tlm_fifo while merging
       debug databases from different libraries at link time(sccom -link).
     * Structures with members of type embedded structures across the SC/SV
       function call interface (DPI-SC) caused vlog to crash.
     * Added error message in vlog when a SystemC type is incorrectly used
       across the SC/SV function call interface (DPI-SC).
     * Corrected  an  issue  with  SCV  that  would result in non-uniform
       distributions  of  values  generated by the constraint solver when
       disable_randomization() is used.
     * When a call to SystemC control/observe was made while the simulation was
       already running, values of signals were not mirrored correctly in some
       cases.
     * scgenmod crashed when it was provided a SystemC module as input. This
       has been fixed and now scgenmod will issue an error message for this
       case.
   ______________________________________________________________________

   Assertion Defects Repaired in 6.3e
     * Corrected the wave assertion active thread monitor and count, and the
       assertion  browser disable count when assertions are disabled by a
       "disable iff" statement. Also the counting behavior was changed so that
       if an assertion is disabled from the vish command line or gui, the
       attempt count will no longer increase until the assertion is re-enabled,
       rather  than  the  previous behavior where the disable count would
       increment.
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.3e
     * If a Verilog configuration is instantiated within a VHDL architecture,
       and the Verilog configuration contains a "use" clause with an incorrect
       library specification, the simulator would print an error message and
       incorrectly print the library name as "null".
     * A VHDL signal connected to the input of a Verilog module failed to
       update the value of the input net in some cases if that input net was
       also connected to the output of a lower level module driven by a specify
       path delay.
     * A VHDL signal connected to a Verilog "out" or "inout" port failed to see
       the driving value of the port if the port was "shorted" or "aliased" to
       another driven net via port collapsing.
     * Design  unit  and  library  locking  has  been implemented through
       enhancements to the vlib command. The -lock switch specifies a design
       unit to lock. The -locklib switch locks the target library. Note that
       actual  file permissions are not affected by these switches. These
       switches prevent the compilers from recompiling or refreshing the target
       design unit or library.
       In conjunction with implementation of these switches, fixes were made to
       the compiler, so that if a design unit's directory has write access
       disabled  (an  unapproved method of preventing recompilation), the
       compiler will no longer corrupt the library's _info file.
     * SystemVerilog net types (wire ) were not correctly handled in scgenmod
       and gen_xml utilities.
   ______________________________________________________________________

   Coverage Defects Repaired in 6.3e
     * In  coverage  view  mode,  rows in the Workspace hierarchy browser
       corresponding to generate scopes could have erroneously empty coverage
       columns.  This  would occur with generate scopes named with square
       brackets (e.g., "gen[0]"). The fix involved a patch to the UCDB API
       function ucdb_MatchScopeByPath().
     * The  coverage report -html command, generating an HTML report from
       coverage view mode would incorrectly tabulate code coverage for some
       designs (those with single-instance design units) in its Design Coverage
       Summary". Note that vcover report -html generating from a standalone
       UCDB file would be correct for the same case.
     * Fixed some problems with code coverage data not being available for
       instances within generate blocks.
     * Viewing UCDB files saved with a previous (6.2) version did not display
       coverage information for all instances.
     * Fixed a crash that could happen for expressions and conditions within
       generate blocks.
     * Opening a UCDB file using the Windows version of ModelSim or Questa and
       the file was created using a 64-bit version of ModelSim or Questa will
       result in a crash.
     * The coverage report by-instance showed full file contents for every
       generate block.
     * Increased toggle coverage accuracy. We previously had been ignoring
       transitions to and from X. This caused us to ignore valid transitions
       within the same time step that had X as an intermediate state. The
       result was that counts could be incorrectly low, or even incorrectly
       high. Transitions that result in an X at the end of a time step, are
       still not counted, however, because currently there are no bins in which
       to put the counts.
     * Fixed a bug in the GUI in which counts for code coverage items within
       generate blocks could get erroneously incremented with each incremental
       run,  even though the code was no longer being executed. Data from
       coverage report was still correct, however.
     * User-defined "test data record" attributes saved to a UCDB file were
       cleared after saving the file. They are now preserved across coverage
       save commands. Additionally, the test name is no longer cleared after a
       save when it is set explicitly by the user with coverage attr -test.
     * Fixed a problem in which with code coverage on, simulation results could
       be  incorrect. Condition and expression coverage were not properly
       handling VHDL record field references.
     * Fixed a problem in which expression and condition coverage would not
       recognize SystemVerilog record expressions.
     * Fixed a problem in which condition and expression coverage failed to
       recognize when a function call returned a non-scalar result, causing
       incorrect simulation results.
     * Added warning messages when coverage conditions or expressions were
       being ignored due to too many UDP rows, or an internal error.
   ______________________________________________________________________

   General Defects Repaired in 6.3e
     * When  logging  signals  with  complex  data  types  such as packed
       multi-dimensional  arrays,  the  simulator  could report errors in
       getByteOffset() and possibly crash. The errors have been fixed and error
       recovery has been built into the test.
     * Simulations  which are checkpointed or interrupted by JobSpy could
       occasionally hang or at least pause (if they were running a .do file).
     * The  transaction recording engine now requires escaped or extended
       identifiers for names of databases, streams, transactions or attributes
       if the names includes spaces.
     * vmake would crash if run on a library that contained optimized designs
       that in turn had Verilog modules as sub-components.
     * When using the "black-box" feature of vopt, the simulator could crash
       with a "design unit not found" error, with the reported string being
       corrupted.
     * If multiple -G switch on vsim refer to the same generic or parameter,
       the simulation would crash.
     * Fixed a crash due to the logging of extremely long messages to the WLF
       file.
     * vopt is not able to recognize all the sequential elements in the design
       block.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.3e
     * dts0100293452 - Documentation: Example VCD output from vcd dumpports --
       table does not match eVCD output.
     * dts0100397403 - Simulator couldn't generate a makefile on vopt flow.
     * dts0100416493  -  Issue  with  wait-fork  in  a nested fork-join -
       fork-join-none.
     * dts0100418603 - Show Annotated Values doesn't work properly.
     * dts0100419627 - Crash when division by zero in virtual function.
     * dts0100426800 - VHDL simulation gives different results depending on
       whether coverage is enabled or not.
     * dts0100434244 - Simulator crashes every time during restart.
     * dts0100434342 - Source annotation not working for if-generate blocks.
     * dts0100436573  - The "add data" command silently ignores unmatched
       objects.
     * dts0100438159 - Virtual types does not display as expected in the Wave
       window.
     * dts0100440322 - add watch -radix does not work reliably.
     * dts0100443162 - "-novopt" option will convert undefined parameter Error
       to Warning.
     * dts0100449184 - Wave window does not show waveform where it should.
     * dts0100452187 - Can't change waveform format to analog with automatic
       option.
     * dts0100453357 - tcheck_set/tcheck_status do not work with VITAL models
       unless the timing process has VITAL in the name.
     * dts0100453802 - scgenmod crash if parameter is SystemC module.
     * dts0100453888 - Issue with wlf optimization which produces - "WLF(vsim):
       wlfiGetByteOffset:  boffset  is out of range!" error when adding a
       multi-dimensional array to the waveform.
     * dts0100455437 - Documentation: Job Spy chapter of User Manual refers to
       "backslash" characters as '/', which is a forward slash.
     * dts0100457265  -  After  optimizing a large design using "vopt -O5
       +nocheckALL ", vsim may segfault in a $fwrite call.
     * dts0100457993 - vcom generates bad logic using the default optimization
       level.
     * dts0100458471 - "vsim.wlf: Permission denied" message displayed on
       restart f.
     * dts0100458520 - Support method to protect compilation of some units in a
       library while letting users compile other data in the same library.
     * dts0100458529 - Failed to issue an error when the left hand side of a
       blocking assignment was a part select or bit select of a clocking block
       output.
     * dts0100459057 - Fatal Bad pointer access error on a VHDL generate block
       running in vopt mode in 63c.
     * dts0100459180      -      vopt      error:     Internal     error:
       ../../../src/vcom/pslvunit.c(1512) gCurrentEntity is NULL.
     * dts0100461044 - Simulation crash when signals moved into Wave window.
     * dts0100461416  -  Opening a UCDB file using the Windows version of
       ModelSim or Questa and the file was created using a 64-bit version of
       ModelSim or Questa will result in a crash.
     * dts0100462047 - Documentation for the value range of the -sv_seed option
       is incorrect.
     * dts0100462630 - Locals window shows a re-sized array as incorrect size.
     * dts0100462684 - When using -novopt, the simulator handles configurations
       differently depending on order of statements in the config file.
     * dts0100463925 - Internal errors during compile of known-good IP.
     * dts0100464613   -  Verilog  design  crashes  when  using  function
       acc_handle_by_name.
     * dts0100465264 - Blocking assignments to hierarchical references in a
       program block are illegal.
     * dts0100465332 - 6.3d errors out on vdel with option -allsystemc.
     * dts0100465635 - If multiple -G switch on vsim refer to the same generic
       or parameter, the simulation would crash.
     * dts0100465865 - Condition and expression coverage failed to recognize
       when a function call returned a non-scalar result, causing incorrect
       simulation results.
     * dts0100466337 - Toggle report produces incorrect results.
     * dts0100466966 - vcom crash due to wait statement optimization.
     * dts0100467812 - Crash during restart.
     * dts0100468585 - Can not load Specman PLI with 64-bit simulator.
   ______________________________________________________________________

   Known Defects in 6.3e
     * Syntax highlighting may not function properly in the Source window (all
       the source is shown as plain text). You can fix this problem by editing
       ~/hte/v2_38/hte.ini (where ~ represents your "HOME" directory) and
       deleting the line that says:
       languages=cxx tcl verilog vhdl XML PSL
     * The viewcov mode version of "coverage clear" has a known difference in
       behavior compared to the vsim mode version. In the viewcov mode version,
       clearing coverage data in a design unit instance does not affect the
       coverage data for that design unit, itself. Also, if you clear coverage
       data  in  a design unit, all instances of that design unit are not
       affected by that operation. In vsim mode, the data is more tightly
       linked such that one operation affects the other. In viewcov mode, if
       you want to have correct data correlation between instances and design
       units, then you need to clear both instances and design units.
     * The simulator will hang if it tries to create a WLF file while running
       on a Linux 64-bit operating system from a working directory which does
       not support large files. One common instance of this is executing an add
       wave command, when the working directory was created under an older
       32-bit Linux OS.
       This  is  a  Linux operating system bug and cannot be fixed by the
       simulator.
       A workaround for release 6.3 and above is to execute the simulator with
       command line option -wlfnolock.
     * The stack unwinder on the linux_x86_64 OS is unreliable. The unwinder is
       the fundamental facility provided by the OS for sampling where program
       execution is at. The unwinder is necessary for gathering performance
       data. This is a known issue with this specific OS and is why performance
       data will be incorrect or non-existent on this platform.
     * Users should be mindful of enabling both performance profiling and
       memory  profiling at the same time. Memory profiling requires much
       overhead  process,  and it can skew the results of the performance
       profiling data.
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * Specparams can be learned during the learn flow, but cannot be found on
       consumption. The workaround is to use full +acc deoptimization.
     * Attempting  to  traverse from an unnamed VPI typespec handle to an
       instance or a scope will result in a crash.
     * There are some limitations related to coverage exclusions:
          + Toggle exclusions are not supported in viewcov mode yet.
          + Exclusion report on toggles are not supported in both vsim and
            viewcov mode.
     * Concatenations and bit slices are not yet supported for System Verilog
       clocking blocks.
     * On Red Hat Enterprise Linux release 5 platform, If SIGSEGV signal occurs
       during the simulation and if CDEBUG is on, C-debugger traps the signal,
       and when continued, vsim gets terminated right away, instead of exiting
       with proper error status.
     * vlog  will  now  print  an  "unsupported" error message for nested
       design-units, as this feature is not fully supported in 6.3. This error
       may be suppressed using the -suppress 2230 command-line options.
   ______________________________________________________________________

   Product Changes to 6.3e
     * There have been some performance improvements to the learn phase of the
       learn flow. The learn no longer learns individual bits.
     * File locking for UCDB merge:
       We support a cumulative merge (vcover merge out.ucdb out.ucdb in.ucdb).
       Such merge requests may occur simultaneously from various platforms in a
       networking environment. In order to avoid corrupting cumulative coverage
       results, merges of UCDB files are serialized. "out.ucdb" is only written
       by a single process at a time.
          + Creation of lock files whose purpose is to signal by their presence
            that a UCDB is locked for writing.
          + Operations are atomic. When creating the lock file, the process
            verifies that it does not exist and then creates it, but without
            allowing  another process the opportunity to create it in the
            meantime.
          + The lock is advisory. Processes which intend to modify a UCDB file,
            by convention, check for locks to coordinate access to that file.
            The system fails if this convention is ignored.
          + There is a back-up file mechanism within vcover merge that, when
            optioned for, saves a back-up of the merge output before merging
            and can, when optioned for, automatically restore the back-up in
            case another process has its lock broken.
          + When blocked on a lock:
               o We print out "Waiting for lock..." messages every so often and
                 let the user explicitly break the lock if they think it safe.
               o We produce a message similar to: "User Bilbo on machine Frodo
                 has had the lock for 16 days".
               o Retry attempts will occur every 10 seconds.
               o Blocked messages will repeat about every 3 minutes.
          + The lock is released after a time-out period:
               o This cannot inadvertently time-out. Cannot be broken if a
                 process  is  starved simply because others get in first.
                 Time-out is only for the case where a single process takes too
                 long.
               o The time-out period is user-configurable.
               o When a time-out condition occurs, the process timing out will
                 be sent a "kill" signal.
     * The Verilog front-end now preserves block comments defined in the macro
       body through the macro substitution process.
     * The  vsim  '-assertfile  '  switch  now  only applies to assertion
       (VHDL/SVA/PSL) messages issued by the tool. Use the vsim '-errorfile '
       switch to redirect non-assertion tool messages into the specified file.
       To retain the tools previous behavior, set the environment variable
       MTI_ASSERTFILE_COMPATIBILITY to any value. This environment variable may
       eventually be deprecated. In the modelsim.ini file, all AssertionFormat
       variables  have  been  renamed  as  MessageFormat  variables.  The
       MessageFormat variables are valid for both assertion and non-assertion
       tool messages, as before. For backward compatibility the AssertionFormat
       variables will continue to be supported.
     * The restart command will reload the current dataset if the current
       dataset is not the active simulation ("sim"), in effect acting just like
       a restart of a simulation. See the dataset restart command below under
       "New Features".
     * The XML Testplan Import configuration file (xml2ucdb.ini) has been moved
       from the product directory to a sub-directory, vm_src, directly below
       the product directory.
     * The ucdb2html utility has been removed from the release. The HTML report
       functionality had been integrated into vcover for 6.3 (see vcover report
       -html).
     * Due to changes required for resolution of product defects, the generated
       names of specializations of parameterized classes could be permuted. For
       example, if a name such as "C::C__2" was previously used for "C#(int)"
       and "C::C__3" was used for "C#(logic)", the names might be exchanged.
       The conditions under which name permutation could occur are based on
       internal details of how specializations are matched and are not directly
       correlated to source descriptions.
     * The default action for the command onbreak has changed from "pause" to
       "resume". This will only impact dofiles that do not currently contain
       any onbreak commands. The "pause" action causes the macro file to stop
       executing and issues a "Paused" prompt to allow interactive debugging of
       the macro file. The resume command continues the execution of the macro
       file at the point of the break. The result of this change in default
       value will affect macro files without an onbreak command so that those
       files will continue executing after hitting a break point. If the old
       behavior is required, then it will be necessary to add the command
       onbreak pause at the beginning of the macro file.
     * The default collapsed mode for VCD output from the vcd dumpports command
       has changed from not collapsed to collapsed. The specific change was to
       the line in the modelsim.ini file: "DumpportsCollapse = 0".
       For 6.3, this was changed to: "DumpportsCollapse = 1".
       To get the old non-collapsed format, change this setting back to 0 in
       the modelsim.ini file.
     * Starting in 6.3 concatenations are no longer treated as 'assignment
       patterns'. Previously, the simulator attempted to detect these cases and
       produced the following warning:
       You should use "'{" to specify this literal.
       Now we will print errors, as in the following example:
       int a[3:0] = {default:0};
       int b[1:2] = {32'b1, 32'd2};
       ...
       ** Error: test2.sv(31): Can't use named concat. literals here.
       ** Error: test2.sv(31): Illegal concatenation of an unsized constant.
       ** Error: test2.sv(31): Cannot assign a packed type to an unpacked type.
       ** Error: test2.sv(32): Cannot assign a packed type to an unpacked type.
     * Previously,  an attempt to print a memory using $display displayed
       nothing, while $display of other unpacked types (such as structs and
       dynamic  arrays)  did produce output. In 6.3, we will now print an
       elaboration error, #8323, for all such constructs (which are illegal).
       This error may be suppressed.
       To  print  unpacked  data, we have added the "%p" and "%0p" format
       specifiers.  The  former  prints  the  data in the form of a legal
       "assignment pattern", while "%0p" prints in a shorter format.
     * Wildcard indexed associative array can no longer be used as a foreach
       array.
     * The IEEE Std 1800 has approved an important restriction to packages.
       With the new rules, packages are not permitted to refer to compilation
       unit items. An example of such of reference is the following small
       design:
            typedef int T;
            package p;
                T foo;
            endpackage
       Packages may depend on other packages so compilation unit declarations
       that packages need should be refactored into separate packages. For
       example, the previous design should be changed to a form similar to the
       following:
            package shared_types;
                typedef int T;
            endpackage
            package p;
                import shared_types::*;
                T foo;
            endpackage
       It is also important to note that "import" statements immediately before
       a package declaration are compilation unit imports and not imports into
       the subsequent package. With the new rules, the package references may
       not look into such an import. For example, the following approach will
       no longer work:
            package shared_types;
                typedef int T;
            endpackage
            import shared_types::*;
            package p;
                T foo; // cannot refer to T since it is imported into
                // the compilation unit, not into the package
            endpackage
       The new rules are now being enforced. Designs must be refactored so that
       packages do not refer to anything in the compilation unit.
     * Version 6.3d includes the v2.1 Mentor Graphics Documentation System,
       which includes the following components:
       InfoHub -- A browser-based directory that provides links to all your
       locally installed documentation. The InfoHub also provides a search
       interface, from which you can search across all your locally installed
       documents. The search interface also enables you to submit a search
       directly  to  SupportNet.  The InfoHub provides access to User and
       Reference manuals and Tutorials, delivered in both HTML and PDF formats,
       and Release Notes, delivered in text format.
       PDF Bookcase -- A PDF file that provides links to the PDF documentation
       if you cannot use an HTML browser.
       Improvements to the v2.1 Mentor Graphics Documentation System include
       the following:
       Search changes -- Improved search time, multiple keyword support, search
       ranking icons, results filtering by book or topic, and improved accuracy
       of results.
       Search and content scopes -- A new My Search Scope option lets you
       define a custom set of books to search.
       Global   index   improvements   --   improved  viewing  speed  and
       collapse/uncollapse of "like" terms.
       Getting Started movie -- provides an overview of all the features of the
       InfoHub  and Mentor Graphic Documentation System. You can view the
       Getting Started (Movie) from the Quick Tips menu located in the lower
       left-hand corner of the InfoHub.
       Font size -- increase or decrease the default size of the font by using
       the new triple "A" icon in the header.
     * The  vopt  +acc=g option has been replaced by the +floatparameters
       option(Verilog designs) and the +floatgenerics option (VHDL designs).
       Both +floatparameters and +floatgenerics accept the same [+<module>][.]
       syntax accepted by +acc. Use +floatparameters and +floatgenerics to
       instruct vopt not to lock down values of parameters and generics during
       optimization. The parameters and generics will be left "floating", and
       thus  capable  of accepting modified values via the vsim -g and -G
       options. +floatparameters and +floatgenerics may have adverse effects on
       performance in some cases.
     * The vopt +acc=m option has been changed such that it no longer preserves
       primitive instances. Primitive instances are now preserved by using the
       new +acc=u option.
     * The VoptCoverageOptions variable has been removed from the modelsim.ini
       file. vopt optimizations for coverage are now controlled by the CoverOpt
       modelsim.ini file variable and the -cover command line option.
     * The  -coverage  option  to  vopt  is  no  longer needed. vopt will
       automatically detect whether any of the source files were compiled with
       a -cover option, and will adjust its optimizations accordingly. Also, if
       you give a -cover xyz option to vopt, it will be logically OR'd with any
       -cover abc option given to an individual source file when processing
       that source file. In addition, if you compiled some source files with
       coverage on, you can force coverage off by giving vopt the -nocover
       option. This allows you to control whether coverage is on or off at vopt
       time instead of having to recompile individual source files.
     * The pathname reported by the simulator and User Interface for items
       inside SystemVerilog packages is incorrect. A path separator ('/') was
       used instead of the language correct package scope separator ('::').
     * The recording of attributes for transactions has changed. Previously,
       any attribute recorded on a transaction was not only added to every
       transaction on that same substream, but to all parallel transactions and
       the transactions on their substreams as well.
       Now, any attribute recorded on a transaction is still added to every
       transaction on that same substream, but is no longer automatically added
       to every parallel transaction and the transactions on their substreams.
       Typically, all transactions on a given stream (and all of it's parallel
       substreams) have the same set of attributes, and for that case, there
       will be no difference due to this change.
     * Changes for coverage exclude command:
          + Replace the option -instance with -scope to accommodate more scope
            types like generate block.
          + Transition  names are used with the option -ftrans instead of
            transition id's. The new syntax is:
                [-ftrans <state_var_name><transition_name>+ | all]
            where transition_name is specified as <state_name>-> <state_name>.
          + State names are used with the option -fstate instead of state id's.
            The new syntax is:
                [-fstate <state_var_name> <state_name>+ | all]
          + A new option -else is added to exclude the else part of every
            if-branch specified in the line range. Note that the line number
            for the else-branch is where the if-branch appears.
          + Recursive  exclusion for a scope is supported. To recursively
            exclude a scope, -scope is specified together with -r.
          + -scope and -du are supported with -togglenode.
     * The  UCDB  bin name for if-branch is changed from 'true_branch' to
       'if_branch'.
     * The  simulator has been improved to recognize and maintain Verilog
       escaped  identifier  syntax  for  all Verilog escaped identifiers.
       Previously  such identifiers were converted to VHDL-style extended
       identifiers, and then appeared as VHDL extended identifiers in tool
       output and CLI commands.
       Starting in 6.3, all default Verilog escaped object names inside the
       simulator appear identical to their names in original HDL source files.
       Sometimes in mixed language designs, hierarchical identifiers might
       refer to both VHDL extended identifiers and Verilog escaped identifiers
       in the same fullpath. For example:
       /top/\VHDL*ext\/\Vlog*ext /bottom
       top.\VHDL*ext\.\Vlog*ext .bottom
       (depending if the HierPathDelim variable is set to '/' or '.')
       Any fullpath that appears as user input to the tool (e.g. on the vsim
       command line, in a .do file, on the vopt command line, etc.) should be
       composed of components with escape syntax appropriate to their language
       kind.
       A modelsim.ini variable called "GenerousIdentifierParsing" can control
       parsing of identifiers input to the tool. If this variable is set (it is
       set by default now), either escape syntax to be used for objects of
       either language kind. This can be helpful to maintain compatibility with
       older  do files, which often contain pure VHDL extended identifier
       syntax, even for escaped identifiers in Verilog design regions.
       Note that SDF files are always parsed in "generous mode". SignalSpy
       function arguments are also parsed in "generous mode".
       On the vsim command line, the language-correct escape syntax should be
       used for top-level module names. Using incorrect escape syntax on the
       command  line  will  work  in the incr flow, but not in vopt. This
       limitation may be removed in a future release.
     * If  an  invalid  end  time  is specified when recording the end of
       transaction, a warning is still issued but the current simulation time
       is used as the transaction end time instead of the transaction start
       time.
     * The format of the library contents file (_info file) has been changed
       for the purpose of improved compiler performance. The new format is not
       backwards compatible with previous releases. Consequently, any attempt
       to refresh or recompile a 6.3 library with an older release will result
       in an error similar to the following:
       ** Error: (vcom-42) Unsupported ModelSim library format for "./work".
       (Format: 3).
       Converting the library back to an older release requires that you remove
       the library and rebuild it from scratch. Or, if you are converting back
       to a 6.2 release only, then you can convert the library format to the
       6.2 format and then freely refresh back and forth between 6.2 and 6.3
       releases. Use the 6.3 version of vlib to convert the format to the 6.2
       version using the -format option. For example:
       vlib -format 1 work
       The format version for pre-6.3 releases is 1, while the format version
       for 6.3 is 3. Format version 2 is related to libraries created with the
       -archive option and should be avoided when specifying the vlib -format
       option.
     * The  XML  Testplan  Import Utility (xml2ucdb) was enhanced and the
       command-line and configuration parameters were re-named for consistency.
       The following changes were made:
         1. Command-line
              1. Added a -verbose option to show testplan hierarchy and design
                 mapping. By default, the utility is a lot less noisy than
                 before.
              2. A -ucdbfilename <file> option has been added to remove the
                 order-dependence  of  the files on the command line (the
                 original syntax is still accepted).
              3. The command-line arguments are now order-independent.
              4. Any -format <format> option found on the command line is
                 processed first and other extraction parameters found on the
                 command line act as overrides on top of the parameters found
                 in the configuration file.
              5. The same parameter names are used both on the command line and
                 in the configuration file.
              6. The  -tagseparators  <chars>  option,  when  used on the
                 command-line, applies only to the taglist parameters specified
                 on the command line (see below).
         2. Configuration file
              1. Added "datalabels" parameter to support user-defined embedded
                 data labels.
              2. The following parameters have been re-named for consistency.
                 In all cases, the former name is still recognized:
                   1. start => starttags
                   2. stop => stoptags
                   3. exclude => excludetags
                   4. description => descriptiontag
                   5. sectionitem => sectiontags
                   6. dataitem => datatags
                   7. testitem => titletag
                   8. coveritem => linktag
                   9. coverattr => linkattr
              3. The "Tags" field name in the "fieldnames" and "fieldlabels"
                 parameters has been renamed "Link". The former name is still
                 recognized.
         3. Behavior
              1. The UCDB tags used to link testplan sections to coverage items
                 now has the contents of the "title" parameter prepended.
                 Lacking that, the basename of the XML input file is used.
              2. The "startsection" parameter now reflects the initial section
                 number for each level of hierarchy (auto-number mode only).
              3. Data  capture is no longer enabled from the start of the
                 document in auto- number mode. An element matching "starttags"
                 or a section number matching the "startstoring" parameter is
                 required to enable data capture.
     * If the PATH column value is set to "-" it will be ignored (this is
       useful for the PATH-per-LINK case where one of the LINK values doesn't
       need a PATH).
     * XML Import (xml2ucdb) now supports a "Path" column to direct testplan
       link item matching to a specific region of the design. In addition, a
       path may be prepended onto any CoverGroup, CoverPoint or Cross link
       item.
       For CoverPoint, CoverGroup, and Cross link items:
          + If  the  contents  of the Path column are non-blank, the Path
            information will be used as the value of the -path option to the
            tag command and the trailing component of the Link column will be
            parsed as usual and used to match the cover item. Any path added to
            the string in the Link column will be ignored.
          + If the Path column is not used or is left blank, and a path is
            prepended onto the string in the Link column, the prepended path
            will be used as the value of the -path option on the tag command.
       For CoverItem, Assertion, or Directive link items:
          + If the string in the Link column starts with a path separator
            character, the Link string is used as the value of the -path option
            in the tag command and no other tag command option is used.
          + If  the  string in the Link column does not start with a path
            separator (in other words, is not a full path), and the contents of
            the Path column are non-blank, the Path string is used as the value
            of the -path option and the Link strung is used as the value of the
            -match option on the tag command.
          + Otherwise, the Link string is used as the value of the -match
            option on the tag command and no path is specified.
       For all other link item types, the contents of the Path column are
       ignored. Note: If the Path column for a given link item is the literal
       string "-", the Path column is ignored for that link item only.
     * XML Import (xml2ucdb) now supports test data record tagging. If the Type
       column for a given link item is "Test", the contents of the Link column
       will be used as the value of the -testrecord option on the tag command
       associated with that link item.
     * XML  Import  (xml2ucdb)  now  supports a -stylesheet <file> option
       ("stylesheet="  in  the  INI  file).  This option points to an XSL
       transformation stylesheet which is applied to the imported XML file
       prior to extraction.
     * XML Import (xml2ucdb) now supports XML files generated by Jasper's
       GamePlan testplan utility. Use the -format GamePlan option.
     * Use of the "analog" format within the Wave window has been made easier
       by adding support for the use of -min and -max to control waveform
       scaling (the old method required use of "offset" and "scale").
     * Font Changes
       The way fonts are used and configured in the product has changed. There
       are  now  5 configurable fonts in the product: menuFont, textFont,
       fixedFont, treeFont, and footerFont. These fonts are used by all windows
       and are customer configurable using the Edit Preferences dialog box. The
       previous  method  of  configuring  fonts is no longer used and the
       preference variables will be ignored. The Source window will continue to
       use it's own font setting as that window shares the font preferences
       with other products that use the DesignPad text editor.
       For current customers upgrading to 6.3b and later releases that have set
       up  customized font preferences, these preferences will have to be
       manually configured for the new fonts, otherwise the product will look
       and behave just the same.
     * A change to licensing for this release eliminates extraneous entries in
       the license server log file that were the result of an availability
       check for a license feature. There used to be a license checkout line
       (i.e., OUT) followed by a license checkin line (i.e., IN) with 0 time
       duration each time the application checked on the availability of a
       license to decide whether to attempt the actual checkout of the license.
     * The vcd limit <size> command has been changed adding support for a file
       size limit greater than 2 GB. The size argument now excepts a unit
       specifier. The default <size> unit remains as bytes. An optional suffix
       of either KB, MB or GB specifies the units in which the size should be
       interpreted. For example:
       vcd limit 6GB
       or
       vcd limit 400MB
     * Taglists (used as data extraction parameters) may now include a subset
       of the XPath syntax to identify elements not only by tag name but also
       by  the  contents  of  attributes  attached to said elements. This
       pseudo-Xpath syntax only handles "=" and "!=" and can only examine the
       attribute values attached to the element being compared. Moreover, only
       one attribute comparison may be performed.
       For example, the following extraction parameter:
"-starttags Worksheet[@ss:Name=Sheet1]"
       will match the following element in the incoming XML:
<Worksheet ss:Name="Sheet1">...</Worksheet>
       but will not match the following element:
<Worksheet ss:Name="Sheet2">...</Worksheet>
     * The behavior of several extraction parameters in the XML Import utility
       has  been  clarified  to  allow  various  parameters  to work more
       independently.  The  affected parameters are: starttags, stoptags,
       excludetags, and startstoring.
     * The change command can now be used to modify local variables in Verilog
       tasks and functions.
     * There have been some performance improvements to the learn phase of the
       learn flow. The learn no longer learns individual bits.
     * The profile UI has been modified in the following ways:
       - A new pane named "Design Units" has been added to the profile window.
       It aggregrates results on a per design unit basis.
       - "sum(Mem in)" and "sum(Mem in(%))" columns have been added to the
       Ranked and Design Units profile panes. These columns report cumulative
       values for memory in and memory in %, providing another metric to use
       when examining memory profile results.
       - Memory values are displayed in the profile windows as comma separated
       numbers rather than with K and M suffixes. This provides correspondence
       between the printed size of the number and its actual value; the goal is
       to make the data easier to read.
   ______________________________________________________________________

   New Features Added to 6.3e
     * The when command has been enhanced by adding a high performance mode.
       The  -fast  option  will cause the when body to execute within the
       simulation kernel. This mode will allow the when body to execute very
       quickly  resulting  in  a  much lower impact on simulation runtime
       performance. With this mode comes some restrictions. Using this mode,
       the when body has the following limitations:
          + Commands in the when body are limited to these vsim commands:
          + echo
          + force, noforce
          + log, nolog
          + disablebp, enablebp
          + when, nowhen
          + bp, bd
          + change
          + examine
          + stop
          + All Tcl commands
     * The following cannot be used in -fast body:

     * "do" command
     * Any Tk commands or widgets
     * References to U/I state variables or tcl variables
     * Virtual signals, functions, or types.

     Commands  not  listed  in the list above should still work, but will
   adversely effect the runtime performance of the when body.

     When bodies that use global Tcl variables for passing state between when
   bodies and the U/I will need to declare them using the uivar command.  For
   example, the "i" variable in the code below is visible in the U/I and can be
   inspected (echo $i) and modified (set i 25) from the command prompt.

     set i 10
     when -fast {clk == '0'} {
         uivar i
         set i [expr {$i - 1}]
         if {$i <= 0} {
            force reset 1 0, 0 250
         }
     }
     when -fast {reset == '0'} {
         uivar i
         set i 10
     }

   See the User's and Reference manuals for more information on usage and
   restrictions.

     JobSpy now supports a savecov command which writes out a coverage data
   UCDB file. It is equivalent to executing the vsim command coverage save. If
   you run savecov without any arguments, the default UCDB filename will be
   "Job_'gridtype'_'jobid'.ucdb", where 'gridtype' is one of: mti, sge, lsf, or
   vov,  and  'jobid' is the job number or id of the running job. You can
   alternatively specify the filename by typing savecov filename.

     Added some options to enhance HTML report performance (vcover report
   -html) for very large designs.
    1. The new -noframes option disables generation of JavaScript-based tree
       which has known performance problems for designs with a large number of
       design scopes. With this option, the report comes up as a single frame
       containing the top-level summary page and an HTML-only design scope
       index page is available as a link from the top-level page.
    2. The new -nodetails option omits coverage detail pages. This can save
       report generation time and disk space for very large designs.

   In  addition,  the  JavaScript code for the hierarchical tree has been
   optimized and some of the HTML generation work is now done as the report is
   generated to save browser time when the report is loaded.

     Two new options have been added to xml2ucdb to better support nested
   testplans:
    1. The -root option (if non-zero) causes it's value to be pre-pended onto
       each section number (non-autonumber mode).
    2. The -inherit option causes storing state (resulting from start/stop tags
       or startstoring tag) to be inherited by the nested testplan.

     Added support for scv_connect(), a SystemC Verification Standard API for
   making HDL connections. Refer to User's Manual for more information on the
   usage of scv_connect().

     Enhancements were done in vcom and vsim to increase the performance of
   Xilinx unisim and XilinxCorelib primitives.

     New memory usage statistics are now collected and can be displayed in the
   GUI or reported from the command line. The memory usage is collected for
   certain System Verilog constructs specifically: Classes, Dynamic arrays,
   Queues,  Associative arrays, SVA and Cover directives, Covergroups and
   randomize().
   The data is collected on two levels, coarse grain and fine grain. The coarse
   grain analysis is enabled by default and collects totals for each of the
   group mentioned above. Fine grain is enabled through a vsim command line
   switch or using the profile command. It also can be turned off using the
   profile command. In addition, the user will have the option to log the
   information about the coarse grain analysis and display it in the Wave
   window over time. Coarse grain analysis data is also recorded in the UCDB
   file. To report data the user can use the write report command.
   Please refer to Reference Manual for details about this feature.


