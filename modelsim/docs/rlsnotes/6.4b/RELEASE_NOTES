
                   Release Notes For ModelSim Altera 6.4b


                                Nov 14 2008

               Copyright 1991-2008 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
   Corporation. The original recipient of this document may duplicate this
  document in whole or in part for internal business purposes only, provided
  that this entire notice appears in all copies. In duplicating any part of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.

   TRADEMARKS: The trademarks, logos and service marks ("Marks") used herein
    are the property of Mentor Graphics Corporation or other third parties.
   No one is permitted to use these Marks without the prior written consent
    of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as a
     source of a product, but is intended to indicate a product from, or
  associated with, a particular third party. The following are trademarks of
   of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.

   End-User License Agreement: You can print a copy of the End-User License
         Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.4b

     [7]Verilog Defects Repaired in 6.4b

     [8]PLI Defects Repaired in 6.4b

     [9]VHDL Defects Repaired in 6.4b

     [10]FLI Defects Repaired in 6.4b

     [11]VITAL Defects Repaired in 6.4b

     [12]SystemC Defects Repaired in 6.4b

     [13]Assertion Defects Repaired in 6.4b

     [14]Mixed Language Defects Repaired in 6.4b

     [15]Coverage Defects Repaired in 6.4b

     [16]General Defects Repaired in 6.4b

     [17]Mentor Graphics DRs Repaired in 6.4b

     [18]Known Defects in 6.4b

     [19]Product Changes to 6.4b

     [20]New Features Added to 6.4b
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + linuxaloem - RedHat 7.2 and higher.
   ______________________________________________________________________

   User Interface Defects Repaired in 6.4b
     * The  UI sometimes crashes at end of a coverage simulation run when
       updating the Missed Coverage window.
     * In the Wave window, the waveform selection highlighting did not always
       line up correctly on the selected signal.
     * Clicking on the window header for the Source window was not setting the
       input focus into the source text. This prevented the use of Source
       window keyboard shortcuts until the user clicked inside the text area.
     * Fixed  several problems with selecting the file from which to copy
       project settings in the Create Project dialog. Added testing of the file
       given. If the "Browse..." button is used, the "Select Mpf/Ini File" file
       chooser now offers file types of "Project Files (*.ini, *.mpf).
     * The waveform highlighting did not correctly align with the selected
       waveform, or moved in a jerky fashion while scrolling.
     * The Expression Builder dialog window was previously a fixed width,
       making working with long design object pathnames difficult. The dialog
       can now have the width resized.
     * qverilog [...] -R failure when invoked from the GUI is fixed.
     * The Locals window did not always update to display the correct variables
       when an uplevel scope was selected in the CallStack.
     * External commands no longer execute from a do script without using the
       Tcl  exec command. This functionality broke when support for "info
       script" in do files was introduced. The ability to execute external
       commands  directly has been restored by removing support for "info
       script" within do files. The "info script" command can be replaced with
       the "status file" command which has been around since ModelSim version
       5.2 (1998).
     * When  a  local  declaration of an automatic task or function had a
       dynamically sized type such as an associative array, the Locals window
       and the examine command could produce the value "<bad data>" or an empty
       result rather than the correct value of the variable.
     * The simulator user interface would occasionally crash when a design
       using FLI code added signals to the design. This has been corrected.
     * When cross referencing to the Source window from the Message Viewer
       window, a TCL error occurred if a space existed in the path to the
       source code.
     * The user setting for timelineunits in the waveform display window would
       not be saved between sessions. This has been corrected.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.4b
     * Gate-level optimized cells with 2 tristate outputs could select the
       wrong iopath delay.
     * Fixed a bug where logging packed arrays of records could lead to a crash
       if an element of the array near the end of the array was updated.
     * The use of '$random(seed)' inside an always_comb or always_latch block
       resulted in a crash during elaboration.
     * Macros would not expand within another macro body when immediately
       following a `\`".
     * We now support continuous assignments to concatenations, where the
       elements of the concat. may be a mixture of nets and variables.
     * An  always_comb  block was not being sensitized to an element of a
       multidimensional packed wire, as in the following:
       parameter IDX = 0;
       wire [2:0][9:0] m;
       always_comb
       r2 = m[2][IDX];
     * A continuous assignment to a single bit within a struct was possibly
       setting bits outside of the size of the variable. This would result in
       incorrect values being printed by $display and in the GUI.
     * Using an automatic variable as an array index expression while calling
       an  object method like a.b[auto_i].method() in some cases used the
       incorrect value for the index variable.
     * Event controls inside static tasks having an event expression indexed by
       a task formal triggered unexpectedly.
     * The SDF has an extended syntax (IEEE Std 1497-2001 Section 5.4.14) that
       allows pathpulse values to be specified as part of an IOPATH statement.
       This syntax is now supported.
     * SDF parser now accepts numeric values terminated in a decimal point
       (e.g. "10.", "0." ).
     * An event on an element of a struct accessed through a virtual interface
       within a class method was never being triggered. For example:
       task wait_struct();
       @( ifv.str.a)
       $display("ifv.str.a: Triggered at %0t", $realtime);
       endtask
     * The declarative order of Class would enable/disable the printing of
       error messages. The issue is now fixed.
     * The    Verilog    preprocessor   would   not   correctly   process
       `protect-`endprotect blocks within conditionally-compiled regions.
     * In  some  complex generate-for loops, elaboration could fail after
       optimizing the design.
     * An expression involving a mix of bitwise and/or operators and logical
       connective and/or operators and a mix of scalar and non-scalar operands
       resulted in a compiler internal error in some cases.
     * The  "suppress" modelsim.ini variable and vsim +nowarn options are
       enhanced to receive TFMPC, CNNODP like warnings. For example:
       suppress = 3091,TFMPC,CNNODP,3092 etc.
     * A design compiled with +nospecify resulted in an elaboration error or
       crash if a specify block contained a specparam that is also referenced
       outside of the specify block.
     * A typedef using the class scope resolution operator (::) through a type
       parameter would result in an error of the form:
    A typedef to an external type may only be of the form 'interface_id.type_id
'.
     * SystemVerilog  nested  loops containing multiple break or continue
       statements and locally declared variables would incorrectly exit the
       loop statement in some cases.
     * Fixed a bogus fatal error vsim-8498 on SystemVerilog DPI open array
       support. Zero-size dynamic array actual is now allowed.
     * Passing class data properties to a ref argument of a virtual class
       method was treated as an input rather than a ref in some cases.
     * Defining a parameter without declaring an explicit type and using a
       string literal for the value could corrupt the values of other untyped
       parameters in vopt mode.
     * Using an array literal (for example '{0,0}) could cause an elaboration
       crash in vopt mode with certain combinations of constant values.
     * In a hierarchical task/function call or a call to a parameterized class
       method  or  virtual  interface  method, input expressions could be
       incorrectly evaluated when sign and width extension rules interacted
       with the type of the task/function formal.
     * An aggregate rand_mode status of dynamic array is now maintained. A call
       to the rand_mode task of a dynamic array (e.g. "dyn_arry.rand_mode(0)")
       will:
          + set the rand_mode of each element of the array
          + set the 'aggregate' rand_mode of the array (new behavior)
       On a subsequent call to randomize, the 'aggregate' rand_mode status is
       tested before resizing the dynamic array. If the aggregate rand_mode is
       inactive (0) the array will not be resized.
       The new aggregate rand_mode may yield different random sequences for
       simulations that include randomization of dynamic arrays. For this
       reason,  in  the 6.4b release the SolveAggregateRandMode option in
       modelsim.ini controls whether the aggregate rand_mode is maintained. If
       SolveAggregateRandMode is disabled (0) the aggregate rand_mode is NOT
       maintained. By default, SolveAggregateRandMode is disabled.
     * An argument to a $display "%p" format specifier displayed incorrectly in
       some cases if the argument was a hierarchical reference to an array of
       reals.
     * vopt might have reported illegal errors as below, while optimizing mixed
       design of Verilog and SystemVerilog.
       ** Error: 1.v(8): Array dimension with 'single value' (C-style) bound is
       only allowed in System Verilog (option -sv).
       ** Error: 1.v(88): Function 'self' must be declared with at least one
       input.
       ** Error: 1.v(17): (vopt-2110) Illegal reference to class "this".
     * vlog  now treats files with extensions of .svh as SystemVerilog by
       default.
     * vlog would sometimes generate the following error incorrectly:
       (vlog-2218) Default specified for '<argument>' must exactly match the
       value specified in class at <file/line> for strict LRM compliance.
       This occurred in cases where a '::' was used in the argument default
       value.
     * A crash could occur (in vopt or in vsim) while processing a Verilog
       configuration when an instance clause's instance path is erroneously
       prefixed by a library name.
     * Fixed an internal error in vlog/vopt that would occur if a streaming
       concatenation expression was specified within an immediate assertion.
     * When  vsim  would break inside of a protected source code block it
       generated an error of the form:
           # /top/protected/i1 not found.
       and further simulations runs were not allowed.
     * Using  a  force or assign statement inside of an automatic task or
       function generated the following error:
       ** Error: mod1.sv(48): Internal error: ../../../src/vlog/vgencode.c(77)
       vl_save_stack_on_wait
     * When doing $dumpports on multiple instances, sometime elements of a
       vector output or inout port would not be reported in the $dumpports
       section of the file.
     * Sized  based literals were allowed to have values starting with an
       underscore  ('_').  vlog's -pedanticerrors option will now err for
       literals such as 2'b_01.
     * An optimized Verilog design resulted in the following vopt internal
       error in some cases:
       Internal error: vgencode.c(51) loc !=NULL.
     * Fixed   the   behavior  of  the  -dpioutoftheblue  switch  in  the
       -elab/-load_elab flow.
     * Verilog files with no design units and only global declarations would
       sometimes not resolve declarations properly and hence not give error
       messages.
     * The following internal error messages were sometimes generated from vlog
       and  vopt  when  automatic variables were referenced from within a
       fork..join block:
       ** Error: test.sv(23): Internal error:
       ../../../src/vlog/vrslvexpr.c(1074) self_sigOf(e)
       and:
       ** Error: test2.sv(29): Internal error:
       ../../../src/vlog/vallocate.c(1399) self
     * The following internal error was sometimes generated in vlog or vopt:
       ** Error: intel.sv(36): Internal error: ../../../src/vlog/vgencode.c(41)
       loc != NULL && storage_is_indirectOf(loc)
     * The simulator could crash in the incremental (novopt) flow if there is
       at least one configuration containing a cell clause, and an interface is
       instantiated beneath its hierarchy.
     * In a call to set the rand_mode of a random variable [eg a.rand_mode(m)],
       if the argument specifying the new mode value (m) was an unsigned value,
       the mode mignt not have been correctly set. This has been fixed.
     * Calling the process::suspend() method was not allowed inside functions
       because of the possibility that the process executing the function could
       suspend  itself. This call is now allowed, although suspending the
       current process will generate a runtime error during simulation.
     * A non-blocking assignment to a hierarchically referenced target produced
       incorrect results in some cases if the width of the rhs was greater than
       that of the lhs.
     * If an increment operator was used as an index into the left-hand-side of
       an NBA, vlog and vopt would print internal errors. Example:
       gl[++XX] <= '{8'hAB,1,3'b001};
     * Time zero usage of $sdf_annotate when followed by a non-time zero usage,
       can cause negative timing check limit values to be misapplied.
     * Elaboration of a design having module names longer than 1024 characters
       crashed the simulator in some cases.
     * Macros were incorrectly expanded when a macro body referenced a second
       macro, and the second macro's body was empty.
     * $bits on TYPE Expression would sometimes result in a crash in vlog/vopt.
       This has been fixed now.
     * SDF Annotation of gate-level optimized cells after time zero may cause
       unexpected simulation results.
     * Added support for $sformatf as specified in P1800-2009. Also allowed
       $psprintf  and  $sformatf  to be treated as constant functions for
       determining parameter values.
     * vlog incorrectly reported an error when using SomeClass:: to reference a
       class  member  when SomeClass was a non-parameterized class with a
       parameterized super class.
   ______________________________________________________________________

   PLI Defects Repaired in 6.4b
     * The VPI type information for elements of an array of enum where the
       enum-base is of type time was not represented correctly. This has been
       fixed.
     * Under vopt, a TR stream could move from its expected location. The
       Verilog system task $create_transaction_stream() has been repaired so
       that this no longer occurs.
     * vpiRange   when   called   on   packed   union   variables   using
       vpi_iterate(vpiRange, union_var_handle) was not giving correct value.
       This has been fixed.
     * vpi_iterate routine when called for vpiInternalScope transition for an
       module was not able to give the interface handle when it is passed as a
       port to the module. This has been fixed.
   ______________________________________________________________________

   VHDL Defects Repaired in 6.4b
     * When a scalar port was mapped to a single-bit vectored Verilog port, and
       either direct instantiation, bind-at-compile semantics, or vopt were
       used, a type-mismatch error was produced. This behavior diverged from
       behavior when no error would be produced with bind-at-elab semantics and
       non-vopt flow. The compiler and vopt have been changed to permit mapping
       of VHDL scalars to single-bit vectored Verilog ports.
     * An array aggregate expression was incorrectly treated as being globally
       static when the vcom warning (vcom-1073) occurred. Please refer to
       verror 1073 for a description of this warning.
     * A slice name whose prefix was the implicit signal returned via certain
       predefined attributes would result in an "ambiguous slice name" error
       message.
     * Under some conditions the drivers of a process could be determined
       incorrectly. This would result in either an error if the signals are not
       resolved  or  multiple drivers would be created if the signals are
       resolved.
     * Fixed a bug where the usage of concurrent assertions in a VHDL design
       was causing syntax errors if the design had signal names that matched
       PSL keywords.
     * Specifying a whole array as a slice in an actual of an instantiation
       port map sometimes lead to an internal error in the compiler.
     * A crash could occur if a signal whose type is an array of records and
       the record type contains an array of std_logic.
     * The SHIFT_LEFT, SHIFT_RIGHT, sll, sla, sra, and srl, functions in the
       ieee.numeric_std package incorrectly computed the return bounds of the
       vector to be 1 to SIZE_OF_INPUT instead of SIZE_OF_INPUT-1 DOWNTO 0.
       This would result in invalid direction and bounds errors at compile,
       optimization, and simulation time.
     * When a shared variable of a protected type was the first declaration in
       an architecture, the simulator would crash.
     * Error in VHDL's constant inference optimization. A subprogram parameter
       of  mode  "out" or "inout" that has a single assignment within the
       subprogram (prior to any use -- in the case of inout mode) could be
       erroneously inferred to be of constant class.
     * If  a  simulation  run stops because of an interactive break, some
       processes  that model flip-flops may not execute on subsequent run
       commands.
     * In some cases, a process that was optimized as a clocked process and
       also had a local alias to a signal declared in the process would crash
       during loading in vsim.
     * In very rare instances, a multidimensional signal assignment using the
       others clause in a process was ignored.
     * Spurious vopt errors concerning VHDL block/generate declarations could
       occur when unrolling for...generate loops.
     * If component name in component configuration matches with library name
       which is visible only in configuration declaration then vopt incorrectly
       errors out in few cases.
     * Functions ieee.numeric_[std|bit].TO_INTEGER[unsigned RETURN natural]
       return a value that is of subtype NATURAL. The simulator's accelerated
       versions of these, depending on the input value, could return negative,
       out of range NATURAL values along with a warning message that did not
       have  a  message  ID. Now the warning has a message ID that allows
       customers to control the severity of the message using the -fatal,
       -error, -warning, -note, or -suppress switches of vsim.
   ______________________________________________________________________

   FLI Defects Repaired in 6.4b
     * Handles to signals that are subelements of a composite signal, in some
       cases were invalid. This could cause other FLI routine to crash.
   ______________________________________________________________________

   VITAL Defects Repaired in 6.4b
   ______________________________________________________________________

   SystemC Defects Repaired in 6.4b
     * TLM 2.0 headers that use dynamic processes now automatically define
       SC_INCLUDE_DYNAMIC_PROCESSES,   eliminating   the   need  to  pass
       -DSC_INCLUDE_DYNAMIC_PROCESSES explicitly to sccom command-line.
     * Examples  from  TLM  2.0  kit of 9 June 2008 have been added under
       <install_dir>/examples/systemc/tlm2.0.
     * Extended  VCD  is  now  supported  for VHDL and Verilog ports in a
       mixed-language  design containing SystemC. It is not supported for
       SystemC ports.
     * Dynamic process handles sc_core::sc_process_handle when saved as global
       objects or in global objects like std::vector was causing segfaults
       during quit.
   ______________________________________________________________________

   Assertion Defects Repaired in 6.4b
     * Assertions  with  repeat  counts greater than 100,000 did not work
       correctly.
     * vsim used to hang in some cases in the high range of a repeat construct
       when its temporal repeat variable was infinity.
     * The assertion profile -threadthreshold command did not work for PSL
       assertions in VHDL.
     * PSL built in functions behaved inconsistently in VHDL when there was a
       race  between updating the built in argument and evaluation of the
       assertions.
     * vcom gave internal error when PSL ended() was used.
     * Corrected  the vsim -elab/-load_elab flow to save the state of the
       -assertdebug option.
     * Multi-clock sequence with 'intersect' operator gave incorrect results.
     * Corrected  an  issue  where  enabling  ATV logging for property or
       expressions could crash the simulation.
     * Clicking the right mouse button on clock items in the assertion browser
       would yield strange TCL errors.
     * When the assertion gui was in hierarchical mode, immediate assertions
       would sometimes not be visible. Also, when running vsim in viewcov mode,
       the assertion display filtering for immediate and concurrent types did
       not work correctly.
     * vopt crashed when a module was instantiated in a vunit bound to a design
       unit at mixed language boundary.
     * +incdir+ was ignored in vopt for PSL files provided with -pslfile_vl.
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.4b
     * SystemVerilog importing a VHDL package, compiled using the -mixedsvvh
       option, would sometimes error out in vsim with an invalid 'need to
       recompile' error when reloading the design. This has been fixed.
     * Using constants as actuals when binding to VHDL target scopes using the
       SystemVerilog bind statement would error out in vopt when the +acc
       option is used. This has been fixed.
     * In  rare  occasions a crash could occur during elaboration when an
       optimized Verilog module is instantiated from VHDL. Using +acc on the
       module being instantiated will prevent the crash.
     * The example design
       <install_dir>/examples/systemverilog/assertions/vhdl/interleaverwas
       broken. This has been fixed.
     * When multiple bind statements are present in different compilation unit
       scopes, only one of them would get elaborated when design elements are
       reloaded using the restart command. This has been fixed.
     * The switch -mixedsvvh would fail quietly for cases where a VHDL package
       is not usable at the SystemVerilog-VHDL mixed language boundary. This
       has been fixed.
     * vopt would report error for cases where Verilog is instantiated under
       VHDL, and the Verilog module contains a parameter with the same name as
       a standard VHDL type. This has been fixed.
     * vopt would produce an incorrect error for missing port connections in
       bind statements, when binding to VHDL target scopes. This has been fixed
       and missing port connections are now supported in bind statements with
       VHDL target scopes.
     * vopt  now  supports integer literals as actual expressions in bind
       statements, when binding to VHDL target scopes.
     * vopt would crash with an internal error for open port connections in
       bind statements, when binding to VHDL target scopes. This has been fixed
       and open port connections are now supported in bind statements with VHDL
       target scopes.
     * vsim would sometimes not catch an illegal localparam overrides through
       bind statements, when binding to VHDL target scopes. This has been fixed
       and a valid error message is produced for such cases now.
     * vsim would sometimes error out with a 'generic not found' error while
       overriding  VHDL  generics  from Verilog for designs where Verilog
       instantiates VHDL and generic name is an extended identifier. This has
       been fixed.
     * The -mixedsvvh option was missing from vlog and vcom -help text.
   ______________________________________________________________________

   Coverage Defects Repaired in 6.4b
     * An issue was reported where the XML Testplan Import utility would fail
       to correctly parse a string in the link field if an escaped identifier
       was used in the covergroup/cross instance field. The parser has been
       overhauled and Verilog-style escaped identifiers in the link string are
       now fully supported. As a result, it is now necessary to include the
       trailing space when a linked identifier is used (note: this supersedes
       6.4a Release Note #148).
       The proper way to enter an escaped-identifier instance name into a link
       string is one of the following:
         1. covergroup,\/cvg/instance/name ;
         2. covergroup,\/cvg/instance/name :coverpoint;
     * For ternary expressions, expression and condition coverage results would
       show the incorrect number of hits for some rows of UDP tables when
       short-circuiting is enabled. This has been fixed.
     * Expressions/conditions  would  sometimes evaluate incorrectly when
       expression/condition coverage is enabled and short-circuiting is in
       effect.
     * Toggle  information  for VHDL integers was missing in XML coverage
       reports. This has been fixed.
     * There was a difference between the output of the vcover stats command
       and the output of coverage report -totals -byinstance command.
     * The coverage save command in vsim crashed due to parameterized vector
       toggles.
     * vopt would sometimes crash when FEC analysis was turned ON for designs
       containing  ternary  expressions.  This  crash  would go away when
       -nocoverfec was passed to vopt. This has been fixed.
     * The -coveredfcov option is added in coverage save command to save only
       covered covergroup bins and cover directives.
     * Source file names containing a colon (":") would prevent the annotated
       source from being generated in the HTML coverage report.
     * Simulations with the VHDL and Verilog compiled with expression and
       condition coverage could produce incorrect simulation results. Designs
       with expression and condition coverage must be recompiled to fix this
       problem.
     * The vlog compiler will crash with this message in some cases when used
       with -cover c and -novopt switches. This has been fixed.
       Internal error: ../../../src/vlog/vgenexpr.c(540) suppressVopCheck ||
       (vop->mode & (BIT_VOP | REG_VOP))
     * The -subscopes option is deprecated by making its behavior as default.
       That means the coverage report command will show code coverage data from
       generate blocks by default.
   ______________________________________________________________________

   General Defects Repaired in 6.4b
     * Under some circumstances, vsim would give the following error while
       loading an optimized design:
       ** Fatal: cg: trouble reading asm file header: Is a directory vsim was
       modified to detect this condition and issue a more appropriate error
       indicating a failure to find the appropriate machine code for a given
       module.
     * The simulator would crash if you attempt to restart the simulation after
       a fatal Zero-delay oscillation loop error was reported.
     * Using the -nocase switch to vcd2wlf would sometimes cause problems with
       VCD identifiers overlapping. This has been fixed.
     * vsim failed to ignore case when searching for SDF instances when using
       compiled SDF leading to an incorrect error that the generic name was not
       found.
     * The  Verilog/System Verilog API for transaction recording has been
       updated to improve $add_attribute(). The changes make $add_attribute()
       more reliable in its ability to handle all kinds of data types and
       expressions. There may be some changes to generated attribute names. In
       any event, it remains best to provide a name for each attribute through
       the (optional) third parameter to this systask.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.4b
     * dts0100209637 - Add support for specification of pathpulse values in SDF
       IOPATH statements.
     * dts0100215423 - SDF "0.:" syntax gives error.
     * dts0100460015 - SVA property does not sample a multi-dimensional array.
     * dts0100500047 - Assertion continuously fires when it should not using
       prev().
     * dts0100504769 - SDF parser fails on path delays with r-limit and e-limit
       values.
     * dts0100511020 - Error due to Out-of-block function declaration if not
       present is masked away without an interface or module after the class
       declaration.
     * dts0100512715 - Bug in sequential @(posedge ...) for bit select of a
       vectored net.
     * dts0100514753 - vsim crashes when using $random(seed) in always_latch
       block.
     * dts0100517268 - Toggle information for VHDL integers is missing from XML
       coverage report.
     * dts0100517994 - vsim option: voptargs syntax incorrect in User's manual.
     * dts0100518941 - vopt error with mixed Verilog-VHDL signals.
     * dts0100519514 - Not able to monitor an event on a signal in a struct
       (packed/unpacked)  and  a union from a virtual interface handle in
       SystemVerilog.
     * dts0100519643 - Add a step in scope function.
     * dts0100520034 - Bit range of "reg" is being ignored or incorrectly
       displayed when using a $display task when the variable is in a "struct".
     * dts0100520067 - always_comb not sensitive to a 2-d packed wire.
     * dts0100520824 - 6.4 vsim cannot read some blocks encrypted by an earlier
       release.
     * dts0100521276 - Internal error for cont assign.
     * dts0100521609 - vsim fatal error with foreach variable "i", used for
       randomization.
     * dts0100521968 - Fatal error/crash during simulation.
     * dts0100523177 - Result of SVA sequence depends on its length.
     * dts0100523232 - Description of vsim +notimingchecks is not the same in
       Reference Manual and User's Manual.
     * dts0100523771 - Crash opening source window after Assert statement.
     * dts0100523995 - Type error with 'abort'.
     * dts0100524087 - Contradiction in 6.4 User's Manual, Chapter 10.
     * dts0100524366 - Wave highlight offset from signal name in Wave window.
     * dts0100525157 - Wrong "signal has multiple drivers failure".
     * dts0100525745  - Internal error with port map to a slice in a VHDL
       configuration.
     * dts0100525764 - Parameter value gets corrupted during optimization.
     * dts0100526097 - Wave Window > Edit Search > Expression dialog box is
       fixed width.
     * dts0100527557 - Problem with ref argument.
     * dts0100527608 - Message Viewer double click throws TCL error when there
       is a space in the directory name.
     * dts0100527645 - Wrong error message when compiling SystemVerilog code
       with open array in DPI function.
     * dts0100527717 - qverilog [...] -R does not work from within vsim GUI.
     * dts0100527775  -  Background  highlighting of selected waveform is
       displaced using analog format signals.
     * dts0100527803 - Add info on how many bins were hit for each cross in
       HTML coverage view.
     * dts0100528396 - Bind error with constants while connecting the ports.
     * dts0100528776 - VHDL code behaves incorrectly when compiled with -cover.
     * dts0100529133 - vsim crash when loading optimized code.
     * dts0100529714 - Compiling VHDL code with -vopt switch gives incorrect
       simulation results.
     * dts0100529715 - vopt fails on RTL code that works with previous version
       of the simulator.
     * dts0100529718 - vsim fails to load code that works in previous version
       (6.4a).
     * dts0100529719 - vopt reports an odd syntax error -- unexpected '#'.
     * dts0100529773 - Can no longer place an external program name into a
       dofile and have it executed by Tcl.
     * dts0100530025 - Crash with on local associative array in Locals window.
     * dts0100530125  -  In #0 time, not all the signals are listed under
       $dumpports in the EVCD file.
     * dts0100530501 - Internal error when using a streaming operator (>>) with
       assert statement.
     * dts0100530756   -   Incorrect  expression  coverage  results  with
       short-circuiting enabled.
     * dts0100531504 - Top SV imports VHDL package causing 'need to recompile'
       error when reloading design.
     * dts0100531639 - The clock event is stopped after break in v6.4a.
     * dts0100533115 - Bug in break/continue handling when class vars needs to
       be cleaned up and there are nested loop's.
     * dts0100352043 - Support of SystemC in VCD.
     * dts0100383065 - Set vsim +nowarn argument in "modelsim.ini".
     * dts0100449516 - Support for argument '-dpioutoftheblue 1' with vsim
       -load_elab.
     * dts0100508271 - No EVCD support for SystemC.
     * dts0100518812 - Segmentation fault during simulation after logging a
       struct.
     * dts0100520833 - 'intersect' fails when 'and' of two sequences passes.
     * dts0100524061 - Open connection in bind statement.
     * dts0100524066 - Missing connection in binding with VHDL target.
     * dts0100524069 - Passing integer labels (0,1,2 ...) to an integer signal
       in a binding statement with VHDL target.
     * dts0100525045 - vopt crashes generating code for $bits expression.
     * dts0100528762 - vcom optimzation on a VHDL alias causes a segfault.
     * dts0100529846 - Run "tb" command automatically when an error occurs in
       order to provide the user more information on the error.
     * dts0100531265 - Allow the onfinish action to be controlled via Tcl.
     * dts0100532286 - Incorrect results after breaking/resuming simulation.
     * dts0100341982 - TO_INTEGER behaves same way with signed and unsigned
       values.
     * dts0100525633  - Array elements are not assigned correctly in VHDL
       process.
     * dts0100531747 - vsim code coverage reports different.
   ______________________________________________________________________

   Known Defects in 6.4b
     * On Windows platform, If Destructor breakpoint on SystemC object is set
       via command "bp -c < function_name >", Debugger sometimes does not stop
       at the breakpoint.
     * On  Windows  platform,  if  breakpoint  is set on a SystemC object
       destructor, Debugger sometimes crashes while quitting simulation. This
       crash can be avoided by setting env variable SC_NO_LIB_UNLOAD, which
       will prevent unloading of the shared library.
     * The viewcov mode version of "coverage clear" has a known difference in
       behavior compared to the vsim mode version. In the viewcov mode version,
       clearing coverage data in a design unit instance does not affect the
       coverage data for that design unit, itself. Also, if you clear coverage
       data  in  a design unit, all instances of that design unit are not
       affected by that operation. In vsim mode, the data is more tightly
       linked such that one operation affects the other. In viewcov mode, if
       you want to have correct data correlation between instances and design
       units, then you need to clear both instances and design units.
     * The simulator will hang if it tries to create a WLF file while running
       on a Linux 64-bit operating system from a working directory which does
       not support large files. One common instance of this is executing an add
       wave command, when the working directory was created under an older
       32-bit Linux OS.
       This  is  a  Linux operating system bug and cannot be fixed by the
       simulator.
       A workaround for release 6.3 and above is to execute the simulator with
       command line option -wlfnolock.
     * The stack unwinder on the linux_x86_64 OS is unreliable. The unwinder is
       the fundamental facility provided by the OS for sampling where program
       execution is at. The unwinder is necessary for gathering performance
       data. This is a known issue with this specific OS and is why performance
       data will be incorrect or non-existent on this platform.
     * Users should be mindful of enabling both performance profiling and
       memory  profiling at the same time. Memory profiling requires much
       overhead  process,  and it can skew the results of the performance
       profiling data.
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * Specparams can be learned during the learn flow, but cannot be found on
       consumption. The workaround is to use full +acc deoptimization.
     * Concatenations and bit slices are not yet supported for System Verilog
       clocking blocks.
     * On Red Hat Enterprise Linux release 5 platform, If SIGSEGV signal occurs
       during the simulation and if CDEBUG is on, C-debugger traps the signal,
       and when continued, vsim gets terminated right away, instead of exiting
       with proper error status.
     * vlog  will  now  print  an  "unsupported" error message for nested
       design-units, as this feature is not fully supported in 6.3. This error
       may be suppressed using the -suppress 2230 command-line options.
     * For  viewing  events  in Expanded Time in the List window, use the
       "configure list" command with the "-delta events" option. "events" is
       added to the "all", "collapse", and "none" options for the "-delta"
       argument. These options control the details shown in the List window and
       in writing list files. This was documented incorrectly in the "Expanded
       Time Viewing in the List Window" section of the "Waveform Analysis"
       chapter of the User's Manual. The "write list -events" command serves a
       different purpose (which has not changed) and is NOT used to control
       Expanded Time viewing in List window.
     * The  "examine",  "searchlog", and "seetime" commands have NOT been
       enhanced for use with Expanded Time. This was documented incorrectly in
       the "Expanded Time Viewing with examine and Other Commands" section of
       the "Waveform Analysis" chapter of the User's Manual.
     * If you have code coverage on in VHDL and get the following sort of
       warning:
       # Loading mypackage(body)
       #  Internal  Warning  in process_sub: failed to find local inlined
       subprogram called in pkg
       # (mypackage ); flags 7 filenum 0 lineno 241 tokno 2
       # Disabling code coverage for this inlined subprogram
       Then add the -noFunctionInline option to vcom for that package, or
       reorder the subprograms in the package body to be defined before they
       are used.
     * Code coverage is now giving results for SystemVerilog nested modules,
       interfaces and program blocks. One remaining issue is that if a nested
       module has more than one instance, only one of the instances will show
       code coverage data, and the data therein will be the sum of all the
       instances of that module. This will be improved in a later release.
     * Using the profiler on Solaris 8 can result in the error, "Setitimer:
       Permission denied." To prevent this error, set the environment variable
       MTI_THREAD_DISABLE to 1.
   ______________________________________________________________________

   Product Changes to 6.4b
     * The priority of +initreg/+initmem options is adjusted from the previous
       versions. Now, the +initreg/+initmem options specified to vopt with
       design unit or instance name have the highest priority. After that,
       these  options applied to vlog have the next priority and the vopt
       +initreg/+initmem options have the last priority. In earlier versions,
       the +initreg/+initmem options specified to vlog command had higher
       priority than design unit or instance specific +initreg/+initmem vopt
       options.
     * To improve usability, the Run toolbar has been changed: a Break button
       has been added.
     * The text-based windows (Transcript, Notepad and Source) now have an
       "inline" search bar (instead of a dialog box) which supports incremental
       searching.  The  previous  behavior  can  be  restored  using  the
       "Main/InlineTextSearch" option.
     * Several fatal elaboration errors will now print the line # where the
       error occurred.
     * The  new  enhanced support of analog format within the Wave window
       includes a change to the output created by "write format wave". In
       pre-6.4 the output for the "add wave" commands would include "-offset"
       and "-scale". Starting in 6.4 the output will instead use "-min" and
       "-max".
     * When vpi_iterate and vpi_scan are used on an array of instances, the
       individual elements will now be returned left-to-right, where they
       formerly were returned low-to-high. For example if they are applied to
       "mymodule u1[2:0]();", the elements returned will be u1[2], u1[1],
       u1[0].
     * Each tag in a taglist (used as data extraction parameters) may now
       include a subset of the XPath syntax to identify elements not only by
       tag  name  but also by the contents of attributes attached to said
       elements. This pseudo-Xpath syntax only handles "=" and "!=" and can
       only  examine  the  attribute values attached to the element being
       compared. Moreover, only one attribute comparison may be performed.
       For example, the following extraction parameter:
"-starttags Worksheet[@ss:Name=Sheet1]"
       will match the following element in the incoming XML:
<Worksheet ss:Name="Sheet1">...</Worksheet>
       but will not match the following element:
<Worksheet ss:Name="Sheet2">...</Worksheet>
     * The behavior of several extraction parameters in the XML Import utility
       has  been  clarified  to  allow  various  parameters  to work more
       independently.  The  affected parameters are: starttags, stoptags,
       excludetags, and startstoring.
     * VCD extensions for SystemVerilog supported as per Section 24: VCD Data
       in IEEE-P1800. LRM is not extending VCD for interfaces and programs.
       They will be dumped as "module" scope.
     * The source window has been changed to remove the separate column used to
       display breakpoints. Breakpoints will be shown within the "line number"
       column (as they were in the pre-6.3 releases). The LMB event handling
       has been improved to avoid inadvertant setting of breakpoints. Also,
       there is now a subtle visual separator bar between the text area and the
       line number column to help guide the user during text selection.
     * The coverage numbers shown in the source window can appear to be in
       conflict with what's shown in the "Missed Coverage" window. This occurs
       when the Missed Coverage window is in "By Instance" mode and the source
       window is in "By File" mode. The latter is the default for the source
       window but it gives no indication what its current mode is. To make it
       clear for the user, the title bar of the source window will be enhanced
       to  include the current coverage data mode(either "by file" or "by
       instance").
     * The Contains toolbar now supports multiple wildcard modes. The default
       mode is now "glob" style which is the more common form of wildcards as
       found in UNIX shells. The wildcards are *, ?, [chars], and \x where x is
       any character, removing that character's special meaning.
       Previously, this filtering tool used full regular expressions. This
       option is selectable from the menu button in the Contains entry box, by
       selecting the value "regular-expression".
       The third option, "exact", does not use wildcards so no characters have
       any special meaning.
       In all modes, the search patterns are considered case insensitive. If a
       case sensitive pattern is needed, use the regular-expression mode and
       perpend the search string with "(?c)".
       The preference variable PrefMain(ContainsMode) defines the filter mode
       for all windows with one of the values of "glob", "regexp", or "exact".
       More  information  on  regular expressions can be found in the Tcl
       reference manual under "re_syntax". Information on glob style matching
       can  be found in the Tcl reference manual under the "string match"
       command.
     * Macro arguments to Verilog and SystemVerilog macros are now expanded
       prior to substitution into the macro body.
     * SDF  annotation  of  RECREM  or  SETUPHOLD  matching only a single
       setup/hold/recovery/removal  timing check will result in a warning
       message.
     * The transaction recording engine no longer issues a warning if a design
       attempts to record a transaction of zero length.
     * The log and nolog commands are now supported for transaction streams of
       all kinds. TR streams created through the SCV or Verilog APIs have
       logging enabled by default. The rule is that a transaction will be
       logged in WLF if logging is enabled at the simulation time when the
       design calls ::begin_transaction() or $begin_transaction. The effective
       start  time of the transaction (the time passed by the design as a
       parameter to beginning the transaction) does not matter. Thus, a stream
       could  have  logging disabled between T1 and T2 and still record a
       transaction in that period using retroactive logging after time T2. A
       transaction is always entirely logged or entirely ignored.
     * PSL LTL and OBE operators are now disabled by default. Use -pslext
       vcom/vlog/vopt switch to enable these operators.
     * The Win32/Win32PE platform executables (excluding vish.exe) are now
       linked  with  the /LARGEADDRESSAWARE switch. This switch allows an
       executable to allocate an extra gigabyte of process space (up to 3GB).
       The  additional  gigabyte of process space is available on Windows
       configurations that include the /3GB (/userva on Vista) boot switch.
       Vish.exe is not linked with /LARGEADDRESSAWARE and we do not recommended
       that this switch be used with vish.exe. Testing vish.exe with this
       switch exhibited a tendency to exceed the one GB system limitation which
       results in a crash. When the simulator's GUI displays several windows
       with  large  amounts of graphical data and a full redraw occurs, a
       temporary surge in the allocation of system memory can cause the limit
       to be exceeded.
     * The  behavior  of virtual expressions has changed in a subtle way.
       Normally when a virtual expression contains a relative context pathname,
       for example u1/x2/b, the current context would be used in order to
       resolve the name. However, relative paths that started with a toplevel
       name  would also be recognized, ignoring the current context. This
       unintended behavior has been corrected so that the current context is
       always used to resolve a relative name. This may cause some previously
       accepted virtual expressions to fail to be accepted.
     * modules found through source library search are no longer treated by
       default as if they contained a `celldefine compiler directive. To obtain
       the old behavior, add +libcell to the vlog command line. Source library
       search is enabled with -v and -y compilation options. Whether a module
       is considered a cell or not affects logging defaults with log -r *,
       coverage  defaults  within  the  module,  and  PLI access routines
       acc_next_cell and acc_next_cell_load. This change simplifies migration
       from other simulator products.
     * Support for Verilog hierarchical references through VHDL design units
       has  been  greatly  improved.  It is now possible for hierarchical
       references from a higher level Verilog to refer to objects in a Verilog
       module instantiated beneath a VHDL design unit. In previous releases,
       upward references from a lower level Verilog module would only work if
       the  target's  scope  was  a  direct parent, or a silbing that was
       instantiate  lexially earlier in source. This restrictions are now
       removed. Hierarchical references that pass through a VHDL design will
       not work in the follow cases:
          + Is the target of a defparam.
          + Used as an actual to a unconstrained VHDL port.
          + Target of the reference is a VHDL object.
     * A  new toolbar has been added to the Wave window for access to the
       existing Bookmark functionality.
     * Enabled use of the "contains" filter for the Files tab of the Workspace
       window.
     * Support for some additional VPI features has been added in this release.
       The vpiDriver transition has been extended, and partial support for
       vpiContAssign objects has been added.
     * When  encrypting Verilog source text any macros without parameters
       defined on the command line are substituted (not expanded) into the
       encrypted Verilog file.
     * Wave searches initiated from the keyboard or toolbar buttons can now be
       stopped by clicking the Wave window's "Stop Wave Drawing" toolbar button
       or the Simulation toolbar's "Break" button.
     * The SystemVerilog array manipulation methods now reflect the latest
       changes in the P1800 Draft5 version of the LRM, in that iteration occurs
       only in the top dimension of the array. That is, the correct way to sum
       the  elements of a 2-dimensional memory, as indicated in the LRM's
       example, is:
       logic [7:0] m [2][2] = '{ '{5, 10}, '{15, 20} };
       int y;
       y = m.sum with (item.sum with (item)); // y becomes 50 => 5+10+15+20
       Previously, ModelSim iterated through all the unpacked dimensions,
       "[2][2]" in this case.
     * When using C-debugger to debug quit callback functions, user needed to
       turn on 'stop on quit' mode. User start debugging by issuing 'quit -f'
       command. When simulation ends, user needed to quit C-debugger using
       'cdbg quit' and then GUI using 'quit -f'. Now, Users do not need to
       issue extra commands at the end of the run. Simulator automatically
       quits C-debugger and GUI, after debugging is done and simulation has
       stopped running.
     * If a VHDL signal is read during elaboration the value read may differ
       from  value read in previous releases. The VHDL LRM considers this
       illegal(Section 12.3) but tool behavior has always been to just warn and
       allow a value to be read. What the value read has always been undefined.
       Additionally previous releases allowed functions and procedure with
       signal parameter to be called during elaboration. This is now illegal
       and reported at compile time.
     * The menus which control the functional coverage tab display options
       (assertion, cover directives and functional coverage) have changed
       slightly. Most significant of the changes is that each pane now has a
       separate control for "Show All Contexts" and "Recursive Mode" that is
       not shared with the other panes. They are available with the right mouse
       click popup window as well as under the tool's main menu, under the
       "Display Options" menu pick.
     * The bp command now outputs a list of existing C breakpoints with their
       enabled/disabled states in the bp command syntax, so that this output
       can be saved and executed later to recreate the breakpoints.
     * The effect of assertions on some coverage features has changed. Because
       asserion pass counts were not reliable without -assertdebug used in
       simulation, pass counts have been removed from the coverage database and
       reports by default. (With -assertdebug, they remain, along with other
       counts.) Also, the contribution of assertions to total coverage -- in
       the  Verification  Management  Tracker and Browser -- has changed.
       Previously,  an  assertion  contributed  to  "100% coverage" if it
       non-vacuously  passed at least once. Now, with -assertdebug, "100%
       coverage" is met if an assertion both non-vacuously passed and never
       failed. Without -assertdebug, "100% coverage" is met if the assertion
       never failed. There is a new VM Browser column called "%SuccessAsserts"
       to indicate this statistic. If assertions are included in a test plan,
       this statistic is automatically used in the VM Tracker and "coverage
       analyze" command.
     * Following modifications have been done to coverage switches:

            Earlier name             New name
       -coverNoSub            -nocoversub
       -nocoverNoSub          -coversub
       -coverExcludeDefault   -coverexcludedefault
       -nocoverExcludeDefault -nocoverexcludedefault
       -fsmnoresettrans       -nofsmresttrans
     * Errors involving unpacked array assignment, where the packed elements do
       not match exactly (signed/unsigned, different widths, 2-state/4-state),
       may now be suppressed using '-suppress 7034'.
     * The  HTML report now shows the total number of covergroup bins per
       coverpoint  or  cross  and,  of those, how many were covered. This
       information appears on the covergroup details pages for each scope.
     * When the simulation encounters an error during a run, a message will be
       displayed  showing the file and line location of the error and the
       sequence of calls showing how it got there. This is an extension of the
       Stopped At message displayed previously. In GUI mode, this message may
       be used to view the file by double-clicking on the file name in the
       message.   This   message   may   be  suppressed  by  setting  the
       PrefMain(noRunMsg) preference to 1.
     * The assertion gui panel now will save the state of the display option
       settings when the simulation exits.
   ______________________________________________________________________

   New Features Added to 6.4b
     * In accordance with the latest SystemVerilog LRM, we now allow a dynamic
       array of bytes to be used in $sformat and $display as if it were a
       'string' type.
     * The delete() method for SystemVerilog queues can now be used with no
       arguments to delete the entire contents of the queue.
     * Two minor enhancements to the HTML Report Generator:
         1. The testplan summary page now includes a count of linked coverage
            items and a count of linked coverage items which are 100% covered.
         2. A new -summary command-line option suppresses all pages except the
            top summary page, the testplan summary page, and the list of tests
            run.
     * A new Step toolbar button has been added to the Simulation toolbar. The
       Step Current button will perform single steps within the current process
       scope. This is useful for debugging processes and tasks that contain
       delay statements.
     * The onfinish command has been added to provide interactive control of
       the OnFinish setting. The command takes an optional single argument to
       change the onfinish mode. Using the command with no argument will report
       back the current value of the mode which is one of: ask, exit, final,
       stop,  or default. The default value is used to revert back to the
       modelsim.ini file setting.
     * vsim now prints a suppressible warning if the first argument to the
       '$value$plusargs' system calls is missing a format specifier.


