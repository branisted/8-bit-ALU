
                   Release Notes For ModelSim Altera 6.2f

               Copyright 1991-2007 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
                                Corporation.
    The original recipient of this document may duplicate this document in
                                whole or in
  part for internal business purposes only, provided that this entire notice
                               appears in all
  copies. In duplicating any part of this document, the recipient agrees to
                                 make every
  reasonable effort to prevent the unauthorized use and distribution of the
                                proprietary
                                information.



                                Jan 12 2007
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.2f

     [7]Verilog Defects Repaired in 6.2f

     [8]PLI Defects Repaired in 6.2f

     [9]VHDL Defects Repaired in 6.2f

     [10]FLI Defects Repaired in 6.2f

     [11]VITAL Defects Repaired in 6.2f

     [12]SystemC Defects Repaired in 6.2f

     [13]Assertion Defects Repaired in 6.2f

     [14]Mixed Language Defects Repaired in 6.2f

     [15]Coverage Defects Repaired in 6.2f

     [16]General Defects Repaired in 6.2f

     [17]Mentor Graphics DRs Repaired in 6.2f

     [18]Known Defects in 6.2f

     [19]Product Changes to 6.2f

     [20]New Features Added to 6.2f
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + hp700aloem - HP-UX 11
          + linuxaloem - RedHat 7.2 and higher.
     * The following platform will be discontinued as of the 6.3 release:
          + HPUX Platform - hp700aloem
   ______________________________________________________________________

   User Interface Defects Repaired in 6.2f
     * The individual bits of a delayed virtual bus were not displayed with the
       proper delay value, even though the bus was displayed properly in the
       Wave window. Also, waveform compare with a delayed bus did not compare
       properly.
     * The "Window" drop down menu on the menu bar of the Source window was
       missing when the window was undocked. This menu has been added.
     * Interactive font changes to the Transcript window did not effect all
       prompt labels in the window.
     * The Objects window sometimes displayed incomplete lists or drew poorly
       in -view mode when the default sort was ascending or descending.
     * Some font specifications in a users .kderc file caused an invocation
       error in the simulator.
     * In some cases the Control-F shortcut did not behave as expected and
       opened multiple Find dialog boxes or did not work at all.
     * In some cases Control-X and Control-V did not work in the Source window
       Find dialog box.
     * The Save Format dialog box was too narrow for reasonable pathname entry.
       The entry box has been made wider to accommodate longer pathnames.
     * On the Windows platform, choosing File->exit or selecting the 'X' in the
       upper right of the Main window failed to exit when a simulation was
       loading or running.
     * Double-clicking on a compile error in the Transcript window did not
       bring up the source and highlight the error.
     * The Edit Breakpoint dialog box previously allowed you to change the line
       number and file number if you invoked it by clicking on a line. Now
       these fields are editable only if you are creating a new breakpoint,
       otherwise they are read-only.
     * The F3 function key in the Source window now does a "find next", as it
       used to do in 6.1. The "maximize window" action now uses F5 instead of
       F3. The "activate next window" action now uses F4 instead of F2.
     * The Call Stack window stopped responding to mouse clicks after the
       window was invoked and then clicking the mouse in the Structure window.
       After a single-step operation it started responding again.
     * Clicking on the "+" to expand dynamic arrays in the Variables window
       (after the array was allocated) did not expand the array.
     * The "Files" tab in the workspace pane did not show all the files for
       design units. In the case of Verilog `include files, only the first file
       was shown when more then one file existed.
     * When the Call Stack window was invoked while vsim was loading, the Call
       Stack window was displayed as a gray window frame.
     * The text box for the breakpoint command, which is located in the signal
       breakpoint  and  file  breakpoint dialog boxes did not support the
       functions cut, copy, paste and delete. These functions have been added
       in a popup menu.
     * Fatal and failure messages in the Transcript window were not colorized
       correctly.
     * The  File  List  pane  was updated to the top of the pane (without
       expansion) when the user selected exclude missed coverage. This caused
       the "file context" to change and the user was required to reset the
       context by hand to exclude more missed coverage.
     * Clicking  in  the  Wave  windows,  waveform  pane caused incorrect
       highlighting in 6.2e.
     * The Wave window drag and drop function crashed if an object was dragged
       from the value column in the Objects window and dropped in the value
       column of the Wave window.
     * A Wave window drag and drop function could "lose" a wave group if it was
       dragged from the name column and dropped into the value column or visa
       versa.
     * The mouse cursor was flashing when Objects were dragged from the Source
       windows to Watch window.
     * On the Windows platform, if the kernal exited unexpectedly, such as when
       there is insufficient memory, the GUI closes so quickly that the user
       can not read the error message. If the simulator is launched from a
       desktop icon, there is not a console or shell listing the message after
       the simulation closes. The GUI now brings up a dialog box notifying the
       user of the exit code. The dialog box closes automatically after 10
       seconds.
     * Signals displayed with analog format in the Wave window sometimes had
       erroneous glitches.
     * The capitialization of words in Dataflow window menu picks were not
       consistent with the rest of the GUI.
     * The vcd add command has been extended with the -dumpports switch. When
       the vcd dumpports command cannot specify all ports that will appear
       within the VCD file, multiple vcd add -dumpports commands can be used to
       specify the ports.
     * Coverage exclusion by instance using a Right Mouse Button click in the
       Missed Coverage window, did not work.
     * On the Windows platform, when a file was added to a project, and the
       pathname contained an environment variable, certain operations on the
       file in the project did not work properly.
     * The project setting "Convert pathnames to softnames", is found on the
       project properties dialog box. It did not change pathnames correctly.
       All project files are now converted to softnames, if possible, otherwise
       they are converted to a hard pathname. This feature is only used when
       MGC location maps are used.
     * If either of the vsim command line options -msgmode or -wlfslim were
       used  with the -load_elab option vsim mistakenly reported an error
       message such as:
       ** Error: Argument -msgmode is incompatible with -load_elab
     * Source code annotation did not show up for verilog files with ansi style
       task declarations. This has been fixed.
     * Errors  like the following could occur if more than 10 Wave Window
       bookmarks are defined and the bookmarks pulldown menu is generated: "#
       CheckMenuAccelerator:  10  mem  bus  .mBar.activewindowx.bookmarks
       accelerator "#10" is invalid". This has been fixed.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.2f
     * A task call was incorrectly optimized away in some cases if the task
       called  a  function  that modified state variables external to the
       function.
     * Hierarchical references prefixed with $root from within packages did not
       produce an error.
     * When initializing a dynamic array vopt erroneously issued the error:
       Initialization array for 'new' must match array being set.
     * An incorrect value would be reported in an eVCD file when a port was
       driven against its direction.
     * Incorrect  errors  could  occur when running vopt on a design with
       $signal_spy.
     * In a class specialization, referencing a package localparam of a dynamic
       type (such as string) could result in a fatal error from vopt.
     * Assertion messages produced by methods of a parameterized class could
       produce an incorrect file name.
     * Using $fscanf with the %d format now handles register arguments larger
       than 32 bits correctly. Previously only the least significant 32 bits
       were loaded from the converted string.
     * The conditional operator in SystemVerilog when used with a string type
       and  a string literal compiled successfully but produced incorrect
       simulation results. An example of code that failed is:
       ' tmp = valid ? bar : ""; ',
       where bar is of string type.
     * Incorrect file names were displayed in error messages originating from
       within `include files.
     * The $signal_force system task was not correctly checking the validity of
       the 4th argument, force_type. The task expected an integer but silently
       allowed other argument types like string.
     * In some cases vopt could fail when inlining modules from different
       SystemVerilog compilation units.
     * An error was not reported when a static declaration was initialized with
       an expression containing automatic variables.
     * The evaluation of arguments to system functions ($signed, for example)
       resulted in memory leaks in some cases. Usually, the leak occurred only
       if  the  argument was an operation involving operands having sizes
       dependent on parameters in non-optimized mode.
     * The $cast system task was overly restrictive in allowing only simple
       variable expressions for the first argument. It has been extended to
       support all valid lhs expressions.
     * Bit-selects and part-selects of a localparam having an explicit range
       specified in its declaration with both bounds being non-zero evaluated
       to incorrrect results in non-optimized mode.
     * When an undefined variable name was referenced in complex expressions,
       vopt in some cases generated internal errors like:
       ** Error: test.sv(37): Internal error: ../../../src/vlog/vgencode.c(118)
       vl_save_stack_on_wait
       vlog:    ../../../src/vlog/vgenexpr.c:486:    vopAddr:   Assertion
       `vop->tmpaddr.regno!=FP_REL || vl_save_stack_on_wait' failed.
     * Disabling Verilog fork blocks sometimes left one or more fork processes
       running.
     * Calling  pre-defined  class methods such as get_randstate() in the
       argument  list to system tasks or functions sometimes generated an
       internal error during compilation.
     * Overriding a non-virtual class method with a virtual class method in the
       subclass caused vsim to crash.
     * vopt performed optimizations on virtual class method calls based on the
       compile-time  definition  of  the  method  being  called, but some
       optimizations were not valid for derived implementations of the virtual
       method. This resulted in code in the derived class being skipped in
       certain cases.
     * In certain cases class methods defined in packages incorrectly reported
       the error:
       Actual argument expression for ref formal '(null)' is not an equivalent
       type.
       even though the arguments provided for the ref parameter were valid.
     * Referencing class properties from within a fork..join_none or join_any
       block crashed vsim in some cases.
     * An error was not reported for an illegal reference into a package using
       a hierarchical path (package_name.reference) instead of a legal package
       reference (package_name::reference).
     * An error could be reported for a legal reference to a class method when
       the class object was made visible by an import from a package.
     * An escaped identifier over 1024 characters in length for a module name
       resulted in a compiler crash.
     * A relational operator with an operand denoted by a hierarchical access
       to a memory erroneously reported the following error:
       ** Error: (vsim-3978) ...: Cannot mix packed and unpacked types in this
       operation.
     * A  delayed  non-blocking assignment maturing at the same time as a
       non-delayed non-blocking assignment to the same target variable failed
       to update the variable in the same order that the assignments were
       executed (the LRM requires that they execute in FIFO order, and the
       final value of the variable should be that scheduled by the non-delayed
       non-blocking assignment).
     * The SystemVerilog class copy constructor failed to assign the new class
       handle when the left-hand side expression was an array element or the
       field of a class or structure.
     * Use of #0 delay in verilog task could cause vsim to assert if the task
       got called in the reactive region.
     * Fixed various issues with compiling System Verilog designs with the -u
       option.
     * The -u compile option has been extended to make reserved words case
       insensitive  (previously,  only identifiers were uppercased) to be
       compatible with other simulator's implementation of -u.
   ______________________________________________________________________

   PLI Defects Repaired in 6.2f
   ______________________________________________________________________

   VHDL Defects Repaired in 6.2f
     * Assignments to variables at scopes outside of subprograms should have
       suppressed an optimization that converted those variables to constants.
     * For certain designs containing generics, vcom and vopt could get stuck
       in an internal loop.
     * Running vcom with the +acc option in its simplest form (with only the
       four characters "+acc") gave an error about an unknown option.
     * A Vital level 1 optimized compilation in conjunction with the -nodebug
       option resulted in the erroneous fatal error 3067 when loading the
       design.
     * The compiler could erroneously treat a slice name as a trivial slice if
       the  subtype of the sliced object had an index range containing an
       attribute name whose prefix was of an access type and if the slice
       discrete range was lexically the same as this index range.
     * An overloaded "=" operator was not being handled correctly when compiled
       with expression coverage (-cover e) and produced incorrect simulation
       results. The "=" operator was assumed to return a boolean result, but
       the overloaded version returned a std_logic result. An erroneous type
       conversion was being performed as a result.
   ______________________________________________________________________

   FLI Defects Repaired in 6.2f
     * The FLI function mti_CreateRegion() always converted the region name to
       lowercase. Now it this function maintains the case if the parent is
       Verilog or SystemC, and converts it to lowercase it if the parent is
       VHDL.
     * On 64-bit platforms only, in certain cases when passing parameters to C
       using a FLI concurrent procedure call, the C code ended up with an
       incorrect parameter value.
   ______________________________________________________________________

   VITAL Defects Repaired in 6.2f
   ______________________________________________________________________

   SystemC Defects Repaired in 6.2f
     * SystemC Verification stream objects in certain cases were created in the
       wrong scope or region.
   ______________________________________________________________________

   Assertion Defects Repaired in 6.2f
     * The following built-in functions $countones, $onehot, $onehot0 and
       $isunknown did not work correctly in some cases.
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.2f
     * Elaboration of a module failed when the module contained a Verilog
       generate block encompassing instantiation of a VHDL design unit that had
       been specialized by vopt, due to the presence of generics that could be
       inferred to be constants.
     * In the case where a VHDL design unit instantiated a Verilog module, if
       the Verilog module had a parameter initialized to an empty string, i.e.,
       "", and the actual generic in the VHDL instantiation statement was a
       string type with the value "", the simulator crashed during loading of
       the design.
     * An error message was added for the unsupported Dot-Star ".*" syntax for
       port connections at the SystemC-Verilog and VHDL-Verilog mixed-language
       boundary.
     * Instantiation of VHDL design units from within a Verilog generate region
       might cause vopt to incorrectly issue the following error message:
**Error: Direct or indirect circular dependency between packages
   ______________________________________________________________________

   Coverage Defects Repaired in 6.2f
     * The Verilog system task $coverage_save did not save UCDB files.
     * Condition coverage and expression coverage now do more checking for
       literal  constants  and  reduce  the  expressions and truth tables
       accordingly.
     * vcover failed to report coverage data for instances and design units
       that only contained toggle data.
     * When compiled with expression coverage, a VHDL model using overloaded
       relational operators, e.g., "=", incorrectly applyed type conversion to
       the return value and generate incorrect results.
     * vcover merge reports produced errors if the UCDB files have any code
       coverage data under SystemVerilog interface or program blocks.
     * Expressions and conditions appear in the Missed Coverage window in
       viewcov mode even when all the rows are covered.
     * vcover merge could not find VHDL target instances if the source instance
       names had different case.
     * Generated instance names from the vcover merge -du command contained
       incorrect path separator characters when the work library name is a full
       path.
     * vcover merge prints errors when a source DU has multiple instances, but
       the corresponding target DU has only one instance.
   ______________________________________________________________________

   General Defects Repaired in 6.2f
     * If the Signal Spy signal_release() function was called on a signal that
       was not previously forced (via the GUI force command or Signal Spy
       signal_force function) a fatal error occurred in certain cases.
     * When vsim incountered a fatal error at load time, vsim did not always
       stop the loading process.
     * The SystemVerilog $display function limited string length to 30,000
       characters. Now the maximum string size is 2-GB.
     * The layout vsim command was not recognized in ModelSim PE.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.2f
     * dts0100372759 - Would like a "Window" drop down menu in Source window.
     * dts0100373509 - Vsim does not start if .kderc contains arial font.
     * dts0100378184 - Problems with ctrl-f "Find".
     * dts0100327975 - [Ctrl+x] and [Ctrl+v] shortcuts on "Find" dialog box
       shortcuts don't seem to work correctly.
     * dts0100374716  -  The simulator will not close while simulation is
       running.
     * dts0100367281 - F3 causes source window to zoom in/out, not "Find Next"
       as the doc says in Mouse/keyboard shortcuts.
     * dts0100374751 - Call Stack window stops working after click in structure
       window.
     * dts0100374761 - Cannot expand dynamic arrays in the variables window.
     * dts0100377680 - Crash when adding signal to Wave window.
     * dts0100373004 - Analog wave is shown with a glitch at each major code
       transition.
     * dts0100375228 - Error : (vsim-PLI-3485) when using "signal_force" on
       64-bit machines.
     * dts0100374336 - vcom and vopt hang in 6.2e and consume 100% CPU.
     * dts0100360132 - The simulator lower-case the region name when created
       with mti_CreateRegion, it should keep the case.
     * dts0100368370 - C function doesn't work on 64-bit linux, but works fine
       on 32-bit linux.
     * dts0100375058 - $fell/$rose not working with bit type.
     * dts0100350918 - Cancelling a signal search when using "Wave Signal
       Search".
     * dts0100379554 - Incorrect evaluation of a part-select of a localparam in
       case selection statement having non-zero based range spec.
     * dts0100379996 - vcover merge 6822/6820 errors while merging perfectly
       correct ucdb files.
     * dts0100380032 - Flashing and Objects not dropped from Source to Watch
       window.
     * dts0100374321 - Reference to non-existent (incorrect) line numbers when
       encountering a compilation problem
   ______________________________________________________________________

   Known Defects in 6.2f
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * 'const ref' type of arguments are not supported in the function/task
       calls in assertions. For general function/task calls 'const ref' is
       treated like a 'ref' after issuing a warning.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
   ______________________________________________________________________

   Product Changes to 6.2f
     * The automatic invocation of the design-wide performance optimization
       tool "vopt" has been enabled. Upon invocation, the simulator determines
       if vopt has been run on the top-level module(s) you supplied; if not,
       the simulator invokes vopt and outputs a message similar to:
       # ** Note: (vsim-3812) Design is being optimized...
       The optimization step will improve run time performance and affect the
       visibility of objects in the design. To enable debug visibility it is
       recommended you add additional options to vopt on the vsim invocation
       via the -voptargs argument. For example: vsim -voptargs="+acc" which
       enables  full  debug access to objects in the optimized design. To
       understand the full usage of +acc and -voptargs, please refer to the
       chapter "Optimizing Designs with vopt" in the User's Manual for more
       information.
       If required you may obtain the previous behavior of vsim, where it does
       not perform performance optimizations, by setting the modelsim.ini
       variable "VoptFlow" to 0 (zero). An alternative to setting VoptFlow to
       zero, where interactive debug compile throughput is required you can use
       the -novopt option on the vsim and compilation command line (vcom/vlog).
     * The Watch window has changed the format for some kinds of objects.
       Composite objects are now displayed in an expanded form. The display box
       also will have scrollbars if necessary and is also resizable.
     * vlog or vopt will now display a warning if cross coverage produces
       redundent results.
     * A stacktrace will no longer be printed when a fatal error is the result
       of incorrect user code and the fatal error is recoverable. Instead, the
       simulation stops and the failing source code line is reported.
     * Due to customer requests, statement coverage has been added for VHDL
       concurrent  conditional  signal  assignments  and  selected signal
       assignments.
     * The User Interface was modified to suppress the display of implicit
       wires in the Structure and Process windows. The debugger will not step
       into implicit wire processes when the display of implicit wires is
       suppressed.  This behavior is controlled by a preference variable,
       PrefMain(HideImplicitWires). When this variable is set to 0 (zero) it
       displays implicit wires and allows the debugger to step into them and
       when it is set to 1 (the default), it hides them and suppresses debugger
       interaction with them.
     * Breakpoint and Fatal error messages have changed. They now display the
       name of the function, task, subprogram, module, or architecture where
       the condition occurred, in addition to the file and line number. This
       additional information should make it easier to debug. This old message
       format  can be enabled for backward compatibility by modifying the
       modelsim.ini variable ShowFunctions. Setting this to 0 will revert the
       messages to the previous format.
     * The see command has been enhanced. It will now accept 1 or 2 arguments.
       These arguments are the number of source file lines to display before
       and after the current execution line. The see command has also been made
       available in GUI mode in addition to command line mode.
       see ;# Display source file lines around the current execution line
           ;# By default 5 lines before and 4 lines after are displayed
       see <n> ;# Display <n> lines before and after the current line.
       see <pre> <post> ;# Display <pre> line before and <post> lines
           ;# after the current line
     * Temporary compiler files are now always created in the current "work"
       library under a directory called _temp. Previous versions created files
       in /tmp or /var/tmp and failed in some cases if the given machine did
       not have a large amount of disk space allocated to the partitions that
       contained these directories.
     * The WLF reader cache feature is now enabled by default. This feature was
       introduced in version 6.1, but was disabled by default. Refer to User's
       Manual for more information about the WLF reader cache.
     * The shell commands vcom, vlog, vsim, vmap, no longer expand environment
       variables in filename arguments and options. Instead, variables should
       be expanded by the shell before hand, in the usual manner. The -f option
       that most of these commands support, now performs environment variable
       expansion throughout the file.
       Environment variable expansion is still performed in the following
       places:
          + Pathname and other values in the modelsim.ini file.
          + Strings used as file pathnames in VHDL and Verilog.
          + VHDL Foreign attributes.
          + The PLIOBJS environment variable may contain a path that has an
            environment variable.
          + The Verilog `uselib file and dir directives.
          + Anywhere in the contents of a -f file.
       The recommended method for using flexible pathnames is to make use of
       the MGC Location Map system. When this is used, then pathnames stored in
       libraries and project files (.mpf) will be converted to soft names.
       If a file or path name contains the dollar sign character ($), and must
       be used in one of the places listed above that accepts environment
       variables, then the explicit dollar sign must be escaped by using a
       double dollar sign ($$).
       To revert to the old behavior in the event that this is necessary for
       existing      flows,     set     the     modelsim.ini     variable
       "DepricatedEnvironmentVariableExpansion" to 1. This variable must be set
       in the appropriate section ([vcom], [vlog], or [vsim]) to revert the
       behavior in the corresponding tool.
     * The Scroll Wheel behavior has changed for the Dataflow window. It no
       longer scrolls the window up or down. Instead, the scroll wheel will
       zoom In (wheel down) or zoom Out (wheel up). The window will also center
       on the mouse location as it zooms.
     * In  include  file  "svdpi.h",  the definition of the fields in the
       svLogicVecVal struct has been changed. As per IEEE P1800 SV-CC item
       #883, the two fields in that struct have been renamed from a and b to
       aval and bval, respectively. To help ease this transition, you can add
       -DP1800_2005_VECVAL to your C compiler command line. That will give you
       the old field names until you have the chance to change your source code
       to conform with the new naming.
     * The write report command has been changed to list all source files used
       to compile a given design unit, not just the main file containing the
       module keyword.
     * A "Compile selected files together" checkbox has been added to the
       Compile Source Files dialog. It allows user choice of whether to compile
       all selected files in one compiler invocation or a separate invocation
       for each file. You can change the default using the Preferences dialog
       or by editing the PrefCompileDialog(multiFileCompile) variable in the
       pref.tcl file.
     * The coverage save command writes UCDB files and the -XML switch is no
       longer  supported  with the new functional coverage flow. Also the
       coverage reload command is no longer supported, the users can use the
       view mode of vsim to see their coverage results in the GUI.
     * The coverage save command now saves data in the UCDB format (see note
       under New Features); the old code coverage format can no longer be
       saved, though it can still be processed with the standalone utility
       "vcover". The old functional coverage format will likewise no longer be
       saved with "fcover save", and a UCDB will be saved instead.
     * If you run vsim -voptargs=... and then within vsim invoke vsim again:
       previously the -voptargs argument would be copied down and remain in
       effect.  This  is  no longer the case. It is now reset before each
       invocation.
     * The Find dialog in the Objects, Locals and Dataflow windows now has a
       Find All button.
     * A -coverage option has been added to vopt for running vopt directly and
       adjusting options to correctly handle code coverage. When running vopt
       implicitly through vsim nothing needs to be done: the vsim -coverage
       option will make the needed adjustments.
     * Increase timing check capacities for optimized Verilog cells.
     * The following interfaces of registering a SystemVerilog SystemC DPI
       function have been renamed.
          + "sc_export_function"       has      been      changed      to
            "sc_dpi_register_cpp_function"
          + "SC_EXPORT_FUNCTION"       has      been      changed      to
            "SC_DPI_REGISTER_CPP_FUNCTION"
          + "sc_export_member"       has       been       changed      to
            "sc_dpi_register_cpp_member_function"
          + "SC_EXPORT_MEMBER"       has       been       changed      to
            "SC_DPI_REGISTER_CPP_MEMBER_FUNCTION"
     * Progress  information for loading dataflow is now displayed in the
       dataflow window's footer.
     * A SystemC sc_out port connected to a HDL signal higher up in the design
       hierarchy is now treated as a pure output port. A read() operation on
       such a sc_out port might give incorrect values. Use a sc_inout port to
       do both read() and write() operations.
     * The Active Processes window now loads only those processes it needs for
       display. This provides better interactive performance on designs with a
       large number of active processes when selecting a process from the
       Structure or Dataflow window.
     * Error messages in the VHDL compiler now report the full selected names
       when reporting on types. The old format for these error messages was:
       Error  file.vhd(46):  Constant  "udelay" is type vitaldelaytype01;
       expecting type vitaldelaytype01"
       The new format for these error messages is:
       Error      file.vhd(46):     Constant     "udelay"     is     type
       ieee.vital_timing.vitaldelaytype01;         expecting         type
       vital2000.vital_timing.vitaldelaytype01"
     * There are three FLI/PLI query routines that allow an application to
       programmatically determine the simulator product name and version at run
       time. These are mti_GetProductVersion(), acc_product_version() and
       vpi_get_vlog_info(). The strings they return have been changed slightly.
       The  reason  for  the  change is to make the returned strings more
       predictable both across the routines themselves, and across products and
       product versions. When the above routines return a product name, they
       will  return strings that start either "ModelSim" or "ModelSim for
       Questa". Thus a query to match "ModelSim" in the first 8 characters will
       match for both the ModelSim and QuestaSim simulators. To differentiate
       the Questa simulator, it is necessary to search for the string "Questa"
       somewhere in the product name. The ModelSim simulator will not have the
       string "Questa" in its product name. The product name string contains
       other product-differentiating information too, not detailed here. The
       product version is returned as a separate string in the VPI routine. In
       the other two routines it is returned as part of the same string, with
       the syntactic separator " Version " between the product name component
       and the version number component. The TCL command, vsimVersionString, is
       unaffected by this change.
     * The  coverage  exclude  command  syntax has been changed to better
       accommodate FSM coverage. The new syntax is as follows:
          + coverage exclude [-clearall | -addall][-code bcefst][-dataset
            <name>]
          + coverage exclude [-clear] [-dataset <name>][-srcfile <source_file>]
            [-instance <inst_path> | -du <du_name>][-code bcefs]
            [-linerange <ln>+ | <ln>-<ln>+ | all]
            [-condrow | -exprrow <ln> <rn>+ | <rn>-<rn>+ | all]
            [-ftrans <state_var_name> <trans_id>+ | <trans_id>-<trans_id>+ |
            all]
            [-fstate <state_var_name> <state#>+ | <state#>-<state#> | all]
       The coverage exclude can be used to do 'toggle disable' and 'toggle
       enable'(with -clear).
          + coverage exclude [-clear] -togglenode <node_path>+ [-in] [-out]
            [-inout] [-internal] [-ports] [-r]
       Note  that  the  new 'coverage exclude' functionality is not fully
       supported yet. FSM exclusions will not reflect in the GUI.
   ______________________________________________________________________

   New Features Added to 6.2f
     * Added new system functions $system and $systemf:
        $system("command")  will  take one string argument and run the OS
            command.
        $systemf(list_of_args)  can  take  any  number  of arguments. The
            list_of_args is treated exactly same as $display(). The OS command
            that will be run is the final output from $display() given the same
            list_of_args.
       Return values of both system functions are 32-bit integer and set to be
       the exit status code of the underlying OS processes. Note that there is
       a known issue in the return value of these two system functions on win32
       platform. If the OS command is built with cygwin compiler, the exit
       status code may not be reported correctly when an exception is thrown
       and  thus the return code may be wrong. The workaround is to avoid
       building the application using cygwin or using the switch "-mno-cygwin"
       in cygwin gcc command line.
     * Added the vsim command line switch -printsimstats and the modelsim.ini
       variable "PrintSimStats". When either one is turned on, the "simstats"
       result will be printed out at the end of the simulation session. The
       default is off.
     * Added a vsim command line switch -onfinish mode. The argument "mode" can
       have  the  following  values "ask", "stop", or "exit". This swtich
       customizes vsim kernel shutdown behavior at the end of the simulation.
       The default mode is "ask". The meaning of the different modes are:
          + "ask" -- In batch mode, the vsim kernel will abruptly exit. In GUI
            mode,  a dialog box will pop up and ask for user confirmation
            whether or not to quit the simulation.
          + "stop" -- Causes the simulation to stay loaded in memory.
          + "exit" -- The simulation will abruptly exit without asking for any
            confirmation.
       The modelsim.ini variable "OnFinish" accepts the same arguments and
       values as the command line switch. The command line switch overrides the
       modelsim.ini variable.
     * A "Stop" button has been added to the Signal Search dialog box. This
       button is used to abort a search that may be taking too long.


