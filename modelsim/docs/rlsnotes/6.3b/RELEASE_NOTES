
                   Release Notes For ModelSim Altera 6.3b


                                Aug 31 2007

               Copyright 1991-2007 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
   Corporation. The original recipient of this document may duplicate this
  document in whole or in part for internal business purposes only, provided
  that this entire notice appears in all copies. In duplicating any part of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.

   TRADEMARKS: The trademarks, logos and service marks ("Marks") used herein
    are the property of Mentor Graphics Corporation or other third parties.
   No one is permitted to use these Marks without the prior written consent
    of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as a
     source of a product, but is intended to indicate a product from, or
  associated with, a particular third party. The following are trademarks of
   of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.

   End-User License Agreement: You can print a copy of the End-User License
         Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.3b

     [7]Verilog Defects Repaired in 6.3b

     [8]PLI Defects Repaired in 6.3b

     [9]VHDL Defects Repaired in 6.3b

     [10]FLI Defects Repaired in 6.3b

     [11]VITAL Defects Repaired in 6.3b

     [12]SystemC Defects Repaired in 6.3b

     [13]Assertion Defects Repaired in 6.3b

     [14]Mixed Language Defects Repaired in 6.3b

     [15]Coverage Defects Repaired in 6.3b

     [16]General Defects Repaired in 6.3b

     [17]Mentor Graphics DRs Repaired in 6.3b

     [18]Known Defects in 6.3b

     [19]Product Changes to 6.3b

     [20]New Features Added to 6.3b
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + linuxaloem - RedHat 7.2 and higher.
   ______________________________________________________________________

   User Interface Defects Repaired in 6.3b
     * The presence of non-debug items in a System Verilog design could cause
       dataflow connectivity to be incomplete.
     * The precision of Verification Management window (browser and tracker)
       can  be changed now. Either issue "set PrefUCDB(Precision) " or go
       through "Edit Preference" dialog.
     * The examine command gives inconsistent or incorrect results in some
       cases involving local variables. In some cases, class variables are not
       reachable.
     * Dragging a file into vsim and crossing the Project pane boundary can
       sometimes result in a Tcl error.
     * Shared variables of or containing Access Types cannot be expanded in the
       Objects window.
     * The Coverage Miss windows do not display coverage information when a
       Package is selected in the Workspace, only when selecting the source
       files listed in the Files tab. This has been changed so that selection
       of a package will show the package coverage information.
     * Font configurations do not work correctly and some fonts are just not
       configurable. This issue has been resolved with a change in the way
       fonts  are handled in the product. See Font Changes in the Product
       Changes section for details.
     * The  Source  window did not properly display PSL files (no keyword
       highlight was done). New PSL plugins have been added which fixes this.
     * When you double-click in the Source window on an `include file name,
       sometimes the source for that include file did not open.
     * The  textual dataflow feature in the Source window failed to trace
       drivers  in  cases  where  the  driving process was merged (due to
       optimizations) with other processes.
     * The "Change Directory" dialog box has been changed on Windows only to a
       native Windows dialog that supports Windows aliases and shortcuts.
     * In certain cases the vish process grew too large and eventually ran out
       of memory.
     * Using  -viewcov while there is an active simulation will cause the
       simulation to unload (i.e. quit -sim). Also, multiple vsim -viewcov
       commands will cause prior coverage dataset to be unaccessible from the
       U/I. These problems have been resolved. A new command has also been
       added to facilitate loading multiple coverage datasets for viewing. The
       command coverage open is equivalent to the command vsim -viewcov .
     * Configuring  columns and user attributes are now supported in Test
       Tracker pane.
     * Removed  Tools->"Code  Coverage"->Save...  and  Tools->"Functional
       Coverage"->Save...  menus  to  merge  those dialogs and add to the
       Tools->"Coverage Save..." menu to have a combined save dialog for code
       coverage and functional coverage items.
     * Three modes of messages, Concise, Verbose and Quiet, are consistenly
       supported in the Rank and Merge dialog for Test Browser, and the Rank
       dialog for Test Tracker.
     * The Column User and UserIncr now are hidden by default in Test Browser
       Pane.
     * The add testbrowser command now accepts multiple files as arguments.
     * The add testbrowser command had problems if the input file was not in
       the current directory.
     * The precision of the test tracker pane now can be set by the user.
       Either  from  the  "Edit  Preference"  dialog  or directly do "set
       PrefUCDB(Precision) " in the Transcript window.
     * Expanding a dynamic array or queue in the locals window multiple times
       can result in stale data being displayed in the expanded view.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.3b
     * An optimized design containing a blocking assignment followed by a
       delayed non-blocking assignment to the same register in the same initial
       block  resulted  in  a compiler crash provided these were the only
       assignments to the register.
     * Unconnected UDP terminals resulted in a simulator elaboration crash.
     * Multiple simultaneous delayed non-blocking assignments to a variable
       (with the intention of producing a pulse on the variable) inside of a
       "clocked" always block failed if the delays were longer than the clock
       period.
     * The 'var' keyword was not allowed on ports.
     * File name fix for errors found in series of include files.
     * The +libext compile option was ignored for use by the -y compile options
       if the design also contained `uselib directives having libext entries.
     * Modules that were found and compiled as a result of `uselib compiler
       directives  were incorrectly listed in a compiler message as being
       "Referenced (but uncompiled) modules or primitives".
     * An  optimized  design  having multiple continuous assignments with
       identical rhs expressions and different width lhs expressions could
       produce incorrect results in some cases.
     * Precision of parameters of type real was lost past 6 digits to the right
       of the decimal point in an optimized design.
     * Verilog  macros  containing  unnamed  blocks  with  local variable
       declarations could cause errors like:
           '#ublk#0#14' already exists; must not be redefined as a named block
       or
           Internal error: ../../../src/vlog/vtree.c(14444)
     * When -v2k_int_delays was specified on the vsim command line, 0 delay
       MIPDs were inserted even when there were no SDF files specified. This
       caused an unnecessary slow down and in some cases a crash.
     * Calling  a  task  or  function  with  a  return  statement from an
       initial/always/final  block  may  cause  a  crash  in  vlog if the
       task/function does not contain any named blocks or local variables, but
       the initial/always/final block is named or contains local variables.
     * Fixed  simulation  crash were optimized Verilog gate-level cell is
       instanciated under a VHDL netlist.
     * Verilog event triggers were not compiled compatibly between SunOS 5 and
       Linux platforms.
     * LRM requirements regarding consistency between class "extern" method
       headers and the method implementation were not being enforced.
     * If a value parameter of a parameterized class depended on an earlier
       type parameter, incorrect values could occur in the value parameter.
     * Incorrect errors regarding incompatible types were reported when extern
       class methods had arguments of array types.
     * Verilog compilation would fail with an internal error if an array was
       defined with a parameterized class specialization as the element type.
     * Elaboration could fail if the definition of a forward type referenced a
       parameter that was declared between the forward and the actual type
       definition.
     * Class objects were handled inconsistently in boolean contexts.
     * An attempt to invoke 'rand_mode' on a rand field of a parameterized
       class resulted in a vsim elaboration error. This has been fixed (i.e.
       this use of rand_mode now works correctly).
     * A directory cache was added to the Verilog compiler so that the -y
       option would work more quickly when a directory was searched multiple
       times.
     * vopt  crashed  while loading a configuration in which the instance
       statement specified a top-level module without a use clause.
     * If  the same production name was used in two separate randsequence
       statements,  one of the productions was incorrectly shared by both
       randsequence statements. Now productions with the name occurring in
       separate randsequence statement are maintained as unique productions.
     * When a net was used as an attribute in the System Verilog transaction
       recording interface it resulted in an error message and was not recorded
       properly.
     * In vopt, when analyzing a parent module containing multiple instances of
       a child containing a large number of similar instantiations, vopt could
       fail with an internal error.
     * Improvements have been made in error reporting for `ifdef\`else\`endif
       directives.
     * The usage of ".*" for implicit port connection causes too much memory to
       be consumed especially in Verilog designs with a large netlists.
     * Parsing continues after a bad class extension declaration to produce a
       cascade of errors to assist in debugging.
     * If the target of System Verilog bind is VHDL and one of the actuals of
       bind is an enum expression that maps to a Verilog vector formal, an
       internal error may be caused in vsim.
     * Fixed  an  issue that would cause vlog to generate spurious errors
       whenever out-of-block constraint bodies were defined before protected
       out-of-block class method bodies.
     * Verilog arrays were sometimes displayed in the Wave window with the
       elements in reversed order.
     * vlog  -lint  erroneously complained about "undefined variables" if
       implicit .* port connections were encountered.
     * A clocking block synchronous drive failed when using a bit-select or
       slice on the left hand side of the clocking drive.
     * If the value on the right hand side of a clocking block synchronous
       drive matched the value of the previous clocking drive for an output or
       inout then incorrect behaviour could result.
     * A  clocking block hierarchical expression referencing an interface
       element when the clocking block is in a program block incorrectly caused
       elaboration error vsim-3927.
     * A  memory  leak affecting Verilog on the linux_x86_64 platform was
       ameliorated.
     * Packages were silently permitted in Verilog instantiations. This is now
       an error.
     * When vopt was not used, the simulator would fail to load a module from a
       library specified within a cell statement's liblist when the module was
       instantiated by another module that was configured by a cell statement.
     * Enumerations were not available for use in virtual function formal
       arguments in classes derived from base class containing the enum.
     * Optimization with vopt could produce incorrect vector results when
       optimizing through continuous assignments containing concatenations of
       net part selects where the selected nets were themselves driven by
       continuous assignments of concatenations.
     * The  $nochange task reported simulatenous data and clock events as
       violations. This contradicted the IEEE 1364-2001 specification.
     * The array 'shuffle' method now uses the "-sv_seed" value for seeding its
       random number generator. This means that the results of 'shuffle' are
       repeatable.
     * Accessing  a  class  property  that  was directly inherited from a
       non-parameterized class which had a parameterized class inheritance
       ancestor  could cause incorrect memory locations to be accessed. A
       prototypical case would be:
           class base #(int p = 1);
           endclass
           class mid extends base#();
              int x,y;
           endclass
           class derived extends mid;
           endclass
           derived d = new; // accessing x or y via d could cause problems.
     * Parameters defined using an unsized, unbased literal crashed.
     * When  a  child  process  within  a  fork-join  was  killed via the
       'process::kill' method, the parent containing the fork-join was never
       reactivated.
     * Incorrect  errors  could  be  reported regarding ref argument type
       mismatches when the actual argument was a reference into a parameterized
       class object or a reference through a variable whose type was a type
       parameter.
     * In some cases, error checking was incorrect for automatic tasks and
       functions whose formals were of class types and whose actuals were of
       other types in the same inheritance hierarchy. Incorrect errors could be
       reported and correct errors could be missed.
     * Incorrect errors could be reported if extern methods had formals whose
       types involved parameterized class types or type parameters.
     * Errors were not reported when a "local" class member was accessed in an
       extended class where the access used a "super." or "this." prefix.
     * Ref ports could not be logged if the object the port referenced was
       already logged. This was also the case for non-ref register ports if the
       actual and formal were of the same type and length.
     * Segmentation fault occured in vlog when using parameter value of a class
       instance variable as an array index.
     * When a SystemVerilog package was compiled into multiple libraries and
       vopt was run on a design that referenced the different copies it would
       cause an error like:
       **     Error:     (vopt-7)    Failed    to    open    data    file
       "./work/test_vopt/._lib2_pkg_fast.dt2" in read mode.
       ** Error: inst2.sv(6): Internal error: ../../../src/vlog/vtree.c(10680)
     * In some cases where parameterized class methods contained references to
       variables declared outside the class vopt generated an internal error of
       the form:
       #      **      Error:      interr2.sv(78):     Internal     error:
       ../../../src/vlog/vgendecl.c(5934)       allocatedOf(decl)      &&
       !alias_exprOf(decl)
     * vsim incorrectly reported an error when accessing program items from
       within a class that was declared in a program.
     * The  implicit call to $exit() that should occurs after all program
       initial blocks complete was not occurring after reloading a design
       checkpoint file or restarting simulation.
     * The error produced by nested generate regions produces a more helpful
       message.
     * The vlog compiler "autoswitches" between Verilog and System Verilog
       based upon the file suffix such as ".sv" and ".v".
     * For static elements of a class, sometimes accessing a built-in function
       was resulting in this internal error:
       Internal error: ../../../src/vlog/vallocate.c(932) dst && src
     * Module instantiation using aggregate concat sometimes could cause errors
       like:
       ** Error: new.v(8): Internal error: ../../../src/vlog/vgenexpr.c(7381)
       targetOf(e)
       or
       ** Error: test2.v(10): Internal error:
       ../../../src/vlog/vgendecl.c(5936)  (var_typeOf(decl) != t_net) ||
       is_atomicOf(decl) || net_cacheOf(decl)
     * Starting   with  the  6.3  release,  bitstream  casting  involving
       multi-dimensional  unpacked arrays sometimes resulted in incorrect
       output. This worked prior to the 6.3 release.
     * Packed types were incorrectly compared using "equivalence" rules rather
       than "matching" rules when used as type parameters for parameterized
       classes. This resulted in some incorrect specializations and resulting
       elaboration errors.
     * Cycle delays are now supported in $unit.
     * The vsim switch +vlog_retain_old will provide pre-6.3 RETAIN behavior in
       Verilog modules. Setting the environment variable "MTI_VLOG_RETAIN_OLD"
       will have the same effect.
     * Improvements have been made when reporting errors for empty Verilog
       statement lists.
     * Optimized Verilog cell functions incorrectly wrt. input of net type
       supply1, supply0.
     * On large designs with very deep data flow dependencies through the
       design vopt could fail with a message such as:
           # ** Error: (vopt-1975) vopt failed -- received signal 11.
     * System Verilog designs using fork..join_none block containing local
       variables that are passed to "ref" arguments of a task or function could
       cause vsim to crash.
   ______________________________________________________________________

   PLI Defects Repaired in 6.3b
   ______________________________________________________________________

   VHDL Defects Repaired in 6.3b
     * In prior releases the VHDL compiler allowed a variable of a protected
       type to be created prior to declaring the body. This is common if a
       package  is used to declare the protected type header and a shared
       variable of that type is also declared within the package header. The
       simulation could crash or generate incorrect results when this happened.
       The vcom switch -allowProtectedBeforeBody allows the old behavior but
       the simulator can still crash or generate incorrect results.
     * vsim  could  crash  during  elaboration when hanging logic removal
       optimizations  failed to cancel all the descendant statements of a
       statement that was removed.
     * A protected type can be declared in package body and a shared variable
       of that type that is private to the body of a procedure in that package
       may also be declared. In an optimized design, where subprogram inlining
       occurred, it was possible to crash vsim when calling that procedure.
     * Compilation failed when the option -check_synthesis was used and there
       was an attribute of a design unit used.
     * A port of an unconstrained array type, whose mode is not IN, and that
       has a default expression in its declaration, can be associated only with
       an actual that has a matching element for every element in the default
       expression. The error message related to a violation of this rule has
       been improved.
     * Some "for loops" when iterating beyond a dimension of a multidimensional
       array signal crashed.
     * An optimization of wait statement representing an edge transition of a
       boolean signal expressed in a redundant form:
       "wait  until (bool_clk'event and (bool_clk'last_value = false) and
       (bool_clk = true));" caused a crash.
     * An optimization of a wait statement for one case of a gated clock in
       which the gate expression is a boolean could resume the process on the
       wrong edge.
     * vopt crashed when an identifier is overloaded (e.g. defined both as enum
       and function), and is used inside a process, and if vopt is run with the
       -check_synthesis option.
     * Some clock and latch optimizations using signal arrays would crash.
     * In some cases, a port that was used as the actual for an out mode signal
       parameter of a procedure was being optimized incorrectly and caused a
       crash in vsim.
     * Multiple uses of the same signal array in a port map caused a crash.
     * The  number  of iterations for a FOR GENERATE could be incorrectly
       determined to be 0. This would occur if the design was optimized, the
       architecture containing the FOR GENERAGE is instantiated multiple times
       and in at least one case the correct number of iterations 0.
     * Some  signal  arrays  passed  to record port fields were connected
       incorrectly which produced incorrect results.
     * Using Generate Index as an index for Index Expression in a generic map
       caused a crash in 6.3a in Power-Aware mode.
     * vsim crashed on some signal arrays driven at lower points in the design
       hierarchy.
     * This VHDL design crashed in vsim with earlier release (6.3a)
   ______________________________________________________________________

   FLI Defects Repaired in 6.3b
   ______________________________________________________________________

   VITAL Defects Repaired in 6.3b
     * The Vital 2000 "vital_timing" package overloaded VitalSetupHoldCheck()
       procedure   (the   one  with  the  TestSignal  parameter  of  type
       std_logic_vector) had what we consider to be a bug in the original VHDL
       source version, also replicated in our accelerated version of this
       procedure.  This bug prevented Setup and/or Hold checks from being
       reported. In anticipation of the IEEE Vital standard being corrected,
       this  bug  has  been  fixed not only in the VHDL source located at
       [install_dir]/vhdl_src/vital2000/timing_b_2000.vhd, but also in the
       accelerated version of the procedure.
     * An interconnect annotation from an optimized Verilog cell to a VHDL
       instance would not report an error if the VHDL instance was not VITAL
       compliant. The error reporting is now consistent between optimized and
       non-optimized.
   ______________________________________________________________________

   SystemC Defects Repaired in 6.3b
     * An array of SystemC signals with elements of it connected to HDL and
       SystemC were not traced correctly in the Wave and List windows.
   ______________________________________________________________________

   Assertion Defects Repaired in 6.3b
     * We now allow boolean@clock in a PSL 'never' property. The boolean does
       not need to be enclosed in braces.
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.3b
     * In certain cases when VHDL instantiated a Verilog module in a resource
       library and the work library contained a VHDL entity with the same name
       as the instantiated Verilog module, then vopt selected the wrong library
       name, causing vsim to fail to load the design.
     * The Verilog $countdrivers system task was enhanced to work on ports that
       are at mixed language boundaries.
     * VHDL  entities  instantiated  within Verilog crashed under certain
       circumstances.
   ______________________________________________________________________

   Coverage Defects Repaired in 6.3b
     * The coverage analyze -select attr NAME -eq VALUE command will compare a
       user-defined attribute of string type using integer or floating point as
       appropriate (e.g., an attribute whose value is the string "6" can be
       compared  as an int or float.) This allows user-defined attributes
       imported from a test plan to be compared intuitively.
     * The  coverage  attribute command did not work in a vsim simulation
       however,  dataset; "coverage attr" did. This was inconsistent with
       coverage view mode, where "attribute" is used and documented.
     * The -codeAll option was added to the coverage save command.
     * There was a problem with VHDL condition and expression coverage related
       to the handling of VHDL 'H' and 'L' values. Previously, conditions and
       expressions automatically converted 'H' and 'L' input values to '1' and
       '0', respectively. This simplified the UDP tables, but could result in
       incorrect behavior for circuits that used and tested for 'H' and 'L'.
       Now, the default behavior is to NOT convert input values as described.
       But  if  you  are  not using 'H' and 'L' values, and object to the
       additional UDP rows that are difficult to cover, you can do one of the
       following:
          + Change your VHDL expressions of the form (a = '1') to (to_x01(a) =
            '1') or to std_match(a,'1'). These functions will be recognized and
            used to simplify the UDP tables.
          + Set the new modelsim.ini variable "CoverRespectHandL" to 0. This
            gives the previous behavior.
          + Use the option vcom -nocoverrespecthandl.
     * Calculation of toggle coverage was corrected for cases involving a
       subset of a UCDB. This affected some invocations of the coverage analyze
       command  reporting toggle coverage; the Test Tracker GUI if toggle
       coverage  was  linked to part of a test plan; and the test ranking
       algorithm if applied to toggle coverage and a subset of the design
       hierarchy.
     * Fixed a bug in the filtering results of the Test Tracker GUI, in which
       the GUI would be erroneously empty after selecting the "Prune Children"
       option.
     * Added the -select <ports|inputs|inouts|internals> option in the vcover
       report command to work with the -toggles option.
     * vcover  merge  was  reporting  incorrect error #6802 on UCDB files
       containing VHDL integer toggles.
     * Design unit coverage statistics were incorrectly being reported on
       design instance summary pages.
     * Fixed core dump in HTML report for testplan section with null section
       number.
     * The Details window was not showing any results for missing expressions
       in viewcov mode.
     * The response time with the GUI up in viewcov mode was too slow for
       executing some coverage exclude commands from a do file.
     * vsim was hanging while trying to load an UCDB file in viewcov mode.
     * The report results from vcover and viewcov mode were different when the
       design had multiple tops.
     * vcover was hanging while trying to read a UCDB file.
     * An internal error occurred during expression coverage.
     * Fixed a crash in coverage save for empty FSMs.
   ______________________________________________________________________

   General Defects Repaired in 6.3b
     * After disabling many signals, logging could crash with floating point or
       memory problems.
     * When a work library path, which contains the '/' character, is specified
       with the -lib option on the vsim command line, and vopt is implicitly
       invoked from vsim, the simulator cannot find the work library path. This
       was a Windows only problem.
     * The simulator failed to load a Verilog module that had a NULL parameter
       as the fourth argument of a call to $signal_force(). The system task
       call now correctly recognizes the NULL parameter as a valid value and
       uses the fourth argument's default value.
     * The simulator could crash on restart when simulating certain System
       Verilog designs.
     * Fixed issues in backward-SAIF file generated by a power report command.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.3b
     * dts0100196169  - Show same package coverage information on sim tab
       (empty) as currently on files tab.
     * dts0100403297 - Fatal vopt error when using hierarchical configuration.
     * dts0100416399 - Virtual type/function with don't cares is not matching
       correctly.
     * dts0100417851 - Need better viewing capabilities for real-number waves
       from VHDL real-numbered signals/ports in the vsim waveform viewer.
     * dts0100419905 - set command and variable from modelsim.ini file.
     * dts0100420251  -  Crash  in simulation (after removing many logged
       signals).
     * dts0100420715 - Problem with handling multiple libext specifications in
       the `uselib directive.
     * dts0100420861  - Different values in simulator when using vopt and
       novopt.
     * dts0100420419 - Crash when -v2k_int_delays is used.
     * dts0100420930 - Error when compile all on a VHDL group.
     * dts0100421105 - Vish process size grows if loops in do files are used
       and running with GUI up.
     * dts0100421853 - VHDL wait until condition does not evaluate correctly.
     * dts0100421892 - Usage of $countrdrivers gives FATAL SIGSEGV or always
       ZERO or always ONE, depending on platform.
     * dts0100425719 - An optimized design containing a blocking assignment
       followed by a delayed non-blocking assignment to the same register in
       the same initial block resulted in a compiler crash provided these were
       the only assignments to the register.
     * dts0100425853 - In vopt, when analyzing a parent module containing
       multiple instances of a child containing a large number of similar
       instantiations, vopt could fail with an internal error.
     * dts0100426800 - VHDL simulation gives different results depending on
       whether coverage is enabled or not.
     * dts0100427948 - vopt crashed when an identifier is overloaded (e.g.
       defined both as enum and function), and is used inside a process, and if
       vopt is run with the -check_synthesis option.
     * dts0100423776 - Incorrect warning message related to cross bin number
       counting.
     * dts0100428523 - lint checker with vlog does not identify .* implicit
       port connections.
     * dts0100428528 - Some fonts and font sizes in the GUI cannot be changed
       by the user preference.
     * dts0100428837 - A known limitation of vcd2wlf to add in documentation.
     * dts0100429896 - Xml2ucdb from excel using path column not generating the
       proper coverage tag command.
     * dts0100430828 - VHDL assert statement firing incorrectly.
     * dts0100430911 - Fields in the subclass of a parameterized super class
       get assigned wrong values.
     * dts0100430963 - System Verilog array method 'shuffle' produces different
       results in GUI vs. batch modes in certain cases.
     * dts0100431414 - Crash with vsim -viewcov.
     * dts0100431486 - An internal error occurred during expression coverage.
     * dts0100431839 - Simulator crash when variable of a protected type is
       declared prior to declaring the body.
     * dts0100432999 - Better error message when nested generate statement if
       inside for exists in the code.
     * dts0100433357 - Bitstream casting to a two dimensional unpacked array
       produces incorrect output.
     * dts0100433547 - On large designs with very deep data flow dependencies
       through the design vopt could fail with a message such as: # ** Error:
       (vopt-1975) vopt failed -- received signal 11.
     * dts0100424407 - Error loading simulation: Fatal: (vsim-8303) Repetition
       multiplier must be constant.
     * dts0100431810 - sc_in value not displayed correctly in Wave pane.
     * dts0100434451 - 'vcd limit' argument only takes an integer value, and
       complains when the limit is larger than 2GB.
     * dts0100435436 - "#expected integer but got "INF"" in Transcript and
       Source window disappears after selecting lines to exclude in the Missed
       Coverage window.
     * dts0100435387 - Expression Builder GUI button does not allow selecting
       multiple signals.
   ______________________________________________________________________

   Known Defects in 6.3b
     * The viewcov mode version of "coverage clear" has a known difference in
       behavior compared to the vsim mode version. In the viewcov mode version,
       clearing coverage data in a design unit instance does not affect the
       coverage data for that design unit, itself. Also, if you clear coverage
       data  in  a design unit, all instances of that design unit are not
       affected by that operation. In vsim mode, the data is more tightly
       linked such that one operation affects the other. In viewcov mode, if
       you want to have correct data correlation between instances and design
       units, then you need to clear both instances and design units.
     * The simulator will hang if it tries to create a WLF file while running
       on a Linux 64-bit operating system from a working directory which does
       not support large files. One common instance of this is executing an add
       wave command, when the working directory was created under an older
       32-bit Linux OS.
       This  is  a  Linux operating system bug and cannot be fixed by the
       simulator.
       A workaround for release 6.3 and above is to execute the simulator with
       command line option -wlfnolock.
     * The stack unwinder on the linux_x86_64 OS is unreliable. The unwinder is
       the fundamental facility provided by the OS for sampling where program
       execution is at. The unwinder is necessary for gathering performance
       data. This is a known issue with this specific OS and is why performance
       data will be incorrect or non-existant on this platform.
     * Users should be mindful of enabling both performance profiling and
       memory  profiling at the same time. Memory profiling requires much
       overhead  process,  and it can skew the results of the performance
       profiling data.
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * Specparams can be learned during the learn flow, but cannot be found on
       consumption. The workaround is to use full +acc deoptimization.
     * Attempting  to  traverse from an unnamed VPI typespec handle to an
       instance or a scope will result in a crash.
     * There are some limitations related to coverage exclusions:
          + Toggle exclusions are not supported in viewcov mode yet.
          + Exclusion report on toggles are not supported in both vsim and
            viewcov mode.
     * Concatenations and bit slices are not yet supported for System Verilog
       clocking blocks.
   ______________________________________________________________________

   Product Changes to 6.3b
     * The restart command will reload the current dataset if the current
       dataset is not the active simulation ("sim"), in effect acting just like
       a restart of a simulation. See the dataset restart command below under
       "New Features".
     * The XML Testplan Import configuration file (xml2ucdb.ini) has been moved
       from the product directory to a sub-directory, vm_src, directly below
       the product directory.
     * The ucdb2html utility has been removed from the release. The HTML report
       functionality had been integrated into vcover for 6.3 (see vcover report
       -html).
     * Due to changes required for resolution of product defects, the generated
       names of specializations of parameterized classes could be permuted. For
       example, if a name such as "C::C__2" was previously used for "C#(int)"
       and "C::C__3" was used for "C#(logic)", the names might be exchanged.
       The conditions under which name permutation could occur are based on
       internal details of how specializations are matched and are not directly
       correlated to source descriptions.
     * The default action for the command onbreak has changed from "pause" to
       "resume". This will only impact dofiles that do not currently contain
       any onbreak commands. The "pause" action causes the macro file to stop
       executing and issues a "Paused" prompt to allow interactive debugging of
       the macro file. The resume command continues the execution of the macro
       file at the point of the break. The result of this change in default
       value will affect macro files without an onbreak command so that those
       files will continue executing after hitting a break point. If the old
       behavior is required, then it will be necessary to add the command
       onbreak pause at the beginning of the macro file.
     * The default collapsed mode for VCD output from the vcd dumpports command
       has changed from not collapsed to collapsed. The specific change was to
       the line in the modelsim.ini file: "DumpportsCollapse = 0".
       For 6.3, this was changed to: "DumpportsCollapse = 1".
       To get the old non-collapsed format, change this setting back to 0 in
       the modelsim.ini file.
     * Starting in 6.3 concatenations are no longer treated as 'assignment
       patterns'. Previously, the simulator attempted to detect these cases and
       produced the following warning:
       You should use "'{" to specify this literal.
       Now we will print errors, as in the following example:
       int a[3:0] = {default:0};
       int b[1:2] = {32'b1, 32'd2};
       ...
       ** Error: test2.sv(31): Can't use named concat. literals here.
       ** Error: test2.sv(31): Illegal concatenation of an unsized constant.
       ** Error: test2.sv(31): Cannot assign a packed type to an unpacked type.
       ** Error: test2.sv(32): Cannot assign a packed type to an unpacked type.
     * Previously,  an attempt to print a memory using $display displayed
       nothing, while $display of other unpacked types (such as structs and
       dynamic  arrays)  did produce output. In 6.3, we will now print an
       elaboration error, #8323, for all such constructs (which are illegal).
       This error may be suppressed.
       To  print  unpacked  data, we have added the "%p" and "%0p" format
       specifiers.  The  former  prints  the  data in the form of a legal
       "assignment pattern", while "%0p" prints in a shorter format.
     * Wildcard indexed associative array can no longer be used as a foreach
       array.
     * The IEEE Std 1800 has approved an important restriction to packages.
       With the new rules, packages are not permitted to refer to compilation
       unit items. An example of such of reference is the following small
       design:
            typedef int T;
            package p;
                T foo;
            endpackage
       Packages may depend on other packages so compilation unit declarations
       that packages need should be refactored into separate packages. For
       example, the previous design should be changed to a form similar to the
       following:
            package shared_types;
                typedef int T;
            endpackage
            package p;
                import shared_types::*;
                T foo;
            endpackage
       It is also important to note that "import" statements immediately before
       a package declaration are compilation unit imports and not imports into
       the subsequent package. With the new rules, the package references may
       not look into such an import. For example, the following approach will
       no longer work:
            package shared_types;
                typedef int T;
            endpackage
            import shared_types::*;
            package p;
                T foo; // cannot refer to T since it is imported into
                // the compilation unit, not into the package
            endpackage
       The new rules are now being enforced. Designs must be refactored so that
       packages do not refer to anything in the compilation unit.
     * This release includes the new Mentor Graphics Documentation System,
       which includes the following components:
       InfoHub -- A browser-based directory that provides links to all your
       locally installed documentation. The InfoHub also provides a search
       interface, from which you can search across all your locally installed
       documents. The search interface also enables you to submit a search
       directly  to  SupportNet.  The InfoHub provides access to User and
       Reference manuals and Tutorials, delivered in both HTML and PDF formats,
       and Release Notes, delivered in text format.
       PDF Bookcase -- A PDF file that provides links to the PDF documentation
       if you cannot use an HTML browser.
     * The  vopt  +acc=g option has been replaced by the +floatparameters
       option(Verilog designs) and the +floatgenerics option (VHDL designs).
       Both +floatparameters and +floatgenerics accept the same [+<module>][.]
       syntax accepted by +acc. Use +floatparameters and +floatgenerics to
       instruct vopt not to lock down values of parameters and generics during
       optimization. The parameters and generics will be left "floating", and
       thus  capable  of accepting modified values via the vsim -g and -G
       options. +floatparameters and +floatgenerics may have adverse effects on
       performance in some cases.
     * The vopt +acc=m option has been changed such that it no longer preserves
       primitive instances. Primitive instances are now preserved by using the
       new +acc=u option.
     * The VoptCoverageOptions variable has been removed from the modelsim.ini
       file. vopt optimizations for coverage are now controlled by the CoverOpt
       modelsim.ini file variable and the -cover command line option.
     * The  -coverage  option  to  vopt  is  no  longer needed. vopt will
       automatically detect whether any of the source files were compiled with
       a -cover option, and will adjust its optimizations accordingly. Also, if
       you give a -cover xyz option to vopt, it will be logically OR'd with any
       -cover abc option given to an individual source file when processing
       that source file. In addition, if you compiled some source files with
       coverage on, you can force coverage off by giving vopt the -nocover
       option. This allows you to control whether coverage is on or off at vopt
       time instead of having to recompile individual source files.
     * The pathname reported by the simulator and User Interface for items
       inside SystemVerilog packages is incorrect. A path separator ('/') was
       used instead of the language correct package scope separator ('::').
     * The recording of attributes for transactions has changed. Previously,
       any attribute recorded on a transaction was not only added to every
       transaction on that same substream, but to all parallel transactions and
       the transactions on their substreams as well.
       Now, any attribute recorded on a transaction is still added to every
       transaction on that same substream, but is no longer automatically added
       to every parallel transaction and the transactions on their substreams.
       Typically, all transactions on a given stream (and all of it's parallel
       substreams) have the same set of attributes, and for that case, there
       will be no difference due to this change.
     * Changes for coverage exclude command:
          + Replace the option -instance with -scope to accommodate more scope
            types like generate block.
          + Transition  names are used with the option -ftrans instead of
            transition id's. The new syntax is:
                [-ftrans <state_var_name><transition_name>+ | all]
            where transition_name is specified as <state_name>-> <state_name>.
          + State names are used with the option -fstate instead of state id's.
            The new syntax is:
                [-fstate <state_var_name> <state_name>+ | all]
          + A new option -else is added to exclude the else part of every
            if-branch specified in the line range. Note that the line number
            for the else-branch is where the if-branch appears.
          + Recursive  exclusion for a scope is supported. To recursively
            exclude a scope, -scope is specified together with -r.
          + -scope and -du are supported with -togglenode.
     * The  UCDB  bin name for if-branch is changed from 'true_branch' to
       'if_branch'.
     * The  simulator has been improved to recognize and maintain Verilog
       escaped  identifier  syntax  for  all Verilog escaped identifiers.
       Previously  such identifiers were converted to VHDL-style extended
       identifiers, and then appeared as VHDL extended identifiers in tool
       output and CLI commands.
       Starting in 6.3, all default Verilog escaped object names inside the
       simulator appear identical to their names in original HDL source files.
       Sometimes in mixed language designs, hierarchical identifiers might
       refer to both VHDL extended identifiers and Verilog escaped identifiers
       in the same fullpath. For example:
       /top/\VHDL*ext\/\Vlog*ext /bottom
       top.\VHDL*ext\.\Vlog*ext .bottom
       (depending if the HierPathDelim variable is set to '/' or '.')
       Any fullpath that appears as user input to the tool (e.g. on the vsim
       command line, in a .do file, on the vopt command line, etc.) should be
       composed of components with escape syntax appropriate to their language
       kind.
       A modelsim.ini variable called "GenerousIdentifierParsing" can control
       parsing of identifiers input to the tool. If this variable is set (it is
       set by default now), either escape syntax to be used for objects of
       either language kind. This can be helpful to maintain compatibility with
       older  do files, which often contain pure VHDL extended identifier
       syntax, even for escaped identifiers in Verilog design regions.
       Note that SDF files are always parsed in "generous mode". SignalSpy
       function arguments are also parsed in "generous mode".
       On the vsim command line, the language-correct escape syntax should be
       used for top-level module names. Using incorrect escape syntax on the
       command  line  will  work  in the incr flow, but not in vopt. This
       limitation may be removed in a future release.
     * If  an  invalid  end  time  is specified when recording the end of
       transaction, a warning is still issued but the current simulation time
       is used as the transaction end time instead of the transaction start
       time.
     * The format of the library contents file (_info file) has been changed
       for the purpose of improved compiler performance. The new format is not
       backwards compatible with previous releases. Consequently, any attempt
       to refresh or recompile a 6.3 library with an older release will result
       in an error similar to the following:
       ** Error: (vcom-42) Unsupported ModelSim library format for "./work".
       (Format: 3).
       Converting the library back to an older release requires that you remove
       the library and rebuild it from scratch. Or, if you are converting back
       to a 6.2 release only, then you can convert the library format to the
       6.2 format and then freely refresh back and forth between 6.2 and 6.3
       releases. Use the 6.3 version of vlib to convert the format to the 6.2
       version using the -format option. For example:
       vlib -format 1 work
       The format version for pre-6.3 releases is 1, while the format version
       for 6.3 is 3. Format version 2 is related to libraries created with the
       -archive option and should be avoided when specifying the vlib -format
       option.
     * The  XML  Testplan  Import Utility (xml2ucdb) was enhanced and the
       command-line and configuration parameters were re-named for consistency.
       The following changes were made:
         1. Command-line
              1. Added a -verbose option to show testplan hierarchy and design
                 mapping. By default, the utility is a lot less noisy than
                 before.
              2. A -ucdbfilename <file> option has been added to remove the
                 order-dependence  of  the files on the command line (the
                 original syntax is still accepted).
              3. The command-line arguments are now order-independent.
              4. Any -format <format> option found on the command line is
                 processed first and other extraction parameters found on the
                 command line act as overrides on top of the parameters found
                 in the configuration file.
              5. The same parameter names are used both on the command line and
                 in the configuration file.
              6. The  -tagseparators  <chars>  option,  when  used on the
                 command-line, applies only to the taglist parameters specified
                 on the command line (see below).
         2. Configuration file
              1. Added "datalabels" parameter to support user-defined embedded
                 data labels.
              2. The following parameters have been re-named for consistency.
                 In all cases, the former name is still recognized:
                   1. start => starttags
                   2. stop => stoptags
                   3. exclude => excludetags
                   4. description => descriptiontag
                   5. sectionitem => sectiontags
                   6. dataitem => datatags
                   7. testitem => titletag
                   8. coveritem => linktag
                   9. coverattr => linkattr
              3. The "Tags" field name in the "fieldnames" and "fieldlabels"
                 parameters has been renamed "Link". The former name is still
                 recognized.
         3. Behavior
              1. The UCDB tags used to link testplan sections to coverage items
                 now has the contents of the "title" parameter prepended.
                 Lacking that, the basename of the XML input file is used.
              2. The "startsection" parameter now reflects the initial section
                 number for each level of hierarchy (auto-number mode only).
              3. Data  capture is no longer enabled from the start of the
                 document in auto- number mode. An element matching "starttags"
                 or a section number matching the "startstoring" parameter is
                 required to enable data capture.
     * If the PATH column value is set to "-" it will be ignored (this is
       useful for the PATH-per-LINK case where one of the LINK values doesn't
       need a PATH).
     * XML Import (xml2ucdb) now supports a "Path" column to direct testplan
       link item matching to a specific region of the design. In addition, a
       path may be prepended onto any CoverGroup, CoverPoint or Cross link
       item.
       For CoverPoint, CoverGroup, and Cross link items:
          + If  the  contents  of the Path column are non-blank, the Path
            information will be used as the value of the -path option to the
            tag command and the trailing component of the Link column will be
            parsed as usual and used to match the cover item. Any path added to
            the string in the Link column will be ignored.
          + If the Path column is not used or is left blank, and a path is
            prepended onto the string in the Link column, the prepended path
            will be used as the value of the -path option on the tag command.
       For CoverItem, Assertion, or Directive link items:
          + If the string in the Link column starts with a path separator
            character, the Link string is used as the value of the -path option
            in the tag command and no other tag command option is used.
          + If  the  string in the Link column does not start with a path
            separator (in other words, is not a full path), and the contents of
            the Path column are non-blank, the Path string is used as the value
            of the -path option and the Link strung is used as the value of the
            -match option on the tag command.
          + Otherwise, the Link string is used as the value of the -match
            option on the tag command and no path is specified.
       For all other link item types, the contents of the Path column are
       ignored. Note: If the Path column for a given link item is the literal
       string "-", the Path column is ignored for that link item only.
     * XML Import (xml2ucdb) now supports test data record tagging. If the Type
       column for a given link item is "Test", the contents of the Link column
       will be used as the value of the -testrecord option on the tag command
       associated with that link item.
     * XML  Import  (xml2ucdb)  now  supports a -stylesheet <file> option
       ("stylesheet="  in  the  INI  file).  This option points to an XSL
       transformation stylesheet which is applied to the imported XML file
       prior to extraction.
     * XML Import (xml2ucdb) now supports XML files generated by Jasper's
       GamePlan testplan utility. Use the -format GamePlan option.
     * Use of the "analog" format within the Wave window has been made easier
       by adding support for the use of -min and -max to control waveform
       scaling (the old method required use of "offset" and "scale").
     * Font Changes
       The way fonts are used and configured in the product has changed. There
       are  now  5 configurable fonts in the product: menuFont, textFont,
       fixedFont, treeFont, and footerFont. These fonts are used by all windows
       and are customer configurable using the Edit Preferences dialog box. The
       previous  method  of  configuring  fonts is no longer used and the
       preference variables will be ignored. The Source window will continue to
       use it's own font setting as that window shares the font preferences
       with other products that use the DesignPad text editor.
       For current customers upgrading to 6.3b and later releases that have set
       up  customized font preferences, these preferences will have to be
       manually configured for the new fonts, otherwise the product will look
       and behave just the same.
     * A change to licensing for this release eliminates extraneous entries in
       the license server log file that were the result of an availability
       check for a license feature. There used to be a license checkout line
       (i.e., OUT) followed by a license checkin line (i.e., IN) with 0 time
       duration each time the application checked on the availability of a
       license to decide whether to attempt the actual checkout of the license.
     * The vcd limit <size> command has been changed adding support for a file
       size limit greater than 2 GB. The size argument now excepts a unit
       specifier. The default <size> unit remains as bytes. An optional suffix
       of either KB, MB or GB specifies the units in which the size should be
       interpreted. For example:
       vcd limit 6GB
       or
       vcd limit 400MB
   ______________________________________________________________________

   New Features Added to 6.3b
     * The -nocase option was added to vcd2wlf to convert all identifiers into
       lower case.
     * Language templates were added for System Verilog support and the System
       Verilog syntax radio button was removed from the Verilog tab in the
       project compiler settings dialog box. Old projects with files of type
       Verilog  and the System Verilog syntax selected will automatically
       convert to System Verilog type. Customers may need to remove the .hte
       directory from their home directory in order for the new templates to
       load properly.
     * Added  the  dataset  restart command. This command will unload the
       specified dataset or current dataset and reloaded the file using the
       same pathname. The Wave window contents will be restored after the
       reload.
     * A new HTML report generator (vcover report -html) has been implemented.
       Among the new features are:
         1. Functional coverage reporting (summary and details),
         2. Added Coverage-by-child table for non-leaf instance and testplan
            pages,
         3. Added testplan coverage summary to title page,
         4. Improved  hierarchical  browser  (now works on most browsers,
            including IE7),
         5. Additional options: -debug, -verbose, -nosource,
         6. Removed bogus "No coverage found" message from HTML mode,
         7. Buttons to select All/Covered/Missed details (requires JavaScript),
            and
         8. CSS stylesheets provided for both screen and print media,
         9. Fallback modes for frame- and/or script-challenged browsers.
     * Test traceability is now available for directed tests, identified by
       test  name.  Tests  contribute  0%  coverage that have not yet run
       (identified in the test plan but not found in any test data record in
       the current UCDB) or have error status. Tests contribute 100% coverage
       that have run successfully. Separate release notes describe supporting
       features in "coverage tag" and "Test plan (XML) import". The coverage
       unlinked command has a new option -testname to find unlinked tests:
       i.e., tests that do not appear in any test plan section. For example:
       coverage unlinked -testname *
     * Enhanced support for analog format in Wave window. The old mechanism of
       using "scale" and "offset" has been replaced with a more intuitive way
       of defining the waveform's data. The new way allows specifying the
       minimum and maximum data values that should be viewed for a waveform. So
       for example, if a waveform's data varies between 0.0 and 1.0, then the
       waveform could be added by using this command:
           add wave -min 0 -max 1 -height 100 -analog my_signal
       Once the waveform has been formatted as analog there is special toolbar
       available which is accessed by moving the mouse pointer to the left or
       right extreme of the waveform's row within the Wave window. A variety of
       operations are available as well as the ability to dynamically resize
       the waveform row. Also, whenever the toolbar is shown the currently set
       "min" and "max" levels are shown as well as the waveform's "zero line".
       Lastly, it is now possible to control if the waveform's drawing is
       allowed to extend above and/or below its row. When using add wave this
       would be set with the -clampanalog 0|1 option.
     * Fork..join_none and non-blocking assignments may now be used within
       System Verilog functions that are called from initial blocks.


