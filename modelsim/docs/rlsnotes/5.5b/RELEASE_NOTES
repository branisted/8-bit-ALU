
                   Release Notes For ModelSim Altera 5.5b
                                      
   
   
                                May 24 2001
   ______________________________________________________________________
   
     Product Installation and Licensing Information
   For brief instructions about product installation please visit the
   "install_notes" file on the Model Technology web site. The
   install_notes file can be viewed at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see
   the ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp
   
   
     Release Notes Archives
   For release notes of previous versions visit the release notes archive
   at: [3]http://www.model.com/support/default.asp
   or find them in the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes
   
   
     How to get Support
   
   This OEM product is supported by Altera Corporation
     * Telephone Support
       Call 800-800-3753 or 408-544-7000
       
       
     * Email Support
       [4]support@altera.com
       
       
     * World-Wide-Web Support
       [5]https://websupport.altera.com/
       
   
   ______________________________________________________________________
   
  Index to Release Notes
  
     [6]Key Information
   
     [7]User Interface Defects Repaired in 5.5b
   
     [8]Verilog Defects Repaired in 5.5b
   
     [9]PLI Defects Repaired in 5.5b
   
     [10]VHDL Defects Repaired in 5.5b
   
     [11]FLI Defects Repaired in 5.5b
   
     [12]VITAL Defects Repaired in 5.5b
   
     [13]Mixed Language Defects Repaired in 5.5b
   
     [14]General Defects Repaired in 5.5b
   
     [15]Mentor Graphics DRs Repaired in 5.5b
   
     [16]Known Defects in 5.5b
   
     [17]Product Changes to 5.5b
   
     [18]New Features Added to 5.5b
   ______________________________________________________________________
   
   Key Information
     * You must recompile or refresh your models if you are moving
       forward from 5.5 Beta or earlier release versions. See
       "Regenerating your Libraries" in the ModelSim Start Here Guide for
       more information on refreshing your models.
     * The Windows 95 platform will no longer be supported starting with
       the next major ModelSim release, version 5.6.
     * The following lists the supported platforms:
          + win32aloem - Windows 95, 98, Me, NT, 2000
          + sunos5aloem - Solaris 2.6, 7, 8
          + hp700aloem - HP-UX 10.2, 11
   ______________________________________________________________________
   
   User Interface Defects Repaired in 5.5b
     * The describe command did not handle upper-case VHDL process
       variable names.
     * Correctly remove Wave Window dividers when a dataset close command
       results in all signals being removed from the Wave Window.
     * The File > Design > Load Design... menu item was not disabled
       while the simulator was running. If selected at run time ModelSim
       may have crashed.
     * A message stating that the source file was newer than the compiled
       file and that a recompile was necessary was erroneously reported.
       The problem was related to differences in timestamp
       calculations.(Windows only)
     * Issuing restart with a waved signal that was formatted as
       "analog-interpolated" sometimes crashed the simulator.(Windows
       only)
     * Invoking the File > Compile menu item from the Source Window
       crashed the simulator in some cases.(Windows only)
     * After modifying the Verilog compiler options, such as the include
       directory, the changes were not used by the compiler. This problem
       was related to the OptionFile property in the .ini file.
     * When the Source Window was opened and if source colorization and
       highlighting of executable lines were both enabled, they appeared
       to be disabled.
     * A simulation crash was caused by dataset close or compare end
       commands if they resulted in removing a Verilog register from the
       Wave or List Window.
     * The simulator did not correctly update Wave Window scrollbars when
       a dataset (specifically a compare dataset) was closed.
     * A 'Paste insertion error' was occurring in the Wave Window. The
       Cut/Copy operations were saving an invalid configuration.
     * When force -cancel was applied to a field of a (VHDL) record, at
       the future time when the force was cancelled, all forces applied
       to other fields of the record were also incorrectly cancelled.
     * Regions and signals created through the FLI could be not found by
       the GUI if the parent regions were selected in the Structure
       Window before these regions/signals were created.
     * In some cases the ModelSim GUI crashed when being shutdown.
     * Several major problems existed in the library import wizard. The
       library import wizard replaced the FPGA wizard in the ModelSim 5.5
       release. The library import wizard now correctly supports
       importing of all types of libraries including FPGA libraries.
   ______________________________________________________________________
   
   Verilog Defects Repaired in 5.5b
     * A $setuphold, $recrem, or $recovery (used as $recrem) constraint
       having a non-positive sum of its limits caused the negative timing
       constraint algorithm to incorrectly set negative limits to zero in
       other timing constraints.
     * An "always" construct sensitive to a bit-select of a vector
       register failed to trigger if the register was assigned to a value
       at time zero.
     * Non-blocking assignments to hierarchically referenced memory
       elements failed.
     * The force -freeze command when applied to a net, failed to
       propagate through connected bidirectional pass switch primitives.
     * $dumpvars crashed when an argument referenced a bit-select of a
       bus.
     * Recursive Verilog module instantiation caused a crash. It now
       generates an elaboration error when decending to 75 levels deep.
     * A problem existed when using vlog with -fast where an inlined
       module resulted in the argument to a hierarchical task call
       starting in the wrong context. This resulted in vsim messages such
       as:
       "Unresolved reference to 'crc10' in 'crc10.next_byte.$0'."
     * The -nologo switch to both vlog and vcom did not work.
     * Improved vlog compiler warning in the case where the command line
       -y directory was not found.
     * The correct delay selection did not occur when vsims
       +transport_int_delays switch was used, and the interconnect delay
       transitioned to an "X" state.
     * Verilog gate-level designs compiled with the -fast option with
       negative timing checks caused incorrect delay net delays to be
       calculated in some cases.
     * An SDF INTERCONNECT annotation caused a crash if the source port
       was an optimized cell and the destination port did not exist.
     * In some cases a bus error occurred with $width checks containing
       non-zero thresholds in -fast optimized cells.
     * A continuous assignment may fail under rare conditions if the
       right hand side expression contains a hierarchical function call.
   ______________________________________________________________________
   
   PLI Defects Repaired in 5.5b
     * Part selects that were arguments to system tasks/functions were
       not created correctly in the VPI.
     * Multi-channel descriptors were not flushed at the end of a
       simulation run.
     * A better error message is now reported for PLI module load
       failures. (Windows Only)
     * A call to acc_next_load failed to return the correct handle when a
       MIPD was present.
   ______________________________________________________________________
   
   VHDL Defects Repaired in 5.5b
     * If a configuration used subelement association in the binding
       indication and the formal's type was not locally static, memory
       corruption could have occurred. This corruption caused a crash at
       elaboration time. The corruption was caused by incorrect code
       generation and incomplete checking. You must recompile or refresh
       to get the fix. The newly compiled libraries cannot be used with
       ModelSim versions 5.5a or earlier.
   ______________________________________________________________________
   
   FLI Defects Repaired in 5.5b
   ______________________________________________________________________
   
   VITAL Defects Repaired in 5.5b
   ______________________________________________________________________
   
   Mixed Language Defects Repaired in 5.5b
   ______________________________________________________________________
   
   General Defects Repaired in 5.5b
     * If the user interrupted simulation, the simulator could skip
       execution of a Verilog or VHDL concurrent statement ( i.e.,
       process or always block) depending on the particular statement.
       Incorrect simulation results could occur if the simulation was
       continued.
     * ModelSim now allows better usage of large memory pages under HP-UX
       11.0.
     * The write report command with the -s option incorrectly printed
       "Entity" for a Verilog module compiled with -fast. It now prints
       "Module".
     * With init_signal_spy, if you spied on a signal that did not change
       values, the local signal never obtained the value of the spied on
       signal. This was due to the initial value of the signal that was
       being spied on not beening correctly mirrored to the local signal.
     * This bug fix only affects users who have ModelSim application
       registered to open file type extensions like .v, .vhd, .wlf, .mpf
       in the windows explorer environment.
       The bug was that if such a file has uppercased extension like .VHD
       or .WLF, and it was double-clicked to open it, ModelSim would
       invoke repetitiously until the system crashed.
       The first part of the fix is already in place in 5.5b ModelSim.
       The second part of the fix is during the installation of 5.5b
       ModelSim.
       Install 5.5b ModelSim as per normal. After installation,
       immediately launch the installed ModelSim application. When you
       are prompted with a dialog box to register ModelSim application as
       the default to open the .mpf, .v, .vhd, .wlf file types, click
       "YES".
     * vcom and vlog arguments containing wildcards ('*') were not being
       expanded in some situations. This defect was introduced in 5.5.
       (Windows only)
     * A problem existed (since 5.5) when the license environment was not
       setup on a Window platforms. When invoking from the Program->Start
       menu or a shortcut, the splash screen was displayed for a few
       seconds then disappeared without a message. The dialog box was
       supposed to display a message stating the license environment is
       not valid.
     * When there is a vlog compiler and vsim incompatibility situation,
       the following incorrect message indicating VCOM as the compiler
       was issued.
       # ** Fatal: Empty built-in function pointer (957).
       # VSIM version is out of date with respect to VCOM.
       Please recompile libraries with -refresh.
       The new and corrected message is
       Simulator version is out of date with respect to the compiler.
       Please recompile libraries with -refresh.
   ______________________________________________________________________
   
   Mentor Graphics DRs Repaired in 5.5b
     * 299040 - ModelSim crashed with the message: Memory allocation
       failure. Bad block passed to mti_memfree/mti_memr
     * 298993 - ModelSim crashed when loading due to a recursive
       instantiation in a Verilog design.
     * 298450 - A $setuphold, $recrem or $recovery (used as $recrem)
       constraint having a non-blocking sum of its limits caused the
       negative timing constaint algorithm to incorrectly set negative
       limits in other timing constraints to zero.
     * 184943 - "vlog tb.v -y NONEXISTENTLIBRARYDIR" doesn't give clear
       error message.
     * 294815 - Simulation results are inconsistent when using force
       -freeze on a Verilog bidir.
     * 297800 - No license failure message is given when invoking from a
       Shortcut.
     * 285345 - No warning occurred if -G switch was used and generic did
       not match design.
   ______________________________________________________________________
   
   Known Defects in 5.5b
     * A virtual signal containing a Verilog bit is expanded within a
       Signals Window. Double clicking on this Verilog bit to invoke a
       view declaration does not bring up the Source Window. If the
       Source Window is already opened, it does not highlight this
       signal.
     * On Win32 platforms when using Mentor Graphics Licensing,
       inappropriate queueing may take place when more than one license
       feature could fulfill a request (e.g., When a VHDL simulator
       license is requested, the user may get queued for a qhsimvh when
       there is an msimhdlsim available). The workaround in GUI mode is
       to cancel the queueing dialog and then the available feature will
       be checked out. The only workaround in command line or batch mode
       is to invoke with the -lic_noqueue switch.
     * Virtual signals which are a concatenation of a signal from a view
       dataset and a sim dataset show "-No Data-" in the Signals Window
       even after simulation.
     * Virtual concatenations which contain a virtual constant always
       display a value, even when non-constant children are "-No Data-".
       For example:
       virtual signal {'1' & clk & prdy} foo
     * No waves are displayed in the Wave Window for virtual constants or
       virtual functions that are children of virtuals.
     * The following steps show a waveform compare problem.
          + In the compare wizard, specify an opened dataset and a sim
            dataset to be compared via the compare start functionality.
          + Log some simulation signals.
          + The button "Update after simulation run" should NOT be
            checked.
          + Click the "Compute Diffs Now" button in the wizard. This
            message was given: "Null time range for signal compare". The
            message could be improved to "Cannot compare run because No
            simulation data currently available"
          + Do a run 500.
          + Do a compare info command. The following message is given:
            "No comparison differences" Does it mean my comparisons were
            all matches? A better message choice might be "No available
            compare data, "please do a compare run or compare update
            first.".
       A compare run or compare update had not been done, so there should
       be no compare results or data. The Wave Window is correct at this
       point, the compare signal does not show any compare result.
     * There is an inconsistency in how the path separator works when
       parsing commands. Given that the path separator in the example
       below is "/ " .top.clk should work.
       echo $PathSeparator
       # /
       exa /top/clk
       # 1
       exa /clk
       # 1
       exa clk
       # 1
       exa .top.clk
       # 1
       exa .clk
       # evaluating expression ".clk"
       # No object found matching clk in context /
       # Item '.clk' not found
     * A virtual signal foo is defined. The checkpoint command is issued.
       Then, virtual count gives a count of 0. Shouldn't it be 1? Nothing
       is saved during virtual save command. The virtual count and
       virtual save commands before the checkpoint give the correct
       expected results. Also virtual show and virtual describe foo after
       the checkpoint give the correct expected results. virtual count
       and virtual save are not working correctly. This bug also exists
       in 5.4e.
     * In the Library page of the main window workspace, if a design unit
       is selected and accessed with a right button click to Edit or
       Refresh or Recompile, the following error will occur:
       Error - cannot read work/_info: No such file or directory
       This bogus error message occurred only when the Library entry
       field in the Library page is set to work, and work is logically
       mapped to another library directory name.
       The work around is to set the Library entry field to the actual
       library name instead of work.
     * Create a List Window with some signals, choose Prop > Display
       Props, select the Triggers page, click on Trigger Gating:
       Expression and press the Use Expression Builder button. Select a
       signal in the List Window and press the Insert Selected Signal
       button in the Expression Builder. Nothing happens. The selected
       signal should be added to the expression.
     * When "vsim -lib vhwork" is invoked, "vhwork" should be in the
       Library entry of the workspace of the Main Window with its design
       units listed. Instead the default library "work" is listed.
     * In some cases, Redhat 6.0 did not have coverage for the entire
       source file. There is no problem with Redhat 6.1, 6.2 and 7.0.
     * List Window scrolling problems:
          + When using the Find dialog box to find signals, when the next
            signal is outside of what is currently showing in the List
            Window, the window is not scrolled to show the next item
            found.
          + If you do a find to the left and the search goes past the
            beginning of the list to wrap around to the end of the list
            and there's a lot of stuff in the list window that is out of
            view, then the List Window scrolls right only one page even
            though that does not bring the next selected item into view.
          + When doing a search forward on an item's values, the next
            line to match is scrolled to the top line but the scroll bar
            stays the full length of the scroll bar region. (This is in a
            List Window where there aren't very many lines of data.)
          + The documentation for the List Window says that the up and
            down arrow keys are supposed to move the line selection up or
            down one line. The current behavior is that the up and down
            arrow keys behave exactly the same as the TAB and shift-TAB
            keys (searches for next transition).
     * List Window Marker problems
          + If I add a bunch of signals to the List Window then select
            Markers > Add Marker with nothing selected in the List
            Window, then the 2nd list line is highlighted (?). If I then
            click on another line then no marker outline is left on the
            supposedly added marker line.
          + If I click on some line and do Markers > Add Marker then the
            line selected is marked with an outline but the second list
            line is highlighted(!).
          + With a marker added on a particular line, if I then click on
            various lines in the List Window then the marker outline
            occasionally moves to some other line (usually the previously
            selected line). Markers don't stay put.
     * The List Signal Search dialog does not always display the name of
       the selected signal. Names of the format /top/signame do not
       display. Names of the format signame do. If I select multiple
       signals of the first format, all I see are commas in the Signal
       Name(s) box.
     * Loading a tcl shared library fails on rs64 with the following
       message: ERROR: couldn't load file " testload.sl": readExports:
       bad magic number
     * Compare commands should be Wave Window specific.
          + In one Wave Window, add some compare signals and then Compare
            > Run to generate some data.
          + In a second Wave Window, add some different compare signals
            with different criteria.
          + Do a Compare > Run in this second window.
       The output of the Compare > Differences > Show command gives data
       for both runs. The compare information should be Wave Window
       specific since the two windows have signals with different
       criteria.
       Also, the compare (see -prev -next buttons) behaves as if both
       runs are the same context. That is, if -next is hit repeatedly,
       the DIFF report will jump from the first window to the second.
       Other commands that are not window specific are:
       Compare > Differences > Save
       Compare > Differences > Write Report...
       Compare > Rules > Show
       Compare > Rules > Save
     * In the Projects source area, Windows 95 drag and drop from windows
       explorer does not work.
     * When ModelSim is invoked with "vsim -lib vhwork", the library
       entry in the Design tab of the Load Design dialog box incorrectly
       shows the default library "work" instead of the specified library
       "vhwork".
     * Start a compare, then do some compare runs, if a compare reload
       command is unsuccessful, ModelSim does an implicit compare end
       without providing an option to save results and the data is lost.
     * When single-stepping in a .coverage_source Window, as long as the
       context stays within the current file the coverage numbers can be
       seen to increment with each step. If a step causes another source
       file to be brought up, then the coverage numbers in the first
       column do not increment correctly. Sometimes clicking on the name
       of the current source file in the Coverage_Summary window with
       correct the problem.
     * The vmap command executed at the VSIM prompt does not update the
       Library drop-down list.
     * First, invoke the Design > Create New Library menu item. Second,
       attempt to create a new lib and mapping resulting in an error, for
       example, where the new lib already exists, a windows system
       message dialog appears. OK this dialog.
       The problem is that the Create New Library dialog widget is frozen
       and the only way to close it is to click on the "X" in the upper
       right corner, which is the Windows close window button. This is a
       Windows only issue.
     *
          + Add some wave signals.
          + Create a virtual from a couple of these signals.
          + Expand the virtual signal tree.
          + Double click on the virtual or any child of the virtual (in
            the value grid of Wave Window)to invoke the signal props
            dialog.
       It will not come up. Subsequent actions to other signals also fail
       to bring up the signal props dialog. To get out of this "stuck
       situation", double click on any signal (in the name grid) to
       invoke view declaration.
     * Selected text in the Source Window or Transcript Window gets
       unhighlighted when the cursor moves out of the window or to the
       toolbar or menu bar. This is a windows only issue.
     * In the Source Window, when multiple variables are selected the
       variable balloon (via Right Mouse Button) displays the same
       variable even when the cursor is moved from one variable to the
       next.
     * Set a source line breakpoint and associate a command with it. For
       example:
       bp src/pure_vlog/proc.v 60 {echo "break at 60"}
       The breakpoint commands are never executed when the breakpoint is
       encountered. This bug only exists in rs64 or rs6000. It exists in
       5.5x but not 5.4x.
     * An infinite loop can occur displaying the "whatBrowser" dialog
       box. The following steps will cause the infinite loop.
          + Log onto any Unix workstation which does not have the
            netscape browser installed.
          + Invoke vsim and select menu item HELP > Tcl Help to invoke
            default browser.
       The "whatBrowser" dialog box comes up. The dialog box always pops
       up again after it has been cancelled or killed.
     * The source colorization and highlighting of executable lines are
       fixed for the case when the Source Window is brought up the first
       time. For the case, where there is an existing Source Window, and
       you do a File > Open, and pick a file which has source lines that
       just fit the Source Window, the issue still persists.
     * A new breakpoint is added using the Edit > Breakpoint menu in the
       source window. If the following values are entered into the
       corresponding text entry fields in the New Breakpoint dialog:
          + File name: test.vhd
          + Line # : 45
          + Condition: /top/a == 1
          + Instance : /top/uut
          + Command : echo "STOP"
       vsim creates an incorrect breakpoint as follows:
       bp test.vhd 45 -cond {/top/a == 1} {echo "STOP" -inst /top/uut}
       The -inst argument should not be enclosed as a breakpoint user
       command. Also, when the restart -f is issued after such a
       breakpoint is set, vsim further mess up this bp by including the
       condition into the bp user command as follows:
       bp test.vhd 45 {echo "STOP" -inst /top/uut -cond /top/a == 1}
       In all cases, the correct bp should be:
       bp test.vhd 45 -cond {/top/a == 1} -inst /top/uut {echo "STOP"}
   ______________________________________________________________________
   
   Product Changes to 5.5b
     * The FLI function mti_GetSignalType() has been changed so that for
       a handle to a port signal that has been collapsed it returns the
       type ID of the formal port, not the type ID of the actual signal
       to which it has been collapsed. (This keeps the type ID consistent
       with the name that you get from the same signal handle.)
     * The FLI function mti_SetSignalValue() no longer granulates atomic
       array signals. It sets the entire array value directly onto the
       top level atomic array signal instead of iterating through the
       subelements. (Note that for non-atomic arrays it still iterates
       through the subelements.)
     * An optimization has been done to several FLI driver functions in
       order to allow the driving of atomic arrays (which is faster than
       the normal method of driving arrays at the subelement level).
       Arrays are atomic if their subelements are an enumeration type, if
       they have no more than one driver, if they are driven only in zero
       delay, if they are not connected to OUT or INOUT ports, and if
       they do not have any associated composite resolution or type
       conversion functions. The following functions have been changed as
       stated:
          + mti_CreateDriver() now creates atomic drivers on atomic array
            signals. It will granulate an atomic array signal only if
            more than one driver is created on it.
          + mti_FindDriver() no longer granulates atomic array signals.
          + mti_GetDriverSubelements() will now granulate an atomic array
            signal in order to get the driver subelements.
          + mti_ScheduleDriver() will now drive atomic array signals with
            zero delay. Scheduling with a non-zero delay will cause an
            atomic array signal to be granulated.
       Note that mti_GetDriverNames() and mti_GetDriverValues() will not
       return any information for atomic array signals. Also note that
       mti_GetSignalSubelements() forces granulation of an atomic array
       signal.
     * The VHDL and Verilog compilers were changed to not display full
       usage information when a usage error occurs. A full usage message
       gets displayed only when the -help switch is used.
     * A splash screen now appears on OEM versions of ModelSim
       identifying it as different from the regular ModelSim PE product.
       (OEM only)
   ______________________________________________________________________
   
   New Features Added to 5.5b
     * A feature was added to allow Solaris shared memory. The feature
       can increase performance of large simulations. See below for more
       details.
       Two programs to facilitate the Solaris shared memory feature have
       been added for the "sunos5" and "sunos5v9" platforms. The
       executables are located under the "sunos5" and "sunos5v9"
       directories in the modeltech tree and are named vshminit and
       vshminf.
       To learn how to use this feature, invoke vsim and click the Help
       menu
       Help > Technotes > Solaris_Shared_Memory
     * The cursor time button in the Wave Window has been enhanced.
       The cursor time button is the time value displayed in the values
       column and cursor row of the Wave Window.
       A right mouse click (RMB) on this button will turn it to an entry
       field where you can enter a new time value. Then, the cursor (and
       view) will move to the new time.
     * There is a new FLI function, mti_CreateTimeType(), that is used to
       get a handle to a type descriptor for a VHDL time type. One useful
       application is for printing out the current time. For example,
  curr_time_str = mti_Image( mti_NowIndirect( &curr_time ),
                            mti_CreateTimeType() );
  mti_PrintFormatted( "Time %s delta %d: Signal %s/%s is %d\n",
                     curr_time_str, mti_Delta(),
                     region_name, mti_GetSignalName(sigid), sigval );
     * Setting the new preference variable PrefMain(stallKernel) to 1
       will cause the simulation kernel to pause while Wave Window
       updates occur. If the simulator is not running or the variable is
       set to 0, there will be no effect. The default value is 0.
     * The runStatus command has a new option named -full which will
       return the state and the reason (status).
       VSIM 5> when clk {stop}
       VSIM 6> run
       # Simulation stop requested
       VSIM 7> runStatus
       # break
       VSIM 8> runStatus -full
       # break user_stop
       The possible reason values are:
          + bkpt
          + bkpt_builtin
          + end
          + fatal_error
          + iteration_limit
          + silent_halt
          + step
          + step_builtin
          + step_wait_suspend
          + user_break
          + user_halt
          + user_stop
          + unknown
       The reason value only has meaning after the run or step command
       returns. Calling runStatus while it is still in the running state
       (i.e. inside a when body) will return the previous reason value.
       At this point, the user is warned that you may get results that
       you don't expect. With the way the break key works, it's possible
       to get a reason code back that can be either user_break or
       user_stop. This is because the break can occur at different points
       in the simulation cycle. If the simulator is evaluating a process
       at the time of the break, a user_break will be returned, however,
       if the simulator has completed processes and is updating signal
       values, then user_stop will be returned. The subtle way you see
       this in the current system is with the Source Window. In the first
       case the Source Window indicates a file line number with the blue
       arrow while in the latter case no source line is shown.
     * A new set of compiler switches have been added to allow further
       gate-level optimizations to occur in Verilog cell libraries.
       In initial releases of 5.5, these optimizations were extremely
       conservative with regards to whether or not optimization was
       allowed. With 5.5b, several switches have been added to disable
       some of these checks. The switches are specified to the vlog
       compiler on the command-line. They only have effect when compiling
       gate-level cell libraries, using the -fast switch. You may also
       specify the -debugCellOpt switch to verify that the optimizations
       are occurring.
          + +nocheckCLUP
            This switch allows connectivity loops in the cell to be
            optimized.
          + +nocheckOPRD
            This switch allows an output port to be read internally by
            the cell. Note,if the value read is the only value
            contributed to the output by the cell and if there's a driver
            on the net outside the cell, the value read will not reflect
            the resolved value.
          + +nocheckDNET
            This switch allow both the port and the delayed port (created
            for negative setup/hold) to be used in the functional section
            of the cell.
          + +nocheckSUDP
            This switch allows a sequential UDP to drive another
            sequential UDP. If you specify +nocheckALL, all of these
            flags will be enabled. Note also the functionality of the
            cell should be verified after using one of these switches.
     * The vlog -fast switch now handles cells with $setuphold and
       $recrem timingchecks that use the tstamp_cond or tcheck_cond
       arguments.
     * Added an elaboration warning when generics/parameters specified on
       the command line with -G or -g are not present in the design.
     * VHDL performance improvements were added to the Std_Developerskit
       std_mempak package.
       The Mem_Load and Mem_Dump procedures are now overloaded by default
       with accelerated versions of those procedures. A recompile of any
       VHDL code using these procedures will result in the use of the
       built-in accelerated procedures. Compiling with the -noaccel
       std_mempak vcom option will result in the use of the original VHDL
       code from the package.
     * The ability has been added to ModelSim PE and OEM products
       (ModelSim SE already has this feature) to tile and cascade windows
       from the command line. This functionality was only possible from
       the GUI previously.
     * Verilog 2001 support for interconnect delays.
       This feature is enabled with the -v2k_intr_delay switch. The
       switch causes the delay to be visible at the load port
       (previously, the user had to connect a buffer inside the load
       module to see the delay). If you have $sdf_annotate() calls in
       your design that are not getting executed then you should add the
       Verilog task $sdf_done() after your last $sdf_annotate() to remove
       any zero-delay MIPDs that may have been created.


