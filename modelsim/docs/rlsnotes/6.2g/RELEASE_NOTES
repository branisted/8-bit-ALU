
                   Release Notes For ModelSim Altera 6.2g

               Copyright 1991-2007 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
                                Corporation.
    The original recipient of this document may duplicate this document in
                                whole or in
  part for internal business purposes only, provided that this entire notice
                               appears in all
  copies. In duplicating any part of this document, the recipient agrees to
                                 make every
  reasonable effort to prevent the unauthorized use and distribution of the
                                proprietary
                                information.



                                Feb 21 2007
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.2g

     [7]Verilog Defects Repaired in 6.2g

     [8]PLI Defects Repaired in 6.2g

     [9]VHDL Defects Repaired in 6.2g

     [10]FLI Defects Repaired in 6.2g

     [11]VITAL Defects Repaired in 6.2g

     [12]SystemC Defects Repaired in 6.2g

     [13]Assertion Defects Repaired in 6.2g

     [14]Mixed Language Defects Repaired in 6.2g

     [15]Coverage Defects Repaired in 6.2g

     [16]General Defects Repaired in 6.2g

     [17]Mentor Graphics DRs Repaired in 6.2g

     [18]Known Defects in 6.2g

     [19]Product Changes to 6.2g

     [20]New Features Added to 6.2g
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + hp700aloem - HP-UX 11
          + linuxaloem - RedHat 7.2 and higher.
     * The following platform will be discontinued as of the 6.3 release:
          + HPUX Platform - hp700aloem
   ______________________________________________________________________

   User Interface Defects Repaired in 6.2g
     * The drag and drop operation with editable signals crashed.
     * When opening a dataset, the UserTimeUnit TCL variable was not getting
       set properly, which could result in the List window time column having
       the incorrect units.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.2g
     * If the initializer of a for loop generate variable was a struct field
       select,  vlog  and  vopt  crashed  when  a case_generate_construct
       constant_expression was a struct field select.
     * In some situations an optimized gate-level cell with a single output
       corrupted the simulation following a timing check violation that caused
       a notifier toggle.
     * Associating  arguments  by name for class constructors or non-void
       function methods caused fatal errors at simulation time.
     * vopt  failed  in  certain cases if +acc settings were applied to a
       primitive instance and multiple instances of the parent module were
       instantiated.
     * Improved the performance of the delay net delay solver when large output
       specific solutions were computed.
     * In an optimized design, if a parameter was only accessed via the PLI and
       its  value  was  set by a defparam, in some cases the value of the
       parameter remained the default initial value.
     * Under certain circumstances negative timing check limits get converted
       to positive values when scaled greater than 65,535 simulation time
       units.
     * An assignment to a part-select of a vector register that was partially
       out-of-bounds resulted in corruption of the register value such that
       subsequent expression references to the register resulted in incorrect
       values or a simulator crash.
     * vsim failed with a fatal error in certain cases when passing an unpacked
       array to a dynamic array as an inout argument to an automatic task.
     * The simulator gave incorrect output in certain cases when passing a
       dynamic array to a queue and an inout argument to an automtaic task.
     * The write timing command displayed timing check limits and path delay
       values that were unadjusted for the effects of delayed net delays.
     * Timing checks for gate-level optimized cells with exactly 32 timing
       checks were not always triggering correctly.
     * The functions $system and $systemf crashed on the Windows platform.
     * The ADMS GUI failed to load a design if it contains System Verilog DPI
       functions.
   ______________________________________________________________________

   PLI Defects Repaired in 6.2g
     * The  tf_exprinfo  routine returned garbage in the bval bits of the
       expr_value_p field in a System Verilog design. Specifically, it failed
       for 2-state constant values of 32-bits or less in size, which includes
       simple integer literals.
     * Module array objects did not get a handle when passed as arguments to
       vpi_handle_by_name and vpi_handle_by index.
     * The acc_handle_object() and acc_handle_by_name() routines could not find
       PLI objects within modules that were members of module arrays.
   ______________________________________________________________________

   VHDL Defects Repaired in 6.2g
     * Functions  inlined  from a package body that was compiled with -O0
       sometimes caused the message:
       Internal error: ../../../src/vcom/genexpr.c(5506).
     * After logging or waving a vector signal, the attribute 'event may return
       incorrect values.
     * When using a location map, refreshing a design caused pathnames to be
       incorrectly processed in certain cases. The result was that the viewing
       of source files in the simulator failed because of invalid pathnames to
       the source files.
   ______________________________________________________________________

   FLI Defects Repaired in 6.2g
     * The mti_CreateRegion function has been changed so that the region name
       is now case-sensitive when the parent region is an FLI-created region.
       It is also case-sensitive for Verilog and SystemC parents, but still
       case-insensitive for VHDL parents.
   ______________________________________________________________________

   VITAL Defects Repaired in 6.2g
   ______________________________________________________________________

   SystemC Defects Repaired in 6.2g
   ______________________________________________________________________

   Assertion Defects Repaired in 6.2g
     * The vcom option -nopsl was ignored.
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.2g
   ______________________________________________________________________

   Coverage Defects Repaired in 6.2g
     * When  instance  exclusions were applied using exclusion-file mode,
       instance exclusions were not getting reflected in coverage reports.
     * When running with with toggle coverage, there was a memory leak that
       occurred whenever the coverage data was updated. This leak could be
       quite large when processing a group of coverage exclude commands. In
       extreme cases this leak exhausted memory and caused the simulator to
       exit or crash.
     * If expression and statement coverage is enabled, in some cases the
       missing  expression  coverage  tab  displayed  nothing even though
       expressions were not completely covered. This only occurred when viewing
       coverage data by instance not by file.
   ______________________________________________________________________

   General Defects Repaired in 6.2g
     * If a simulation library has its database file (_info) edited on a PC,
       the database could not be read starting with 6.2 although older releases
       could read it without problems.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.2g
     * dts0100384166 - SDF annotation with timing checks not working on Power
       aware netlist.
     * dts0100380258 - Constant propagation problem between VHDL and Verilog
       model.
     * dts0100387891 - Ignores events in a process after optimization.
   ______________________________________________________________________

   Known Defects in 6.2g
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * 'const ref' type of arguments are not supported in the function/task
       calls in assertions. For general function/task calls 'const ref' is
       treated like a 'ref' after issuing a warning.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
   ______________________________________________________________________

   Product Changes to 6.2g
     * The automatic invocation of the design-wide performance optimization
       tool "vopt" has been enabled. Upon invocation, the simulator determines
       if vopt has been run on the top-level module(s) you supplied; if not,
       the simulator invokes vopt and outputs a message similar to:
       # ** Note: (vsim-3812) Design is being optimized...
       The optimization step will improve run time performance and affect the
       visibility of objects in the design. To enable debug visibility it is
       recommended you add additional options to vopt on the vsim invocation
       via the -voptargs argument. For example: vsim -voptargs="+acc" which
       enables  full  debug access to objects in the optimized design. To
       understand the full usage of +acc and -voptargs, please refer to the
       chapter "Optimizing Designs with vopt" in the User's Manual for more
       information.
       If required you may obtain the previous behavior of vsim, where it does
       not perform performance optimizations, by setting the modelsim.ini
       variable "VoptFlow" to 0 (zero). An alternative to setting VoptFlow to
       zero, where interactive debug compile throughput is required you can use
       the -novopt option on the vsim and compilation command line (vcom/vlog).
     * The Watch window has changed the format for some kinds of objects.
       Composite objects are now displayed in an expanded form. The display box
       also will have scrollbars if necessary and is also resizable.
     * vlog or vopt will now display a warning if cross coverage produces
       redundent results.
     * A stacktrace will no longer be printed when a fatal error is the result
       of incorrect user code and the fatal error is recoverable. Instead, the
       simulation stops and the failing source code line is reported.
     * Due to customer requests, statement coverage has been added for VHDL
       concurrent  conditional  signal  assignments  and  selected signal
       assignments.
     * The User Interface was modified to suppress the display of implicit
       wires in the Structure and Process windows. The debugger will not step
       into implicit wire processes when the display of implicit wires is
       suppressed.  This behavior is controlled by a preference variable,
       PrefMain(HideImplicitWires). When this variable is set to 0 (zero) it
       displays implicit wires and allows the debugger to step into them and
       when it is set to 1 (the default), it hides them and suppresses debugger
       interaction with them.
     * Breakpoint and Fatal error messages have changed. They now display the
       name of the function, task, subprogram, module, or architecture where
       the condition occurred, in addition to the file and line number. This
       additional information should make it easier to debug. This old message
       format  can be enabled for backward compatibility by modifying the
       modelsim.ini variable ShowFunctions. Setting this to 0 will revert the
       messages to the previous format.
     * The see command has been enhanced. It will now accept 1 or 2 arguments.
       These arguments are the number of source file lines to display before
       and after the current execution line. The see command has also been made
       available in GUI mode in addition to command line mode.
       see ;# Display source file lines around the current execution line
           ;# By default 5 lines before and 4 lines after are displayed
       see <n> ;# Display <n> lines before and after the current line.
       see <pre> <post> ;# Display <pre> line before and <post> lines
           ;# after the current line
     * Temporary compiler files are now always created in the current "work"
       library under a directory called _temp. Previous versions created files
       in /tmp or /var/tmp and failed in some cases if the given machine did
       not have a large amount of disk space allocated to the partitions that
       contained these directories.
     * The WLF reader cache feature is now enabled by default. This feature was
       introduced in version 6.1, but was disabled by default. Refer to User's
       Manual for more information about the WLF reader cache.
     * The shell commands vcom, vlog, vsim, vmap, no longer expand environment
       variables in filename arguments and options. Instead, variables should
       be expanded by the shell before hand, in the usual manner. The -f option
       that most of these commands support, now performs environment variable
       expansion throughout the file.
       Environment variable expansion is still performed in the following
       places:
          + Pathname and other values in the modelsim.ini file.
          + Strings used as file pathnames in VHDL and Verilog.
          + VHDL Foreign attributes.
          + The PLIOBJS environment variable may contain a path that has an
            environment variable.
          + The Verilog `uselib file and dir directives.
          + Anywhere in the contents of a -f file.
       The recommended method for using flexible pathnames is to make use of
       the MGC Location Map system. When this is used, then pathnames stored in
       libraries and project files (.mpf) will be converted to soft names.
       If a file or path name contains the dollar sign character ($), and must
       be used in one of the places listed above that accepts environment
       variables, then the explicit dollar sign must be escaped by using a
       double dollar sign ($$).
       To revert to the old behavior in the event that this is necessary for
       existing      flows,     set     the     modelsim.ini     variable
       "DepricatedEnvironmentVariableExpansion" to 1. This variable must be set
       in the appropriate section ([vcom], [vlog], or [vsim]) to revert the
       behavior in the corresponding tool.
     * The Scroll Wheel behavior has changed for the Dataflow window. It no
       longer scrolls the window up or down. Instead, the scroll wheel will
       zoom In (wheel down) or zoom Out (wheel up). The window will also center
       on the mouse location as it zooms.
     * In  include  file  "svdpi.h",  the definition of the fields in the
       svLogicVecVal struct has been changed. As per IEEE P1800 SV-CC item
       #883, the two fields in that struct have been renamed from a and b to
       aval and bval, respectively. To help ease this transition, you can add
       -DP1800_2005_VECVAL to your C compiler command line. That will give you
       the old field names until you have the chance to change your source code
       to conform with the new naming.
     * The write report command has been changed to list all source files used
       to compile a given design unit, not just the main file containing the
       module keyword.
     * A "Compile selected files together" checkbox has been added to the
       Compile Source Files dialog. It allows user choice of whether to compile
       all selected files in one compiler invocation or a separate invocation
       for each file. You can change the default using the Preferences dialog
       or by editing the PrefCompileDialog(multiFileCompile) variable in the
       pref.tcl file.
     * The coverage save command writes UCDB files and the -XML switch is no
       longer  supported  with the new functional coverage flow. Also the
       coverage reload command is no longer supported, the users can use the
       view mode of vsim to see their coverage results in the GUI.
     * The coverage save command now saves data in the UCDB format (see note
       under New Features); the old code coverage format can no longer be
       saved, though it can still be processed with the standalone utility
       "vcover". The old functional coverage format will likewise no longer be
       saved with "fcover save", and a UCDB will be saved instead.
     * If you run vsim -voptargs=... and then within vsim invoke vsim again:
       previously the -voptargs argument would be copied down and remain in
       effect.  This  is  no longer the case. It is now reset before each
       invocation.
     * The Find dialog in the Objects, Locals and Dataflow windows now has a
       Find All button.
     * A -coverage option has been added to vopt for running vopt directly and
       adjusting options to correctly handle code coverage. When running vopt
       implicitly through vsim nothing needs to be done: the vsim -coverage
       option will make the needed adjustments.
     * Increase timing check capacities for optimized Verilog cells.
     * The following interfaces of registering a SystemVerilog SystemC DPI
       function have been renamed.
          + "sc_export_function"       has      been      changed      to
            "sc_dpi_register_cpp_function"
          + "SC_EXPORT_FUNCTION"       has      been      changed      to
            "SC_DPI_REGISTER_CPP_FUNCTION"
          + "sc_export_member"       has       been       changed      to
            "sc_dpi_register_cpp_member_function"
          + "SC_EXPORT_MEMBER"       has       been       changed      to
            "SC_DPI_REGISTER_CPP_MEMBER_FUNCTION"
     * Progress  information for loading dataflow is now displayed in the
       dataflow window's footer.
     * A SystemC sc_out port connected to a HDL signal higher up in the design
       hierarchy is now treated as a pure output port. A read() operation on
       such a sc_out port might give incorrect values. Use a sc_inout port to
       do both read() and write() operations.
     * The Active Processes window now loads only those processes it needs for
       display. This provides better interactive performance on designs with a
       large number of active processes when selecting a process from the
       Structure or Dataflow window.
     * Error messages in the VHDL compiler now report the full selected names
       when reporting on types. The old format for these error messages was:
       Error  file.vhd(46):  Constant  "udelay" is type vitaldelaytype01;
       expecting type vitaldelaytype01"
       The new format for these error messages is:
       Error      file.vhd(46):     Constant     "udelay"     is     type
       ieee.vital_timing.vitaldelaytype01;         expecting         type
       vital2000.vital_timing.vitaldelaytype01"
     * There are three FLI/PLI query routines that allow an application to
       programmatically determine the simulator product name and version at run
       time. These are mti_GetProductVersion(), acc_product_version() and
       vpi_get_vlog_info(). The strings they return have been changed slightly.
       The  reason  for  the  change is to make the returned strings more
       predictable both across the routines themselves, and across products and
       product versions. When the above routines return a product name, they
       will  return strings that start either "ModelSim" or "ModelSim for
       Questa". Thus a query to match "ModelSim" in the first 8 characters will
       match for both the ModelSim and QuestaSim simulators. To differentiate
       the Questa simulator, it is necessary to search for the string "Questa"
       somewhere in the product name. The ModelSim simulator will not have the
       string "Questa" in its product name. The product name string contains
       other product-differentiating information too, not detailed here. The
       product version is returned as a separate string in the VPI routine. In
       the other two routines it is returned as part of the same string, with
       the syntactic separator " Version " between the product name component
       and the version number component. The TCL command, vsimVersionString, is
       unaffected by this change.
     * The  coverage  exclude  command  syntax has been changed to better
       accommodate FSM coverage. The new syntax is as follows:
          + coverage exclude [-clearall | -addall][-code bcefst][-dataset
            <name>]
          + coverage exclude [-clear] [-dataset <name>][-srcfile <source_file>]
            [-instance <inst_path> | -du <du_name>][-code bcefs]
            [-linerange <ln>+ | <ln>-<ln>+ | all]
            [-condrow | -exprrow <ln> <rn>+ | <rn>-<rn>+ | all]
            [-ftrans <state_var_name> <trans_id>+ | <trans_id>-<trans_id>+ |
            all]
            [-fstate <state_var_name> <state#>+ | <state#>-<state#> | all]
       The coverage exclude can be used to do 'toggle disable' and 'toggle
       enable'(with -clear).
          + coverage exclude [-clear] -togglenode <node_path>+ [-in] [-out]
            [-inout] [-internal] [-ports] [-r]
       Note  that  the  new 'coverage exclude' functionality is not fully
       supported yet. FSM exclusions will not reflect in the GUI.
   ______________________________________________________________________

   New Features Added to 6.2g


