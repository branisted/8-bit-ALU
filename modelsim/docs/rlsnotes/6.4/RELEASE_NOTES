
                    Release Notes For ModelSim Altera 6.4


                                Jun 18 2008

               Copyright 1991-2008 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
   Corporation. The original recipient of this document may duplicate this
  document in whole or in part for internal business purposes only, provided
  that this entire notice appears in all copies. In duplicating any part of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.

   TRADEMARKS: The trademarks, logos and service marks ("Marks") used herein
    are the property of Mentor Graphics Corporation or other third parties.
   No one is permitted to use these Marks without the prior written consent
    of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as a
     source of a product, but is intended to indicate a product from, or
  associated with, a particular third party. The following are trademarks of
   of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.

   End-User License Agreement: You can print a copy of the End-User License
         Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.4

     [7]Verilog Defects Repaired in 6.4

     [8]PLI Defects Repaired in 6.4

     [9]VHDL Defects Repaired in 6.4

     [10]FLI Defects Repaired in 6.4

     [11]VITAL Defects Repaired in 6.4

     [12]SystemC Defects Repaired in 6.4

     [13]Assertion Defects Repaired in 6.4

     [14]Mixed Language Defects Repaired in 6.4

     [15]Coverage Defects Repaired in 6.4

     [16]General Defects Repaired in 6.4

     [17]Mentor Graphics DRs Repaired in 6.4

     [18]Known Defects in 6.4

     [19]Product Changes to 6.4

     [20]New Features Added to 6.4
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + linuxaloem - RedHat 7.2 and higher.
   ______________________________________________________________________

   User Interface Defects Repaired in 6.4
     * Saving  a wave format file (wave.do) did not always correctly save
       virtual signal dependencies such as virtual types or other virtual
       signals not in the Wave window.
     * When a SystemC breakpoint was hit during simulation, or if the user was
       doing a step operation in SystemC code, other GUI windows (e.g. Objects,
       Workspace, Wave, List) were not getting updated consistently with the
       current context.
     * The symbolic or default radix now displays values from Verilog objects
       of type time as time values.
     * When  a non-symbolic radix was specified, the examine command gave
       different results from those in the Wave and List windows for standard
       logic vectors which contained 'H' or 'L'. The List and Wave windows
       (correctly) displayed 'H' as '1' and 'L' as '0', while the examine
       command displayed them as 'X'.
     * The Tcl command info script is now supported with do files.
     * Doing text selection in the Source window was difficult when trying to
       begin the selection at the start of a line. Also, it was fairly easy to
       inadvertantly set breakpoints. The source window has been improved to
       display a thin vertical line which shows the boundary between the line
       number column and the text area. There is also an additional amount of
       interior padding within the text area.
     * Hitting F1 with the Source window active would issue an error about the
       help system not being loaded. This error is no longer shown, making the
       Source window consistent with the rest of the vsim GUI with respect to
       its use of F1.
     * The .mpf file became corrupt when the vsimk.exe process became hung and
       was killed.
     * The  popup menu in the library pane had choices for simulating and
       simulating with coverage. The simulation choice would execute "vsim
       designname", so -vopt was on by default. This popup is typically used
       with simple designs or by new users, so optimization is probably not the
       expected default behavior.
       The library popup has been changed to provide more flexibility. The new
       popup provides these simualtion choices:
          + Simulate = vopt is on and -voptargs=+acc is applied for object
            visibility;
          + Simulate without Optimization = -novopt is applied;
          + Simulate with full Optimization = -vopt is applied;
          + Simulate with Coverage = -coverage is applied;
     * Clicking on the icon in the upper left corner of a docked MDI window
       (wave, dataflow, list, etc) will now activate the window.
     * If you have a design where the work library is mapped to somewhere other
       than the current working directory, when you try doing a Recompile from
       the library pane you will get an error reported about not being able to
       access "work/_info". This has been corrected.
     * The  CoverOpt  level applied during vlog was lost during vopt. For
       qverilog, command line option applied for CoverOpt level was lost. In
       the command vcom -refresh -quiet, the option -quiet was ignored.
     * The  menu pick File->Open has been modified when the Wave, List or
       Dataflow windows are active. In previous versions, when the Wave or List
       window was active, the "dataset open" dialog was raised. This dialog
       only allowed datasets (WLF files) to be opened. When other windows were
       active, the general open dialog was presented which allowed any file
       type to be opened, including a dataset. The new behavior of File->Open,
       when a Wave or List window is active, is to present the general open
       dialog. Users can still open a dataset as before, but now have the
       option of opening other file types as well. In addition, when a dataset
       is opened with File->Open, information is automatically added to the
       Wave window. This functionality remains unchanged with one exception. If
       a List window is active when the File->Open is issued, the information
       is added to that List window, not to a Wave window. The Dataflow window
       now  supports  File->Open. User's can access more advanced dataset
       operations by issuing File->Open Dataset in the Main window.
     * The Wave Editor produced incorrect simulation behavior. This issue has
       been fixed
     * A new dataset subcommand called current was added. It optionally takes a
       dataset nameas an argument to view the specified dataset. It prints the
       name of the currently viewed dataset when no argument is specified.
     * Changing the current dataset in the Workspace window by clicking on a
       dataset name did not change the current context of the GUI, clicking on
       an item in the context tree was necessary to change the actual context
       of the GUI.
       Now the GUI context will be set to the last selected context of the
       dataset when a dataset becomes visible either by mouse click on dataset
       tabs, or, by the dataset current command. All the context dependent GUI
       data will be updated, and all the context dependent CLI commands will
       start working with respect to the new context.
       If the path argument to an env CLI command refers to a dataset which is
       not currently visible in the Workspace window, then the env command will
       make that dataset visible after selecting the specified context.
     * When using analog formatting and viewing the waveform's "min/max" values
       in either the Wave Properties dialog or the Format > Analog (Custom)
       dialog, it was possible for the displayed values to appear to have
       rounding inprecision. For example a value of "13.0" might be displayed
       as "12.999999999999998". This has been fixed so the displayed values
       will match however they would appear in the Wave's "Value" pane.
     * Logging a VHDL NULL array process variable to the WLF file could cause a
       crash when the WLF file was read in post-simulation (e.g. vsim -view
       vsim.wlf) or with wlfman.
     * System Verilog enum values that did not correspond to a defined enum
       (i.e. RED, BLUE, GREEN, etc) would be displayed in a hard to read format
       (i.e.  "?(1/0)"). Now the value itself will be displayed (i.e. "1"
       instead of "?(1/0)" and "zzz" instead of "?(0/7)" etc).
     * The first paste within a source file would not result in the SAVE action
       becoming enabled. This has been fixed.
     * In some cases, the color in the Wave window of a composite bus would
       display as red (implying an unknown member value) when all member values
       were known values.
     * It was possible for opened source files to get out of sync following a
       restart. An example would be that the lines identified as allowing
       breakpoints would not be correct. This has been fixed.
     * The User Attributes of Verification Management windows (browser and
       tracker) are no longer unconditionally saved in the .modelsim file. They
       are only saved when any of column layouts make use of them.
     * Balloon help in the Wave window Messages pane did not work as expected
       for high zoom-in levels. This issue has been fixed.
     * Using the "Rescale to fit Y data" or "Show menu of other actions->View
       Min Y" or "Show menu of other actions->View Max Y" menu picks from the
       Analog sidebar menu would result in a Tcl stacktrace if there were gaps
       in the logged data (i.e., intervals of No_Data).
     * Visibility column in Workspace window was showing wrong visibility for
       black box instances.
     * The nolog command with a wildcard would cause a crash when it tried to
       stop logging on signals that had not been logged.
     * The command nolog -all would prevent update on some array signals.
     * In certain cases, the source window would not display annotated values
       for signals.
     * Tracing drivers and readers of signals in the source window would not
       show some drivers or readers if there were implicit processes created
       between the signal and its driver/reader.
     * Corrupted MPF (project) files could result in the simulator crashing.
       The simulator now detects the corruption, and properly reports the
       error.
     * Logging VHDL variable and generics which were NULL arrays could produce
       a WLF file that would cause a crash when read post-simulation with "vsim
       -view" or "dataset open".
   ______________________________________________________________________

   Verilog Defects Repaired in 6.4
     * The "reg" keyword following net_type keyword is not allowed in a net or
       port declaration. The following declarations now generate syntax error:
       wire reg r1;
       module t(tri reg r1);
     * A structure literal may now be passed as a parameter value to a class as
       in this example:
       LinkedPacket #(.p1('{1,3})) Lp1=new();
       A restriction still exists, in that we will print an "unsupported" error
       message if the type of the parameter is itself a parameter.
     * When a concatenation of memory elements was passed to an output port in
       an array of instances, the port connections were not correct, resulting
       in incorrect simulation. Here is an example, where 'n' was a memory
       array:
       register16 u[3:0] (.q({q,n[3],n[2],n[1] }), .d({ n[3],n[2],n[1],d}),
       .*);
     * The simulator now detects when a variable (or element) written within an
       'always_comb' block is also written elsewhere outside that block, and
       prints an error. This is detected by vlog when possible, or during
       elaboration. In either case, the error, #7033, may be suppressed or
       turned into a warning using -suppress 7033 or -warning 7033 command-line
       options.
     * For  inout ports, if the port kind is omitted, then the port shall
       default to a net of net type wire. This means a definition such as,
       module top (inout integer a); is now handled as, module top (inout wire
       integer a);. Hence, the follow error message will no longer occur:
       An inout port (a) must be a net type.
     * LRM  section  6.21 limits the use of elements of dynamic arrays to
       procedural  blocks,  which  implies  that  they may not be used as
       port-actuals or in continuous assignments. However, we were not catching
       these as errors when the references were external.
     * Added support of 'randc' for more types, including: multi-dimension
       arrays, dynamic arrays, queues and parameterized types. Per mantis #2233
       restrictions on allowed types for randc were removed (now allowing any
       integral type). Note: randc is still not supported for associative
       arrays.
     * Extended  support  of  SystemVerilog  randsequence  for previously
       unsupported features.
       Randsequence now supports:
          + references to automatic or local variables,
          + production return values (including multiple instances).
       Several randsequence bugs were fixed:
          + problems  recognizing  productions  depending on the order of
            declaration,
          + problems  with  different  randsequence statements containing
            productions of the same name,
          + problems referring to class properties or function arguments, an
            error is now reported for negative production weights.
       NOTE:  Due to these updates, sequences generated by a randsequence
       statement are different in 6.4 from those generated in 6.3 versions.
     * The -E flag would emit Verilog text without necessary spaces.
     * vopt now accepts VCD files that replace instances without the instance's
       compiled object.
     * Added an implementation of svGetCallerInfo(), an IEEE std 1800-2005
       specified function for SystemVerilog support.
     * Packed, tagged unions had problems in earlier versions. In particular,
       if one had a packed array of packed, tagged unions, one could not assign
       to an element of that array. In addition, $display of these types did
       not print correct values.
     * Unnecessarily escaped identifiers in the body of a macro now match with
       unescaped macro formal arguments.
     * A clocking block declared in a nested program failed to find the signal
       associated with a clocking variable when the associated signal was
       declared outside the program block.
     * The simulator automatically detects and applies +delayed_timing_checks
       to optimized cells with negative timing checks. Appropriately applying
       +delayed_timing_checks   will   significantly  improve  simulation
       performance. To turn off this feature, specify +no_autodtc to vsim.
     * SystemVerilog external method declarations using an undeclared return
       type gave fatal errors in some situations.
     * Errors occurring at the end of one Verilog file may have resulted in
       error messages with incorrect data.
     * Initializing an enum value with an external reference used to produce an
       error during elaboration. The following will now work, where 'str' is a
       parameter inside the instantiated interface: enum8_inf i();
       typedef enum{zero = i.str, one , two, three} num_n;
     * Cases such as:
       module top();
        begin : genblk2
            end
            begin
            end
            begin : genblk02
            end
       endmodule
       might have given errors such as:
       #  ** Error: 'genblk02' already exists; must not be redefined as a
       generate block
       # vlog failed.
       This is now fixed, and the second generate block will get the name
       'genblk002'.
     * Calling super class constructor inside a member function of a derived
       class might have given errors like:
       ** Error: 1.v(8): Internal error: ../../../src/vlog/vrslvdecl.c(6082)
       stmt
       ** Error: 1.v(8): Verilog Compiler exiting
     * Certain system functions, such as $unsigned and $log10, are now treated
       as 'constant' when their arguments are constants. Hence, these can be
       used for initializing parameters.
     * SystemVerilog  designs  with user packages named "avm_pkg" did not
       properly refresh.
     * Under some circumstances while processing an error condition in a task
       for function, vopt would crash.
     * A force on an unpacked wire-array did not work properly, and either
       resulted in an error or stored the wrong value. The following now works
       correctly:
       reg [7:0] force_value [7:0][3:0] =
       '{7:'{default:3},0:'{default:9},default:1};
       wire [7:0] warr [7:0][3:0];
       initial force warr = force_value;
     * Dereferencing an element of a class through a virtual interface (i.e.
       "vif.clshandle.var")  would result in an Illegal virtual interface
       dereference error.
     * An issue with Verilog incomplete pragma's was fixed.
     * Expressions having a mix of "real" and "reg" types produced incorrect
       results in some cases.
     * The vlog -lint command would produce warnings for generate loops which
       are valid in SystemVerilog.
     * A  wait on the 'triggered' method of an event variable, referenced
       through a virtual interface, never awakened. For example:
       virtual task rcv();
       wait(bfn_port.bfn_sof_edge.triggered); // event is never seen on wait
     * Errors would be reported by the simulator when attempting to perform
       restart on designs with configurations. In incremental (novopt) mode, a
       stacktrace  would  often occur. In vopt mode, when vopt is invoked
       automatically by the simulator (2-step flow), the simulator would report
       the following error:
       ** Error: (vsim-8345) Unable to find original top-level design units for
       optimized design "_opt".
     * Fixed 'syntax error, unexpected $undefined, expecting "class"'.
     * Associative array methods such as 'first' and 'next' were treating the
       'this' argument as a reference, when it should be treated as an input
       (since the array itself is not modified).
     * Use of +delayed_timing_checks caused invalid SDF annotation errors of
       type (vsim-SDF-3262).
     * Using $fwrite on a packed 'struct' would cause vsim to crash.
     * vopt would sometimes report errors as being in protected code when they
       were actually in public, non-encrypted code.
     * In  some cases involving extension of parameterized classes within
       generate conditions or when the extending class was non-parameterized,
       optimization or simulation could fail.
     * SystemVerilog package compilation was not respecting "-Lf" library path
       directives.
     * When any of the port connections of a bind call contains concatenation
       expression as an actual expression, vlog -refresh would somtimes result
       in a crash or when vsim is invoked with -novopt.
     * Simulations using pulse_e_style_ondetect could hang.
     * An incorrect error indicating an invalid virtual method override could
       be generated during compilation for some cases involving methods whose
       types were specializations of parameterized classes.
     * In some cases an error would not be reported if a package class was
       extended in a module and a virtual method was overridden by a method
       with incorrect types.
     * With -G and +acc=r specified at the same time in vopt, sometimes an
       error message of the following form was displayed:
       Invalid override of parameter 'P' whose value may no longer be modified.
     * Within some contexts such as a parameterized class, an invalid error
       could be reported when assigning a enum value to an array of the enum
       type.
     * A type error would be incorrectly reported if the value assigned to an
       enum variable was a conditional expression where both branches of the
       conditional were correctly typed enums.
     * An invalid error was reported if the index type of an associative array
       was an incomplete forward type declaration.
     * Conditional path delay selection failed to evaluate the new condition
       result in the case that the condition result changed simultaneous with
       choosing a path delay (in some cases).
     * System Verilog foreach when used to iterate over an array which has its
       dimensions defined as an unsigned integer might have given wrong results
       in incremental compile mode.
     * Using an empty string as a key into an associative array was ignored.
       For example:
       int arr[string];
       string s = "";
       initial arr[s] = 23;
       Previously, 'arr' would still be empty. It will now have an entry whose
       key is "" and whose value is 23.
     * The  -E  flag  would  produce incorrect output when used with full
       case/parallel case pragmas within comments.
   ______________________________________________________________________

   PLI Defects Repaired in 6.4
     * The  VPI type of a variable from within an array of short real was
       incorrectly reported as vpiRealVar. It is now vpiShortRealVar.
     * The IEEE Std 1800-2005 mentioned two callback reason definitions that
       are in the process of changing. cbSizeChange was referred to in the
       text, but not given a numeric definition; and cbTypeChange which had the
       numeric definition of 605 but was not referenced anywhere else. In the
       sv_vpi_user.h supplied with 6.4, the cbSizeChange macro definition has
       the  numeric  value  605.  cbTypeChange  is left in place, but VPI
       application developers should not use this type label in their code, as
       it is now targeted for deprecation.
     * A PLI application that directly modifies the contents of a memory using
       the pointer to storage obtained from tf_nodeinfo() can now propagate the
       changes to the design by calling tf_propagatep(). This is a non-standard
       extension to tf_propagatep(). Previously, there was no mechanism to
       propagate these changes, which could lead to confusing inconsistencies
       in the design state, especially in an optimized design.
     * FLI/PLI  shared  libraries are now unloaded during quit unless the
       -keeploaded vsim option is used. Any atexit callback registered for the
       shared library is called when the shared library is unloaded. In case of
       a  C++ shared library, global destructors are called after all the
       atexit() callbacks are done.
   ______________________________________________________________________

   VHDL Defects Repaired in 6.4
     * When vcom was invoked using an older language version, newer language
       declarations    from   packages   std.standard,   std.textio   and
       ieee.std_logic_1164 could (illegally) be accessed via USE clauses or
       selected names. An example is compiling with -87 option and using the
       selected name std.standard.delay_length, which is defined for VHDL93 and
       later versions.
     * Checking of PURE functions with regard to the rules listed in "2.2
       Subprogram bodies" of the LRM has been improved. In particular, use of
       FILE  objects  in  PURE  functions  will  be  detected  under more
       circumstances. To enforce strict interpretation of the applicable rules,
       use the -pedanticerrors switch when invoking vcom.
     * The behavior of the vopt +floatgenerics switch has been corrected to be
       more closely aligned with the +floatparameters switch, in resolving the
       following issues.
          + The +floatgenerics switch would not accept instance paths that
            extended  through  generate  loops  which  had  been unrolled
            (internally) by vopt. If a generate loop is not unrolled, because
            its range cannot be determined by vopt, all iterations of the
            generate loop will now satisfy the associated path element, and a
            warning will be issued.
          + A path can now be specified in the form design-unit/instance-path.
          + Individual generics can now be named.
     * When -check_synth is used on a VHDL design, a warning was incorrectly
       issued when a static attribute was referenced for a signal that was not
       in the sensitivity list.
     * There were discrepancies in array return value index bounds between the
       VHDL function source and internal accelerated versions of some functions
       in package std_logic_1164. Accelerated versions now produce results with
       the same array index bounds as the defining VHDL source in the package.
     * For a FUNCTION having a return type mark that denotes a constrained
       array subtype, the language requirement (see 8.12 in the LRM) that a
       RETURN statement expression must evaluate to an array value with the
       same index range(s) and direction(s) as that type mark has been relaxed
       to produce only a compiler warning; an implicit subtype conversion will
       be performed at run time. To enforce the prior compiler behavior, use
       the -pedanticerrors switch.
     * In some instances when a signal array appeared twice in a port map one
       of them was left unconnected.
     * For some cases where the name of a block generic is similar to the
       generic of the parent entity, wrong generic propagation was taking
       place.
     * An expanded name whose prefix was one of the packages in one of the
       libraries shipped with the product could not be used in a user-defined
       package of the same name. For example, a user-defined package named
       "numeric_std",     if    it    contained    an    expanded    name
       "ieee.numeric_std.signed", even though legal, would cause a compiler
       error "Expanded name prefix cannot denote design unit being analyzed.".
     * In some cases when doing default binding at elaboration, if multiple
       entities with the same name existed in more than one library the default
       entity was taken from the wrong library.
     * In some cases, a process modeling an FSM that reads a subelement of
       signal of a record type would not be optimized correctly and fail to
       execute the body on the clock edge after reaching a particular state.
     * In some cases, vopt could infer incorrect values for generics, or infer
       none, when configurations specified bindings of distinct architectures
       of a single entity. If no generic values were inferred, and the entity
       specified no default value, the following error message would be issued:
** Fatal: (vsim-3350) Generic '...' has not been given a value.
   ______________________________________________________________________

   FLI Defects Repaired in 6.4
   ______________________________________________________________________

   VITAL Defects Repaired in 6.4
   ______________________________________________________________________

   SystemC Defects Repaired in 6.4
     * References to the global symbols in the SystemC shared library were
       getting overridden with the vsim symbols, when vsim is linked against
       the SystemC shared library.
     * The  scv_report and scv_report_handler classes are now merged with
       sc_report        and        sc_report_handler        respectively.
       scv_report_handler::set_debug() and scv_report_handler::get_debug()
       functions  are  no  longer  available. All messages reported using
       scv_report  will  now  be  integrated with messages reported using
       sc_report.
     * Unnamed enumeration types embedded in a struct or class are now handled
       correctly  across  multiple sccom compiles or in files compiled in
       different libraries.
   ______________________________________________________________________

   Assertion Defects Repaired in 6.4
     * PSL vunits (Verilog) can now have SystemVerilog constructs if they are
       bound to SystemVerilog modules.
     * Double-clicking or trying to view source from a clock specifier in the
       assertion browser would cause the gui to issue a cryptic error. This has
       been corrected, and now the browser will bring up the source window with
       the assertion which uses the clock.
     * If a user starts vsim with the -assertdebug option and there are no
       debuggable assertions found in the design a warning will be issued.
     * Corrected   the   assertion  browser  and  ATV  where  assume  and
       assume_guarantee PSL directives would display as though they were assert
       directives.
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.4
     * Problems existed when a hand generated component declaration was used
       instead of the output from vgencomp. The first problem was that the
       component could incorrecting allow generics to be passed to Verilog
       parameters that should not be accessable from VHDL. This would only work
       in the novopt flow when default binding was done at elaboration time. In
       the vopt flow or when default binding was done at compile an error would
       be generated about the Verilog module missing a generic. This is now an
       error  in all flows. The second problem was that in novopt bind at
       elaboration time flow it would incorrect connect ports and generics when
       extended indentifiers were used.
     * Mapping  of  parameter R to generic \R\ could get confused by case
       differences if a parameter/generic of lowercase r exists.
     * SystemC control/observe can now be used multiple-times on the same
       SystemC signal to simultaneously control and observe a bi-directional
       foreign signal.
     * Unnamed VHDL instances in Verilog were not reported as an error when
       optimizing the design. Instead a crash would occur.
     * vopt crashed when accessing items within a black-boxed design unit and
       the design was mixed-language.
     * The vcd dumpports command failed to capture "same state" contention in
       the VCD file on an inout port in the case of a Verilog DUT underneath a
       VHDL  testbench. Specifically, transitions from one driver "on" to
       multiple drivers "on" without a state change were not recorded.
   ______________________________________________________________________

   Coverage Defects Repaired in 6.4
     * Source code lines reported on coverage detail pages by HTML report
       generator were incorrect on Windows platform only.
     * Fixed memory corruption in HTML report generator which would result in
       HTML annotated source files getting incorrect names and occasional
       crashes on the Windows platform.
     * A  new  option called -version is added in vcover report and merge
       commands to print UCDB file version number. For merge, it will print the
       version number of each input UCDB file, and the version number of the
       output UCDB file.
     * Toggle exclusions in viewcov mode are supported.
     * Bitwise exclusions for toggles are supported in vsim and viewcov modes.
       Part select exclusions for toggles are supported in vsim mode.
     * File-based exclusions did not propagate to instances in viewcov mode.
     * The output of the vcover report -totals -byinstance command is now same
       as the output of the vcover stats command.
     * Added option -maxfecrows n to set the maximum number of input patterns
       allowed  in  FEC table. The corresponding modelsim.ini variable is
       "CoverMaxFECRows". The default value is 192.
     * Added vcom/vlog option -nofec to disable focused expression coverage. It
       is enabled when -cover ec is used.
     * Added  a  pragma  "coverage never". This pragma will stop coverage
       instrumentation at compile time. Code excluded via this pragma can not
       be included during run time. This can be turned off via pragma "coverage
       on".
     * Instance exclusions are applied in byfile and bydu reports for design
       units having only one instance.
     * The "Code Coverage" -> "Enable Recursive Coverage Sums" menu item is
       added in Workspace popup and pulldown menus to change coverage data
       display in Workspace window. By default the Workspace now displays
       non-recursive local coverage data. Selecting the above menu item will
       switch the display to show recursive coverage data. If any design unit
       is not compiled with cover flags then the coverage data will not be
       displayed for the instances of that design unit in both modes of view.
       The Workspace window name indicates the data display mode by showing
       either "Local Coverage Aggregation" or "Recursive Coverage Aggregation"
       along with the Workspace name. The last selection is saved in .modelsim
       file.
     * Added  "Test  Analysis"  submenu  in Workspace, Instance Coverage,
       Assertions, Cover Directives, and Covergroups popup and pulldown menus
       which has the following menuitems. All are available in viewcov mode
       only.
          + Find Least Coverage
          + Find Most Coverage
          + Find Zero Coverage
          + Find Non Zero Coverage
          + Summary...
     * Added  "XML Import Hint" menuitem in Workspace, Instance Coverage,
       Assertions, Cover Directives, and Covergroups popup and pulldown menus.
       It is also added in Library popup menu to work on design units. This is
       to show hints on "Link Type" and "Link Name" columns in a Text popup
       window about the selected item for using in spreadsheets to generate
       testplan UCDB files.
     * Fixed a bug in which generate blocks are not reported for code coverage
       after restart, in no-vopt mode.
     * The -nofec option in vlog and vcom was renamed to -nocoverfec. The
       CoverageFEC modelsim.ini variable is added to set the default. Checkbox
       "Ignore Focused Expression/Condition Coverage (-nocoverfec)" is added in
       Coverage tabs in Compile Options and Design Optimizations dialogs in
       GUI.
     * The  -coveragenoshort  option  in  vlog  and  vcom  was renamed to
       -nocovershort. The CoverageShortCircuit modelsim.ini variable is added
       to  set  the default. The -covershort option is added to overwrite
       modelsim.ini  setting. Checkbox "Disable Short Circuit Elaboration
       (-nocovershort)" is added in Coverage tabs in Compile Options and Design
       Optimizations dialog in GUI.
   ______________________________________________________________________

   General Defects Repaired in 6.4
     * The virtual type command did not correctly handle values that had upper
       case alpha characters, when 'don't-cares' (the '-' character) were
       present in the value.
     * Added the +dumpports+nocollapse vsim switch to go with (and be the
       opposite of) the +dumpports+collapse switch for controlling whether
       dumpport VCD vectors are collapsed or not (default is collapsed in the
       modelsim.ini file).
     * When vsim detected it needed to do an automatic refresh of a design-unit
       (typically when a 64-bit version was needed, when only a 32-bit version
       exists),  there  could be concurrency conflicts -- especially when
       multiple  vsim  processes  were  executing  in  a  simulation grid
       configuration.
     * vopt generates duplicate error messages when detecting an error on
       parsing mixed language options such as -sdfmin, -sdftyp, -sdfmax.
     * vopt failed to execute when some pathnames contained parentheses.
     * Makefiles generated by vmake failed to recompile Verilog code in cases
       where $unit items existed because the date/time stamp on the $unit
       _primary.dat file was always newer than the date/time stamp on the
       design unit _primary.dat file.
     * The vmake utility now generates vlog, vcom, and vopt command lines using
       the original command line arguments. Previous version of vmake failed to
       capture some command line arguments like -novopt and -timescale.
     * The vmake utility is now at version 2.2
     * The vmake utility created variable and rule names in the generated
       makefile differently between Windows and UNIX. It now creates names in
       the same format for all platforms. The format used for Windows, which
       uses the '_' character is now used for all platforms.
     * A  bug  that  prevented  the  use of multiple OCF files to control
       optimization has been fixed.
     * The vsim -msgmode wlf option incorrectly suppressed elaboration error
       messages which should have been reported in the transcript.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.4
     * dts0100237180 - Cannot exclude coverage for if generate lines instance
       specific.
     * dts0100298442 - [info script] incorrect when command file is specified
       on command line.
     * dts0100323279 - Docked Wave pane does not focus when clicking the frame
       button.
     * dts0100337400 - Inconsistent display of std_logic_vector with 'L' if
       radix=hex.
     * dts0100354490 - Problems with multiple unnamed enums.
     * dts0100393800 - Post process exclusion for instance does not work for
       toggle coverage.
     * dts0100393804 - Can't exclude single bits with togglenode.
     * dts0100416432 - Bug in AVM avm_in_order_built_in_comparator/avm_pair.
     * dts0100421473 - coverage report -bydu does not take instance exclusion
       into account.
     * dts0100430855 - UCDB user attributes from previous project appear in
       browser when not in current UCDB.
     * dts0100431587 - Support a method to disable the default behavior of the
       ini setting for DumpportsCollapse (with the 6.3a release).
     * dts0100444777  - System function $clog2 with constant argument not
       considered constant function.
     * dts0100451972 - Modify SCV to use report_handler for internal errors.
     * dts0100459721 - $init_signal_spy() do not check correctly the string
       parameter so the message is "strange".
     * dts0100472827 -
     * dts0100473742 - Please add a Step Out button.
     * dts0100475927  -  Binding  to  a 2-dimensional vector in VHDL to a
       2-dimensional vector in SVA module.
     * dts0100476053 - Request support for implicit port connection syntax (.*)
       in mixed SystemVerilog/VHDL.
     * dts0100476682 - valgrind integration crash while direct invocation of
       valgrind works.
     * dts0100478044 - Simulator crashes when using the -vopt switch.
     * dts0100478100 - Can't add more exclusions for UCDB with exclusions.
     * dts0100478420 - Interpreting time resolution in a mixed VHDL+Verilog
       design.
     * dts0100482118 - Enabling conditional coverage results in SIGSEGV error
       at run time.
     * dts0100483286 - Is there a way to use vopt on IP and top in no vopt
       mode?
     * dts0100487378 - Error vish-7.
     * dts0100487541 - 2-GB limit of simulator on Windows.
     * dts0100487866  -  Support  of array of int at the boundary between
       SystemVerilog and VHDL.
     * dts0100488599  - Vopt bbox doesn't resolve references through VHDL
       (2-step flow does).
     * dts0100489508 - Problem with -cover overriding CoverOpt in modelsim.ini.
     * dts0100491599 - Crash when attempting to report a corrupted MPF file.
     * dts0100493229 - Simulation results change with depth of hierarchy of
       signals added to wave window.
     * dts0100494601 - Different values for Max value in Analog custom dialog
       box.
     * dts0100495684 - Code coverage differences with restart, coverage dataset
       open.
     * dts0100495774 - ** Fatal: (vsim-3350) Generic 'numofports_c' has not
       been given a value.
     * dts0100496188 - Crash when trying to load a WLF file.
     * dts0100496680 - Source window "break-able" lines wrong after external
       edit and reload.
     * dts0100497021 - SV foreach loop mis-simulates when an array size of type
       'unsigned' is passed as a parameter.
     * dts0100497404 - ModelSim PE documentation for controlling timing checks
       implies support for tcheck_set and tcheck_status.
     * dts0100497825 - Enum assignment type check error inside parameterized
       class.
     * dts0100498801 - Wait on an event triggered inside an interface passed to
       a class, the event is never seen.
     * dts0100499299 - vcd dumpports records same-state contention incorrectly
       for mixed-language simulations.
     * dts0100499461 - Difficult to see the tooltip text of messages in the
       message area of the Wave window.
     * dts0100499600 - Overriding of parameters in vopt (with +acc) step not
       working properly.
     * dts0100500048  -  Errors  would  be reported by the simulator when
       attempting to perform restart on designs with configurations.
     * dts0100500130 - vsim -novopt segfaults when used with classes declared
       within a generate block.
     * dts0100501198 - Reference to a SV template parameter from a derived
       class fails.
     * dts0100500428 - Default binding mismatches between vopt and novopt.
     * dts0100501166 - The color in the Wave window of a composite bus would
       display as red (implying an unknown member value) when all member values
       were known values.
     * dts0100501480 - Reference to a task defined in a super class through a
       queue fails.
     * dts0100501823 - Library Search rule issue with vlog when SV packages are
       used.
     * dts0100502229 - SV compile problem with associative array method and
       const ref.
     * dts0100502402 - Analog wave display resulting in Tcl error when clicked
       on the menu items.
     * dts0100502438 - vcom does not have the same behavior in 6.2 and 6.3 with
       customer sample code.
     * dts0100502639 - vsim error occur on SV packed struct with %fwrite %u.
     * dts0100436729 - Wave format file not saving virtual signal dependencies.
     * dts0100347958 - mpf file gets corrupted data when vsimk.exe process gets
       hung and is killed.
     * dts0100454855 - "Save" icon in the toolbar not enabled after copy-paste
       in embedded editor.
     * dts0100442668 - LRM references that the Input port's default is WIRE and
       not VAR, vsim is treating them as VAR.
     * dts0100416399 - Virtual type/function with don't cares is not matching
       correctly.
     * dts0100471215 - Problem with an SDF 3.0 timing spec.
     * dts0100479055 - support -label option for the enablebp, disablebp and bp
       commands in simulator.
     * dts0100428425 - Order of compilation doesn't match vmake dependency
       list.
     * dts0100429592 - Unnecessary recompilation of makefile due to existence
       of redundant filename_sv_unit in the library.
     * dts0100503324 - nolog causes crash or error messages.
     * dts0100449099 - vmake sometimes ignores include directives when building
       dependency lists.
   ______________________________________________________________________

   Known Defects in 6.4
     * On Windows platform, If Destructor breakpoint on SystemC object is set
       via command "bp -c < function_name >", Debugger sometimes does not stop
       at the breakpoint.
     * On  Windows  platform,  if  breakpoint  is set on a SystemC object
       destructor, Debugger sometimes crashes while quitting simulation. This
       crash can be avoided by setting env variable SC_NO_LIB_UNLOAD, which
       will prevent unloading of the shared library.
     * Syntax highlighting may not function properly in the Source window (all
       the source is shown as plain text). You can fix this problem by editing
       ~/hte/v2_38/hte.ini (where ~ represents your "HOME" directory) and
       deleting the line that says:
       languages=cxx tcl verilog vhdl XML PSL
     * The viewcov mode version of "coverage clear" has a known difference in
       behavior compared to the vsim mode version. In the viewcov mode version,
       clearing coverage data in a design unit instance does not affect the
       coverage data for that design unit, itself. Also, if you clear coverage
       data  in  a design unit, all instances of that design unit are not
       affected by that operation. In vsim mode, the data is more tightly
       linked such that one operation affects the other. In viewcov mode, if
       you want to have correct data correlation between instances and design
       units, then you need to clear both instances and design units.
     * The simulator will hang if it tries to create a WLF file while running
       on a Linux 64-bit operating system from a working directory which does
       not support large files. One common instance of this is executing an add
       wave command, when the working directory was created under an older
       32-bit Linux OS.
       This  is  a  Linux operating system bug and cannot be fixed by the
       simulator.
       A workaround for release 6.3 and above is to execute the simulator with
       command line option -wlfnolock.
     * The stack unwinder on the linux_x86_64 OS is unreliable. The unwinder is
       the fundamental facility provided by the OS for sampling where program
       execution is at. The unwinder is necessary for gathering performance
       data. This is a known issue with this specific OS and is why performance
       data will be incorrect or non-existent on this platform.
     * Users should be mindful of enabling both performance profiling and
       memory  profiling at the same time. Memory profiling requires much
       overhead  process,  and it can skew the results of the performance
       profiling data.
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * Specparams can be learned during the learn flow, but cannot be found on
       consumption. The workaround is to use full +acc deoptimization.
     * Concatenations and bit slices are not yet supported for System Verilog
       clocking blocks.
     * On Red Hat Enterprise Linux release 5 platform, If SIGSEGV signal occurs
       during the simulation and if CDEBUG is on, C-debugger traps the signal,
       and when continued, vsim gets terminated right away, instead of exiting
       with proper error status.
     * vlog  will  now  print  an  "unsupported" error message for nested
       design-units, as this feature is not fully supported in 6.3. This error
       may be suppressed using the -suppress 2230 command-line options.
     * For  viewing  events  in Expanded Time in the List window, use the
       "configure list" command with the "-delta events" option. "events" is
       added to the "all", "collapse", and "none" options for the "-delta"
       argument. These options control the details shown in the List window and
       in writing list files. This was documented incorrectly in the "Expanded
       Time Viewing in the List Window" section of the "Waveform Analysis"
       chapter of the User's Manual. The "write list -events" command serves a
       different purpose (which has not changed) and is NOT used to control
       Expanded Time viewing in List window.
     * The  "examine",  "searchlog", and "seetime" commands have NOT been
       enhanced for use with Expanded Time. This was documented incorrectly in
       the "Expanded Time Viewing with examine and Other Commands" section of
       the "Waveform Analysis" chapter of the User's Manual.
     * Transaction streams created within System Verilog interfaces will not be
       visible in the GUI except in the actual interface instance. Any formals
       attached to the instance will not include the TR streams. This is by
       design and will be changed as soon as possible.
   ______________________________________________________________________

   Product Changes to 6.4
     * To improve usability, the Run toolbar has been changed: a Break button
       has been added.
     * The text-based windows (Transcript, Notepad and Source) now have an
       "inline" search bar (instead of a dialog box) which supports incremental
       searching.  The  previous  behavior  can  be  restored  using  the
       "Main/InlineTextSearch" option.
     * Several fatal elaboration errors will now print the line # where the
       error occurred.
     * The  new  enhanced support of analog format within the Wave window
       includes a change to the output created by "write format wave". In
       pre-6.4 the output for the "add wave" commands would include "-offset"
       and "-scale". Starting in 6.4 the output will instead use "-min" and
       "-max".
     * When vpi_iterate and vpi_scan are used on an array of instances, the
       individual elements will now be returned left-to-right, where they
       formerly were returned low-to-high. For example if they are applied to
       "mymodule u1[2:0]();", the elements returned will be u1[2], u1[1],
       u1[0].
     * Each tag in a taglist (used as data extraction parameters) may now
       include a subset of the XPath syntax to identify elements not only by
       tag  name  but also by the contents of attributes attached to said
       elements. This pseudo-Xpath syntax only handles "=" and "!=" and can
       only  examine  the  attribute values attached to the element being
       compared. Moreover, only one attribute comparison may be performed.
       For example, the following extraction parameter:
"-starttags Worksheet[@ss:Name=Sheet1]"
       will match the following element in the incoming XML:
<Worksheet ss:Name="Sheet1">...</Worksheet>
       but will not match the following element:
<Worksheet ss:Name="Sheet2">...</Worksheet>
     * The behavior of several extraction parameters in the XML Import utility
       has  been  clarified  to  allow  various  parameters  to work more
       independently.  The  affected parameters are: starttags, stoptags,
       excludetags, and startstoring.
     * VCD extensions for SystemVerilog supported as per Section 24: VCD Data
       in IEEE-P1800. LRM is not extending VCD for interfaces and programs.
       They will be dumped as "module" scope.
     * The source window has been changed to remove the separate column used to
       display breakpoints. Breakpoints will be shown within the "line number"
       column (as they were in the pre-6.3 releases). The LMB event handling
       has been improved to avoid inadvertant setting of breakpoints. Also,
       there is now a subtle visual separator bar between the text area and the
       line number column to help guide the user during text selection.
     * The coverage numbers shown in the source window can appear to be in
       conflict with what's shown in the "Missed Coverage" window. This occurs
       when the Missed Coverage window is in "By Instance" mode and the source
       window is in "By File" mode. The latter is the default for the source
       window but it gives no indication what its current mode is. To make it
       clear for the user, the title bar of the source window will be enhanced
       to  include the current coverage data mode(either "by file" or "by
       instance").
     * The Contains toolbar now supports multiple wildcard modes. The default
       mode is now "glob" style which is the more common form of wildcards as
       found in UNIX shells. The wildcards are *, ?, [chars], and \x where x is
       any character, removing that character's special meaning.
       Previously, this filtering tool used full regular expressions. This
       option is selectable from the menu button in the Contains entry box, by
       selecting the value "regular-expression".
       The third option, "exact", does not use wildcards so no characters have
       any special meaning.
       In all modes, the search patterns are considered case insensitive. If a
       case sensitive pattern is needed, use the regular-expression mode and
       perpend the search string with "(?c)".
       The preference variable PrefMain(ContainsMode) defines the filter mode
       for all windows with one of the values of "glob", "regexp", or "exact".
       More  information  on  regular expressions can be found in the Tcl
       reference manual under "re_syntax". Information on glob style matching
       can  be found in the Tcl reference manual under the "string match"
       command.
     * Macro arguments to Verilog and SystemVerilog macros are now expanded
       prior to substitution into the macro body.
     * SDF  annotation  of  RECREM  or  SETUPHOLD  matching only a single
       setup/hold/recovery/removal  timing check will result in a warning
       message.
     * The transaction recording engine no longer issues a warning if a design
       attempts to record a transaction of zero length.
     * The log and nolog commands are now supported for transaction streams of
       all kinds. TR streams created through the SCV or Verilog APIs have
       logging enabled by default. The rule is that a transaction will be
       logged in WLF if logging is enabled at the simulation time when the
       design calls ::begin_transaction() or $begin_transaction. The effective
       start  time of the transaction (the time passed by the design as a
       parameter to beginning the transaction) does not matter. Thus, a stream
       could  have  logging disabled between T1 and T2 and still record a
       transaction in that period using retroactive logging after time T2. A
       transaction is always entirely logged or entirely ignored.
     * PSL LTL and OBE operators are now disabled by default. Use -pslext
       vcom/vlog/vopt switch to enable these operators.
     * The Win32/Win32PE platform executables (excluding vish.exe) are now
       linked  with  the /LARGEADDRESSAWARE switch. This switch allows an
       executable to allocate an extra gigabyte of process space (up to 3GB).
       The  additional  gigabyte of process space is available on Windows
       configurations that include the /3GB (/userva on Vista) boot switch.
       Vish.exe is not linked with /LARGEADDRESSAWARE and we do not recommended
       that this switch be used with vish.exe. Testing vish.exe with this
       switch exhibited a tendency to exceed the one GB system limitation which
       results in a crash. When the simulator's GUI displays several windows
       with  large  amounts of graphical data and a full redraw occurs, a
       temporary surge in the allocation of system memory can cause the limit
       to be exceeded.
     * The  behavior  of virtual expressions has changed in a subtle way.
       Normally when a virtual expression contains a relative context pathname,
       for example u1/x2/b, the current context would be used in order to
       resolve the name. However, relative paths that started with a toplevel
       name  would also be recognized, ignoring the current context. This
       unintended behavior has been corrected so that the current context is
       always used to resolve a relative name. This may cause some previously
       accepted virtual expressions to fail to be accepted.
     * modules found through source library search are no longer treated by
       default as if they contained a `celldefine compiler directive. To obtain
       the old behavior, add +libcell to the vlog command line. Source library
       search is enabled with -v and -y compilation options. Whether a module
       is considered a cell or not affects logging defaults with log -r *,
       coverage  defaults  within  the  module,  and  PLI access routines
       acc_next_cell and acc_next_cell_load. This change simplifies migration
       from other simulator products.
     * Support for Verilog hierarchical references through VHDL design units
       has  been  greatly  improved.  It is now possible for hierarchical
       references from a higher level Verilog to refer to objects in a Verilog
       module instantiated beneath a VHDL design unit. In previous releases,
       upward references from a lower level Verilog module would only work if
       the  target's  scope  was  a  direct parent, or a silbing that was
       instantiate  lexially earlier in source. This restrictions are now
       removed. Hierarchical references that pass through a VHDL design will
       not work in the follow cases:
          + Is the target of a defparam.
          + Used as an actual to a unconstrained VHDL port.
          + Target of the reference is a VHDL object.
     * A  new toolbar has been added to the Wave window for access to the
       existing Bookmark functionality.
     * Enabled use of the "contains" filter for the Files tab of the Workspace
       window.
     * Support for some additional VPI features has been added in this release.
       The vpiDriver transition has been extended, and partial support for
       vpiContAssign objects has been added.
     * When  encrypting Verilog source text any macros without parameters
       defined on the command line are substituted (not expanded) into the
       encrypted Verilog file.
     * Wave searches initiated from the keyboard or toolbar buttons can now be
       stopped by clicking the Wave window's "Stop Wave Drawing" toolbar button
       or the Simulation toolbar's "Break" button.
     * The SystemVerilog array manipulation methods now reflect the latest
       changes in the P1800 Draft5 version of the LRM, in that iteration occurs
       only in the top dimension of the array. That is, the correct way to sum
       the  elements of a 2-dimensional memory, as indicated in the LRM's
       example, is:
       logic [7:0] m [2][2] = '{ '{5, 10}, '{15, 20} };
       int y;
       y = m.sum with (item.sum with (item)); // y becomes 50 => 5+10+15+20
       Previously, ModelSim iterated through all the unpacked dimensions,
       "[2][2]" in this case.
     * When using C-debugger to debug quit callback functions, user needed to
       turn on 'stop on quit' mode. User start debugging by issuing 'quit -f'
       command. When simulation ends, user needed to quit C-debugger using
       'cdbg quit' and then GUI using 'quit -f'. Now, Users do not need to
       issue extra commands at the end of the run. Simulator automatically
       quits C-debugger and GUI, after debugging is done and simulation has
       stopped running.
     * If a VHDL signal is read during elaboration the value read may differ
       from  value read in previous releases. The VHDL LRM considers this
       illegal(Section 12.3) but tool behavior has always been to just warn and
       allow a value to be read. What the value read has always been undefined.
       Additionally previous releases allowed functions and procedure with
       signal parameter to be called during elaboration. This is now illegal
       and reported at compile time.
     * The menus which control the functional coverage tab display options
       (assertion, cover directives and functional coverage) have changed
       slightly. Most significant of the changes is that each pane now has a
       separate control for "Show All Contexts" and "Recursive Mode" that is
       not shared with the other panes. They are available with the right mouse
       click popup window as well as under the tool's main menu, under the
       "Display Options" menu pick.
     * The bp command now outputs a list of existing C breakpoints with their
       enabled/disabled states in the bp command syntax, so that this output
       can be saved and executed later to recreate the breakpoints.
   ______________________________________________________________________

   New Features Added to 6.4
     * Added support for enums and records (including nested records) at the
       SystemC-VHDL mixed language boundary.
     * Added support for SystemC signal arrays at SystemC-SystemVerilog and
       SystemC-VHDL mixed language boundaries.
     * Added support for sc_fixed types (sc_fix, sc_fixed_fast, sc_fixed,
       sc_fix_fast) at the SystemC-SystemVerilog mixed language boundary.
     * Added support for VHDL enums and records (including nested records) in
       scgenmod.
     * Added support for real/shortreal as field types for structures at the
       SystemC-SystemVerilog mixed language boundary.
     * Added  support  for  VHDL  constants  for  port connections at the
       VHDL-SystemC mixed language boundary (Specifically the case where a VHDL
       module instantiates a SystemC module).
     * Support for SystemVerilog include files specified with angled brackets
       has been implemented as in IEEE 1800-2005 section 23.3.
     * In  the  case of task and function prototypes, unnamed formals are
       supported.
     * Added a utility program to automatically generate SCV extensions for any
       given type.
       SCV extensions can now be automatically generated by invoking sccom with
       the -dumpscvext command line option on a .cpp file which defines a
       global variable for each type and includes the header file containing
       definitions of these types.
     * Source annotation is now supported for SystemC. A new compiler option
       -nodbgsym  has  been added to sccom to stop generating the symbols
       debugging database in the library.
     * The Call Stack GUI window feature is now supported in C Debug mode.
     * In SystemVerilog, 'extern' tasks and functions in interfaces are now
       supported.
     * SignalSpy  has  been  enhanced  to support SystemVerilog types and
       user-defined SystemC types. The following new types are now supported:
         1. SystemVerilog types:
               o All scalar and integer SV types (bit, logic, int, shortint,
                 longint, integer, byte, both signed and unsigned variations of
                 these types)
               o Real and Shortreal
               o User defined types (packed/unpacked structures including
                 nested structures, packed/unpacked unions, enums)
               o Arrays and Multi-D arrays of all supported types
         2. SystemC types:
               o Primitive C floating point types (double, float)
               o User defined types (structures including nested structures,
                 unions, enums)
       Cross-language type-checks and mappings have been implemented to support
       these types across all the possible language combinations:
         1. SystemC-SystemVerilog
         2. SystemC-SystemC
         3. SystemC-VHDL
         4. VHDL-SystemVerilog
         5. SystemVerilog-SystemVerilog
       In addition to referring to the complete signal, the user has also been
       provided the flexibility of referring to the signal by bit-selects,
       field-selects   or  part-selects  of  the  supported  types  (e.g.
       /top/myInst/my_record[2].my_field1[4].my_vector[8]).
     * The  XML  Import  utility  (xml2ucdb)  now  supports a -excelsheet
       <sheet-name≶  option  on  the command line. This option internally
       modifies  the extraction parameters (using pseudo-Xpath syntax) to
       selectively extract data from one of several worksheets in an Excel
       spreadsheet file.
     * The user can choose to display a SystemVerilog or SystemC enum as a
       number rather than string. This can be done by using the radix command's
       -enumnumeric  option.  The default radix controls the actual value
       displayed of the enum. In case the default radix is "ASCII", the value
       of a SystemVerilog or SystemC enum is still displayed as a string.
       Otherwise it is printed as a hex, decimal, octal, or binary number.
       The  -enumnumeric  option  of  radix  is  stored in a Tcl variable
       DefaultRadixFlags. Currently, we support only the enumnumeric option in
       DefaultRadixFlags, but we can easily extend this to support any other
       radix  flag. The user can set or reset these flags using the radix
       command.
       VSIM> radix hex hexadecimal
       VSIM> radix enumnumeric
       hexadecimal enumnumeric
       VSIM> radix binary
       binary enumnumeric
       VSIM> radix enumsymbolic
       binary
       The  examine command takes two more options: -radixenumnumeric and
       -radixenumsymbolic.  These  options override the global setting of
       default_radix.
       In the Wave, List and Watch windows, the user can change the radixenum
       property of an individual element.
     * SystemC control/observe enhanced to support the following:
          + Complex VHDL types like records (including nested records), arrays
            and enums.
          + SystemVerilog structures with fields of type real/shortreal.
          + part-selects  of  HDL  vector  types and field-selects of HDL
            user-defined    types   (VHDL   records   and   SystemVerilog
            structures/unions).
     * The SystemVerilog-VHDL mixed language boundary was enhanced to support
       the following VHDL types:
          + real & shortreal
          + enum
          + multi-dimentional arrays
          + records with fields of type integer, real, enum, multi-d arrays
          + nested records
          + unconstrained arrays
          + std_logic_vector/bit_vector connected to SystemVerilog packed
            structure
     * Enhanced SystemVerilog-VHDL mixed language boundary to support the
       following:
         1. SystemVerilog ports of type struct in array of instances (Specific
            case where a VHDL module is instantiated in a SystemVerilog array
            of instances).
         2. Negative indices for fields of SystemVerilog structures of type
            vector (e.g. bit [-31:0]data).
         3. Range checks and support for ranged VHDL types.
         4. Adding appropriate range to types in the generated VHDL packages.
     * Verilog type 'real' supported at Verilog-VHDL and Verilog-SystemC mixed
       language boundaries. This is appropriate only for the case where a
       Verilog module is instantiating VHDL or SystemC, and not vice versa.
     * Added support for Net types (wire <type>) at the SystemVerilog-VHDL
       mixed language boundary.
     * The extended step command now allows the following:
          + Step out of the current function or procedure and return to caller.
            step -out
          + For SystemVerilog Classes step in only when the "this" value is
            equal to specific handle. The handle value can be obtained using
            the examine -handle command.
            step -this "this==<class handle>"
          + Step in specific instance, process or thread.
            step -inst <full path name>
     * Setting Constructor and Destructor breakpoints on SystemC/C++ objects
       are now supported in C Debug. Please refer to User's Manual (Chapter 8)
       for details on usage flow.
     * We now support "extern interface" declarations.
     * Added support for structures with members of SystemC types across the
       SC/SV func call interface (DPI-SC).
     * The option -nocellnet was added to the vsim power add command. When this
       option is specified, vsim will not monitor any cell-net for toggling or
       any other power related activity.
     * The Auto-Library-Step-Out feature has been added in C Debug. It lets
       users automatically step out from the OSCI library functions. If users
       try  to  step  inside  the  OSCI  library  functions, C Debug will
       automatically step out to the last called user function. This feature
       can be turned off by executing the command cdbg allow_lib_step on.
     * C  Debug has added functionality to debug Active/Suspended SystemC
       threads. Users can now switch to any suspended SystemC thread, and view
       its contents like call stack, local variables, and source code. Users
       can debug suspended threads these cases:
         1. when simulation is running
         2. when  simulation  has  stopped  at  a breakpoint in an active
            SystemC/HDL thread
     * Added support for dotstar (.*) port connections at SystemVerilog-VHDL
       and SystemVerilog-SystemC mixed-language boundaries.
     * SystemVerilog $exit is now supported.
     * Add support for SystemVerilog anonymous program blocks.
     * Support  for  SystemVerilog  Signal  Aliasing  has been added. The
       specification for this feature is included in, IEEE 1800-2005 Section
       6.8.
     * Cursors within the Wave window can now be "linked" together. This allows
       moving one cursor and having other cursors within the window move by the
       same amount of time. Access to the functionality is done via a cursor's
       popup menu by using the new "Cursor Linking" menu.
     * The VPI object model support in this release still defaults to the
       superset of the 2005 Verilog and System Verilog standards. However, some
       VPI features that will be available in the 2008 standard have been
       introduced. Specifically, the 2008 standard identifies the five VPI
       object model revisions by the strings below.
VPI_COMPATIBILITY_VERSION_1364v1995
VPI_COMPATIBILITY_VERSION_1364v2001
VPI_COMPATIBILITY_VERSION_1364v2005
VPI_COMPATIBILITY_VERSION_1800v2005
VPI_COMPATIBILITY_VERSION_1800v2008
       and these strings are now recognized both on the command line and in
       modelsim.ini when setting the VPI version. The simulator also accepts
       the following synonyms:
VPI_COMPATIBILITY_VERSION_1364v1995 (1995, 95, 1364v1995, 1364V1995, VL1995)
VPI_COMPATIBILITY_VERSION_1364v2001 (2001, 01, 1364v2001, 1364V2001, VL2001)
VPI_COMPATIBILITY_VERSION_1364v2005 (1364v2005, 1364V2005, VL2005)
VPI_COMPATIBILITY_VERSION_1800v2005 (2005, 05, 1800v2005, 1800V2005, SV2005)
VPI_COMPATIBILITY_VERSION_1800v2008 (2008, 08, 1800v2008, 1800V2008, SV2008)
       Messages use these strings to identify versions, where applicable, too.
       Recognition of the user request does not imply full implementation at
       this time. Not all of these versions are fully supported.
     * The simulator is now integrated with Transaction Level Modeling (TLM)
       Library, Release 2.0 Draft 2 Kit of 29 Nov 2007.
     * Added the on and off sub-commands to the power command. The behavior is
       similar to vcd dumpon and vcd dumpoff. When power off is called for any
       signal then the toggling activity of that signal is ignored until power
       on is called.
     * Amapping for VHDL library floatfixlib has been added to modelsim.ini
     * The radix define command has been enhanced to accept an optional color
       in the enumeration map. The option -color <color-spec> may be added at
       the end of number pattern, label pair. This color is used for the wave
       form and text in the Wave window. The following example illustrates how
       to specify the color:
    radix define States {
        11'b00000000001 "IDLE" -color yellow,
        11'b00000000010 "CTRL" -color #ffee00,
        11'b00000000100 "WT_WD_1" -color orange,
        11'b00000001000 "WT_WD_2" -color orange,
        11'b00000010000 "WT_BLK_1",
        11'b00000100000 "WT_BLK_2",
        11'b00001000000 "WT_BLK_3",
        11'b00010000000 "WT_BLK_4",
        11'b00100000000 "WT_BLK_5",
        11'b01000000000 "RD_WD_1" -color green,
        11'b10000000000 "RD_WD_2" -color green,
        -default hex
        -defaultcolor white
    }
       If a pattern/label pair does not specify a color, the normal Wave window
       colors will be used. If the value of the wave form does not match any
       pattern, then the -default radix and -defaultcolor will be used.
       To specify a range of values, wildcards may be specified for bits or
       characters of the value. The wildcard character is '?', similar to the
       iteration character in a Verilog UDP, for example:
    radix define {
        6'b01??00 "Write" -color orange,
        6'b10??00 "Read" -color green
    }
       In  this example, the first pattern will match "010000", "010100",
       "011000", and "011100". In case of overlaps, the first matching pattern
       is used, going from top to bottom.
     * Support for generics of type std_logic_vector, bit_vector, std_logic,
       bit, vl_logic and vl_logic_vector has been added at the Verilog-VHDL
       mixed-language  boundary.  This  support is enabled by default for
       parameters declared in ANSI style. A command line option has been added
       in vlog to enable this support for other parameters (if ANSI style
       parameter declaration is missing).
     * Instantiation of optimized designs (i.e. "black boxes") now does NOT
       require that vopt be run on the design roots.
     * A new command has been added, write format restart. This command will
       create a single .do file that will recreate all Wave, List, Source
       windows, and all bp and signal (when) breakpoints.
       Also, there is a new modelsim.ini setting, ShutdownFile, which, if set,
       will call the write format restart command upon exit. This variable
       should  be set to the name of the file to be written, or the value
       "--disable-auto-save" to disable this feature. If the filename contains
       the pound sign character (#), then the filename will be sequenced with a
       number replacing the #. For example, if the file is "restart#.do", then
       the first time it will create the file "restart1.do" and the second time
       it will create "restart2.do", etc.
     * The SystemVerilog bind construct can now be used to bind to SystemC
       target scopes.
       There  exists  certain restrictions on actual expressions that are
       supported. If the target of bind is a SystemC module or an instance of a
       SystemC module, expressions and literals are not supported as actuals.
       These include, but are not limited to:
          + bitwise binary expressions using operators &, |, ~, ^ and ^~
          + concatenation expression
          + bit select and part select expressions
          + variable/constant
     * Enhanced scgenmod to support the following:
          + VHDL records with fields of type multi-dimensional arrays.
          + SystemVerilog structures with fields of type multi-dimensional
            arrays.
          + VHDL/SystemVerilog ports of type (multi-dimensional arrays). These
            will  get converted to SystemC signal arrays in the generated
            foreign module declaration.
     * The -ka switch has been added to vopt. Short for "keep alternate" this
       switch informs vopt that it should attempt to preserve an existing
       32-bit  version of an optimized design if compiling using a 64-bit
       version of vopt (and vice versa).
     * Macros with default parameters are now supported as per Mantis item
       1571.
     * Automatic variables are now supported within initial, always and final
       blocks in SystemVerilog code.
     * The following new options for the coverage exclude command have been
       added:
     * -pragma
       Pragma exclusions are defined as
          + 'coverage  off'  for  statements,  branches, expressions, and
            conditions
          + 'coverage fsm_off' for FSM
          + 'coverage toggle_ignore' for toggles
       Pragma exclusions can be enabled/disabled using the option. If the
       option is specified, both user and pragma exclusions are applied. If the
       option is not specified, pragma exclusions are not affected.
     * -if
       If  the  option  is specified, only the if parts of if-else branch
       exclusions are modified.

     Support for SystemVerilog Case...Inside. IEEE 1800-2005 Section 10.4 was
   added.

     Incremental compilation/linking support has been added for SystemC. A new
   command-line option, -incr, has been added in sccom to facilitate this
   support. Please refer to the User's Manual for more details.

     The bp command (file/line breakpoints) now accepts an optional label
   (-label). This label can be used with the bd (breakpoint delete), enablebp
   (enable breakpoint point), and disablebp (disable break point) commands. If
   a new breakpoint is created using a label already in use by an existing
   breakpoint, the older breakpoint is deleted. Labels used in both file and
   signal breakpoints must be unique. In other words, a file breakpoint cannot
   use the same label as a signal breakpoint.

     The "+" and "-" functions in the VHDL standard developers kit packages
   std_regpak and synth_regpak have been accelerated. The default is to use the
   accelerated versions.

     Added support for ports of SystemVerilog datatypes while binding to VHDL
   target scopes. The following SystemVerilog data-types are now supported:
     * integer data types (shortint, int, byte, bit, logic, reg, integer)
     * real and shortreal data types
     * enums (restricted to 2-state 32-bit base types only)
     * structures (packed, unpacked, including nested structures)
     * multi-d arrays (of all supported types)

   These data-types follow the same type-mapping rules as are followed at the
   SystemVerilog-VHDL mixed-language boundary for direct instantiation.
   Actual expressions are not supported yet for these types. Please refer to
   the User's Manual for more details.

     The Verilog assign and deassign procedural statements are supported for
   library cell optimization.

     Compiled SDF can now be annotated to Verilog and VHDL regions. This also
   applies to Verilog and VHDL regions that are underneath SystemC modules.
   However, compiled SDF cannot be targeted to a SystemC node directly (even if
   the intended annotation objects underneath the SystemC node are Verilog
   and/or VHDL).

     The UI registration calls (e.g. $ui_VVInstallInst()) used by verification
   packages  such  as AVM or OVM, can be controlled using the CLI command
   ui_VVMode or modelsim.ini file variable UI_VVMode. This mode control can
   disable this feature altogether, enable the context registration, or enable
   context registration and automatic logging. The corresponding mode values
   are "off", "nolog", and "full", respectively.

     A Virtual Signal Builder dialog box has been added. The dialog can be
   accessed from the Tools menu in the Wave window. Please refer to the User's
   Manual for more information.

     Added  [vopt]  section in modelsim.ini file. The ZeroIn modelsim.ini
   variable replaces VlogZeroIn/VcomZeroIn/VoptZeroIn/VsimZeroIn modelsim.ini
   variables.

     Now  for  CLI commands, the objects (signals, nets, etc) provided as
   arguments are also learned into OCF/ACC files.

     vlog  now contains a new switch -Epretty which is similar to -E, yet
   provides some formatting of the output.

     The 'size' method is now supported for associative arrays, and returns the
   number of elements, just as the 'num' method does.

     A new Processes window has been added with the following features:
     * Different view modes: active, design or in_region
     * design mode is intended for primary navigation of ESL designs
     * Recursive or non-recursive view in in_region mode
     * View processs state and type information
     * View processs execution order number in the active kernel queue
     * Filter process view based on states and types
     * Different sort modes for the processes
     * View process name with or without full context name
     * Get textual report of processes in the Processes window
     * Set a process in 'ready' state as next active process

   Please refer to Users Manual (Chapter 2) for more information.

     The coverage exclude -scope command is now accepting generate blocks.

     $clog2 is now allowed within a constant expression.

     The Wave window has a new feature called "Expanded Time" which allows
   expanding in the horizontal direction to see the details of value changes.
   In Expanded Time Deltas Mode, the user can see the delta cycle on which an
   event occurred. Previously, this type of detail was only available in the
   List window. In Expanded Time Events Mode, the user can see the exact order
   in which each event occurred within a simulation time step. (The event level
   details are now also available in the List window with the "-deltas events"
   option to the "configure list" command.) The detail of this feature are in
   the "Expanded Time in the Wave and List Windows" section of the "Waveform
   Analysis" chapter of the "User's Manual".

     Covergroups may now be linked to testplan sections via "backlinking". A
   comment string is added to the "option.comment" or "type_option.comment" of
   a covergroup, coverpoint, or cross with the following format: "tplanref=",
   using a testplan tag that exists in an imported testplan. When the design
   coverage is merged with the testplan (by "vcover merge"), the functional
   coverage item will be linked to the testplan section with a matching tag.

     Some nets (e.g. clock) in a design can have many readers. This can cause a
   dataflow display to draw numerous processes that you do not want to see when
   expanding the clock signal. Dataflow now tests for the number of readers to
   be drawn and compares them to a limit that you set in Dataflow Preferences
   (outputquerylimit). The default value of this limit is 100 (the test is not
   done if you set outputquerylimit to 0). If this limit is exceeded, a dialog
   box asks whether you want the readers to be drawn. Note that this test does
   not affect the number of drivers that are drawn.

     When assertions fire with failure messages, the assertion browser now
   displays the name and fail count in red, both during simulation and in
   post-simulation mode.

     The assertion browser gui now supports the display of assertion directives
   in hierarchical (tree) form along with the current flattened form. It can be
   enabled or disabled by selecting the menu pick "Display Options -> Hierarchy
   Mode"  that  can be found with the right mouse popup menu and the main
   assertion pulldown menu.

     FSM diagrams can now be viewed and debugged in the FSM window. You can see
   the current and previous states highlighted as the simulation is running.
   Previously, only state coverage was shown in the FSM window. Details on how
   to use this feature are described in the user's manual. Note that the usage
   and look and feel of this feature will be changed in upcoming releases.

     A new RSA key has been added for the `pragma protect directive in Verilog.
   The key_keyowner value for this key is "Mentor Graphics Corporation" and the
   key_keyname value is "MGC-VERIF-SIM-RSA-1". The previous RSA key is still
   supported.


