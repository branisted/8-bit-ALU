
                    Release Notes For ModelSim Altera 5.6
                                      
   
   
                                Mar 19 2002
   ______________________________________________________________________
   
     Product Installation and Licensing Information
   For brief instructions about product installation please visit the
   "install_notes" file on the Model Technology web site. The
   install_notes file can be viewed at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see
   the ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp
   
   
     Release Notes Archives
   For release notes of previous versions visit the release notes archive
   at: [3]http://www.model.com/support/default.asp
   or find them in the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes
   
   
     How to get Support
   
   This OEM product is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport
       
   
   ______________________________________________________________________
   
  Index to Release Notes
  
     [5]Key Information
   
     [6]User Interface Defects Repaired in 5.6
   
     [7]Verilog Defects Repaired in 5.6
   
     [8]PLI Defects Repaired in 5.6
   
     [9]VHDL Defects Repaired in 5.6
   
     [10]FLI Defects Repaired in 5.6
   
     [11]VITAL Defects Repaired in 5.6
   
     [12]Mixed Language Defects Repaired in 5.6
   
     [13]General Defects Repaired in 5.6
   
     [14]Mentor Graphics DRs Repaired in 5.6
   
     [15]Known Defects in 5.6
   
     [16]Product Changes to 5.6
   
     [17]New Features Added to 5.6
   ______________________________________________________________________
   
   Key Information
     * You must recompile or refresh your models if you are moving
       forward from 5.6 Betas or 5.5x or earlier release versions. See
       "Regenerating your Libraries" in the ModelSim Start Here Guide for
       more information on refreshing your models.
     * Acrobat reader version 4.0 or greater must be used to read any
       .pdf files contained in ModelSim versions 5.5c or greater.
     * Product changes and new features mentioned here are introduced in
       the 5.6 release. If you are migrating to 5.6 release from 5.4 and
       earlier releases, please also consult version 5.5x release notes
       for product changes and new features introduced during the 5.5 and
       patch releases.
       The previous version release notes can be found in your modeltech
       installation at docs/rlsnotes.
     * Please note that the hp700 platform executable is now built on
       HP-UX 11.0. If you want to use ModelSim in an HP-UX 10.20
       environment, you must use the hp700_1020 platform executable.
     * On Windows platforms only, if the user attempts to link in
       libvsim.lib or tcl83.lib or tk83.lib using the Microsoft Visual
       C++ linker version 5.0, the operation will fail with a message
       similar to:
       Invalid file or disk full: cannot seek to 0xaa77b00
       The user should use Microsoft Visual C++ version 6.0.
     * The following lists the supported platforms:
          + win32aloem - Windows 98, Me, NT, 2000, XP
          + sunos5aloem - Solaris 2.6, 7, 8
          + hp700aloem - HP-UX 11
   ______________________________________________________________________
   
   User Interface Defects Repaired in 5.6
     * The change command did not correctly modify a bit or slice of a
       Verilog register. The command now correctly supports bits and
       slices of registers denoted with either parentheses or square
       brackets.
     * The examine command reported the entire contents of a Verilog
       register when only a bit or slice of the register was specified.
       The command now correctly supports bits and slices of registers
       denoted with either parentheses or square brackets.
     * The Wave Window cursor time values were incorrect when the
       UserTimeUnits and resolution time units did not match.
     * Changing the PrefSource(tabs) value did not update the Source
       window properly. Some minor enhancements have also been made. You
       can now specify spacing in various units. For example 10c
       translates to every 10 cm, or a list of values may be specified
       which will set a tab stop at each location. Valid unit values are:
    c, cm          : centimeters
    m, mm          : millimeters
    i, in, "       : inches
    p              : points
    u              : pixels (screen units)
    char, chars    : characters
       Also, the Transcript window uses the PrefSource(tabs) value for
       setting tab stops.
     * The examine command failed when used with wildcards and any of the
       following portmode switches: -in, -out, -inout, -internal or
       -ports.
     * Verilog 1-bit vectors incorrectly appeared to be scalars in the
       various GUI windows.
     * The bookmark command was inadvertently ommitted from the list of
       commands supported by the PE product.
   ______________________________________________________________________
   
   Verilog Defects Repaired in 5.6
     * The change command on a Verilog memory did not propagate its
       values until the next event on the memory.
     * The simulator crashed following a warm restore in some Verilog
       designs.
     * Verilog Cells with delay nets did not optimize when compiled with
       the switches -fast and +notimingchecks.
     * A Verilog parameter used as a range bound sometimes was not
       evaluated correctly.
     * The vlog compiler terminated with a segmentation violation when
       given large numbers of options.
     * The vlog compiler did not generate an error when the right-hand
       side of a defparam statement was not a constant.
     * Arrays of instances were not supported by the -fast compiler
       option.
     * The == operator was pessimistic when the operands contained X and
       when the comparison was the condition in a ternary operator.
       Specifically, if the operands were vectors and contained X in some
       of the bits, then the result was X even if the non-X bits in the
       operands determined that the result should be 0.
     * The Verilog 2001 Extended VCD was not fully supported. The concept
       of strength ranges has been added.
     * The +opt option crashed the compiler in some designs containing
       UDPs.
     * The calculation of delay net delays was incorrect when a module
       contained both negative setup/recovery limits and negative
       hold/removal limits.
     * The Verilog compiler did not produce an error message when
       processing a numeric (unsized) decimal literal that required more
       than 32 bits of storage, but instead truncated the value to 32
       bits. The compiler has been modified to produce an error when
       truncation to 32 bits would affect the value of a numeric literal.
     * Primitive output terminals were not connected properly when the
       vsim switch -v2k_int_delays was used. This caused acc_next_driver
       to overlook primitive drivers on a net.
     * $dumpport only allowed the filename argument to be a literal
       string. The verilog IEEE specification allows a literal string,
       variable, or an expression.
   ______________________________________________________________________
   
   PLI Defects Repaired in 5.6
     * The PLI function acc_fetch_name returned "#AnonymousPort#" rather
       than the appropriate name for ports having a fulltype of
       accBitSelectPort or accPartSelectPort.
     * The acc_handle_hiconn function failed to return a handle for the
       corresponding scalar connection if the connection was a member of
       a concatenation.
     * Cold and warm restore now work with designs that contain PLI code.
       A list of all PLI shared libraries loaded with the design is saved
       during a checkpoint and used during a restore. This means that the
       -pli option, the Veriuser entry in the modelsim.ini file, and the
       PLIOBJS environment variable are ignored during a restore. All VCL
       callbacks are removed during a restore and so must be re-added.
       Note that for a cold restore, the misctf function is called with
       reason_endofcompile when reloading is complete. Any data that has
       been saved into the simulator via the functions tf_setworkarea(),
       tf_setroutine(), or tf_settflist() must be re-saved after a
       restore because the old pointers may no longer be valid.
     * Setting values on different register bits with inertial or
       transport delay caused events to be cancelled for other bits of
       the register. The following functions were affected:
          + acc_set_value()
          + tf_strdelputp()
          + tf_strlongdelputp()
          + tf_strrealdelputp()
          + vpi_put_value()
     * The VPI cbNextSimTime callback always occurred with a delay of one
       unit when it should have occurred at the next simulation time
       which had an event scheduled.
     * The tf_exprinfo function failed to set the expr_lhs_select and
       expr_rhs_select fields.
     * The acc_fetch_value function did not accept a primitive handle for
       the object_handle argument. Primitives and UDPs are now accepted
       and the current primitive output value is retrieved.
     * The behavior when setting a value with inertial or transport delay
       via either acc_set_value() or vpi_put_value() has been modified so
       that only similar objects are compared when determining if any
       events should be cancelled. Similar objects are defined as
       follows:
          + a full register is compared to a full register
          + a part-selected register is compared to the same part-select
          + a bit of a register is compared to the same bit
       Previously the entire register was compared even if only one bit
       was being set.
     * Using vpi_handle() to get a handle to the vpiParent of a
       vpiMemoryWord argument to a system task/function caused a crash.
   ______________________________________________________________________
   
   VHDL Defects Repaired in 5.6
     * Incorrect code was generated if an enum type contained more than
       256 items and a signal was declared as an array of this enum type.
       The compiler incorrectly assumed that the size of each element was
       a single byte.
     * Declaring an entity with a name greater than 1000 characters
       crashed the compiler. An error is now issued if the design unit
       name is too long.
     * A selected name for an entity was not allowed in an architecture
       declaration.
     * If the label specified in a block configuration had an index
       expression on it, no error was generated if the target of the
       block configuration did not allow for indexing. An error is now
       generated if the label does not reference a FOR generate
       statement.
     * Selected signal assignments failed to check if the choices were
       locally static.
     * vcom did not adequately check the expression to a type conversion.
       As a result, allocators and named element associations were
       allowed. Checks for these cases have been added and are now
       flagged as errors.
     * Objects declared in the entity declaration list could have
       attributes assigned to them in the wrong scope. This error is now
       reported.
     * The attribute 'base could be used as an expression other than a
       prefix to another attribute. This error is now reported.
     * Ports or parameters used in a while condition did not have their
       modes checked correctly.
     * A type or subtype name was allowed to be used incorrectly as an
       operand to an expression. This error is now reported.
     * Type conversion could be incorrectly used as the prefix for a
       selected name, index expression, slice expression, or attribute.
       This is now reported as an error.
     * Range checks on generics were done only if the values were locally
       static.
     * SDF backannotation failed in cases where SDF identifiers contained
       escaped characters but did not have leading and trailing
       backslashes. The SDF annotator no longer requires the leading and
       trailing backslashes to match a VHDL extended identifier; they are
       now optional.
     * Bad code was generated for a configuration if the configuration
       referred to an architecture that defined a record type and a
       subprogram that used the record type. On some platforms the bad
       code caused an infinite loop. On other platforms, the bad code was
       ignored.
     * The simulator sometimes crashed when a binding indication in a
       configuration referenced an array signal in the entity or
       architecture.
     * The compiler and simulator did not compare lengths of
       multi-dimension arrays in higher dimensions of port associations
       and signal assignments. Now, when arrays with locally static types
       are assigned, mismatched lengths in higher dimensions are
       identified by the compiler and errors are reported. For arrays
       that do not have locally static types, length checks are deferred
       until runtime.
     * vsim was unable to load VHDL packages whose names were extended
       identifiers.
     * On Windows platforms, the UnbufferedOutput switch, set from the
       modelsim.ini file, had no effect. The switch worked correctly on
       Unix and Linux platforms. ModelSim now produces unbuffered output
       for Windows platforms.
     * The accelerated version of the Mem_Dump procedure in the
       std_developerskit mempak package only dumped the memory contents
       in multiples of 16. Therefore, the Mem_Dump output was missing
       information when the range of addresses provided was not 16 or a
       multiple of 16. The non-accelerated Mem_Dump did not have this
       limitation.
     * vcom's write operations did not have proper error checks or
       reports. Under certain circumstances, write failures during
       compilation were not detected. This could result in unnecessary
       simulation elaborations, runtime errors, or crashes.
     * vsim was unable to load VHDL packages whose names were extended
       identifiers.
   ______________________________________________________________________
   
   FLI Defects Repaired in 5.6
     * For the functions mti_GetNextEventTime() and
       mti_GetNextNextEventTime(), when the returned status is 2 and
       there are no pending future events, then the time returned in the
       next_time parameter is the current time (instead of the maximum
       simulation time). This is the same behavior seen when the returned
       status is 0.
     * mti_FindVar() can now find shared variables and constants declared
       in a package.
     * mti_CreateDriver no longer allows a driver to be created on a VHDL
       port which has not been collapsed with the connected signal. This
       limitation occurs if a VHDL port is connected to a Verilog signal,
       if a conversion function appears in a VHDL port map, or if the
       -nocollapse option is used on the vsim command line.
     * mti_CreateDriver() was changed to emit an error if an attempt was
       made to create a driver on a subelement of a resolved composite
       signal. Drivers must be created at the resolution level or above.
     * Calling mti_PrintMessage() with an empty string caused a crash on
       the 64-bit HP.
   ______________________________________________________________________
   
   VITAL Defects Repaired in 5.6
     * SDF delay values were not derived properly when extending an SDF
       delay list (delval_list) to match a target VitalDelayType*
       generic. This would occur if the target was VitalDelayType01ZX or
       if null placeholders were present in the delval_list.
   ______________________________________________________________________
   
   Mixed Language Defects Repaired in 5.6
     * Under rare cases, a Verilog inout port that drives a VHDL signal
       could "lose" continuous assignment or primitive output update.
       This resulted in an incorrect value being computed on the port.
   ______________________________________________________________________
   
   General Defects Repaired in 5.6
     * A waveform comparison of VHDL records produced a crash.
     * The tb command caused a crash if the path of the source file
       exceeded 128 characters.
     * A message is now printed when an SDF file is successfully applied.
       The message is:
       SDF Backannotation Successfully Completed.
     * The vcd2wlf utility now supports collapsed nets and very wide
       ports.
     * Added error checks and reports for compiler (vcom, vlog) write
       operations. Under the right circumstances, write failures during
       compilation were not detected. This resulted in unexplainable
       simulation elaboration or runtime errors, or crashes.
     * Force -cancel applied to a Verilog register crashed the simulator
       when the force was cancelled.
     * Entering the command vsim -vcdstim on a VCD file that was created
       without using vcd dumpports sometimes crashed the simulator at
       load time.
     * Licenses locked to dongles became intermittently unavailable. This
       problem occurred when a machine with a nodelock license has not
       had input from the keyboard or mouse for at least one hour. The
       following error message indicated the problem:
       # ** Error: VSIM license lost; attempting to re-establish.
       This problem is partial fixed in that it is pervented from failing
       more than 90 percent of the time.
   ______________________________________________________________________
   
   Mentor Graphics DRs Repaired in 5.6
     * DR 314485 - In some cases, ports that were VHDL multidimensional
       arrays caused a crash when viewing the resulting WLF file.
     * DR 305165 - Enumeration types which were not logic types, for
       example strings, displayed incorrect colors for strings containing
       'X', 'U' or 'Z'.
     * DR 124650 - Need command to select and trace a signal in Dataflow
       window
     * DR 128472 - PLI Interface needs to support c++ objects
     * DR 131327 - Dataflow window for Verilog does not work
     * DR 148310 - Dataflow window doesn't show all drivers of specified
       signal
     * DR 317055 - Crashing with bad pointer access
     * DR 291571 - Need functionality to back trace an X value
     * DR 299409 - ModelSim crashes when vlog source includes Japanese
       characters as comments
     * DR 301072 - No way to remove files from project
     * DR 302337 - Compiler doesn't work with wildcard (*) on Win2000 and
       NT.
     * DR 305013 - mti-enc and mti-enc2 files causing license failure
       message with longterm license
     * DR 305485 - Variable declared in procedure is not visible in Wave
       window
     * DR 308083 - -pli option stored in the PrefVsim(addOns) isn't
       loaded on cold restore
     * DR 309565 - Loading a design cannot be stopped. Break button
       wanted.
     * DR 310273 - incorrect syntax when I want to change a bus value
       from the Variables window.
     * DR 310776 - "Specify a Generic" Box has "Generic Name" twice
       instead of "Value"
     * DR 311109 - Source window flickers while editing a file.
     * DR 312326 - VCD Files with bus signals crash vcd2wlf.
     * DR 312632 - Selecting an event name in the Signals window causes
       crash.
     * DR 313685 - vsim crash for enumerated type with more than 256
       atoms
     * DR 313952 - vcd2wlf core dump when missing $scope
     * DR 314668 - Even with the -extend_tcheck_data_limit set, ModelSim
       still zeroes out three set
     * DR 304147 - Change and examine do not work for bits of verilog reg
       vectors.
     * DR 314615 - ModelSim will not accept an environment variable as
       the design name
     * DR 314764 - Verilog results differ between 5.4e and later releases
     * DR 312632 - Selecting an event name in the Signals window causes
       crash
     * DR 300277 - Modelsim crashes if `Restart' is issued during a Wave
       window redraw
     * DR 317157 - VHDL compile is failing with the message: ERROR:
       Unexpected Signal: 11
     * DR 317689 - Verilog dumpports command can only use literals for
       args
   ______________________________________________________________________
   
   Known Defects in 5.6
     * SDF files greater than 2GB cannot be read in on the RS6000
       platform.
     * When using the -nocollapse switch with the +multisource_int_delays
       switch in a VHDL/Vital design, SDF interconnect annotations may be
       missed.
   ______________________________________________________________________
   
   Product Changes to 5.6
     * ModelSim commands will now treat square brackets in names only as
       an index or slice of an array. Previous releases attempted to
       determine the intent of the square brackets which left some
       ambiguity. Therefore, with one exception, the use of square
       brackets for wildcarding (character class globbing) is no longer
       supported. The exception to this is the ModelSim find command,
       which assumes square brackets are only for wildcarding. Thus,
       commands like add wave, drivers, examine, and force will assume
       square brackets are specifying an index or slice and the only
       wildcard characters that will be recognized are "*" and "?". A
       user can combine the find command with other commands to get the
       same basic functionality as before. The example below:
   eval examine [find signals {sig[1-9]}]
   eval examine [find signals {sig[123456789]}]
       will examine any signal with the name sig1 thru sig9. This change
       will affect any ModelSim command that specifies a name. Please
       refer to the documentation of the specific command in the ModelSim
       Command Reference Manual for more information.
     * The IEEE 1364-2001 versions of acc_user.h and veriuser.h are now
       shipped with ModelSim. The major differences between the new
       versions and the old versions are:
          + Types such as int, short, char, etc. are now typedef'd to PLI
            type names such as PLI_INT32.
          + There are export and import defines to aid compilation on
            different platforms.
          + The following functions in veriuser.h previously returned
            void, but now they return a value:
               o tf_add_long()
               o tf_asynchoff(), tf_iasynchoff()
               o tf_asynchon(), tf_iasynchon()
               o tf_clearalldelays(), tf_iclearalldelays()
               o tf_dofinish()
               o tf_dostop()
               o tf_error()
               o tf_evaluatep(), tf_ievaluatep()
               o tf_message()
               o tf_propagatep(), tf_ipropagate()
               o tf_putlongp(), tf_iputlongp()
               o tf_putp(), tf_iputp()
               o tf_putrealp(), tf_iputrealp()
               o tf_rosynchronize(), tf_irosynchronize()
               o tf_setworkarea(), tf_isetworkarea()
               o tf_subtract_long()
               o tf_synchronize(), tf_isynchronize()
               o tf_text()
               o tf_warning()
     * More functionality has been implemented in the Verilog VPI. For
       details on what is currently implemented in the VPI, please refer
       to the file .../modeltech/docs/technotes/Verilog_VPI.note.
     * The procedure init_signal_spy and task $init_signal_spy now
       support the mirroring of bits of objects.
     * The exit codes for ModelSim have been standardized and are now
       documented in the ModelSim messages appendix of the User's Manual.
     * A viewer license is now required to run ModelSim SE with the GUI
       enabled. ModelSim EE is now called ModelSim SE batch. ModelSim PE
       will not be affected by this licensing change. For more
       information about the ModelSim 5.6 GUI licensing changes please
       see the mti web site at:
       [18]http://www.model.com/products/license_request.asp
     * The version of Tcl/Tk used in ModelSim has been upgraded to
       version 8.3.4. Other extensions have been changed as well. Below
       is a list of the Tcl extension changes in 5.6:
          + Tix has been removed from ModelSim for performance and
            maintenance reasons.
          + The following extensions and versions are used in ModelSim:
               o IncrTcl and IncrTk version 3.2
               o Iwidgets 3.0.1
               o Img 1.2.4
               o TclXml 2.0
               o Supertext 1.0 (modified/enhanced)
   ______________________________________________________________________
   
   New Features Added to 5.6
   Below is a summary of new ModelSim 5.6 features.
   Performance:
     * Additional Verilog RTL Performance
     * Additional VHDL RTL Performance
     * Additional Verilog Gate Performance
     * Elaboration
          + Ability to create separate elaboration file that can be
            reloaded multiple times
       
   User Interface:
     * Expanded Dataflow Window
          + Ability to view or trace multiple levels of hierarchy in
            single dataflow view
     * Embedded Waveform
          + Wave window added to new Dataflow window
     * Code Templates
          + Create VHDL and Verilog code with templates added to the
            Source window
       
   Usability:
     * Updated Project Manager
          + Improved functionality and Usage Model
     * Signal Spy
          + Additional functionality to drive, force or release signals
            with new Signal Spy Procedures/Tasks
     * Waveform export
          + Ability to export currently open dataset, usually to view
            with a separate Wave window while current simulation
            continues
       
   Standards:
     * IEEE Verilog 1364-2001
          + Additional language support, including Multi-dimensional
            arrays
     * VITAL2000 Support
          + Vital 2000 upgrades to the vital timing package, and support
            of multisource interconnect delay
       
     * Virtual Types in the ModelSim GUI now have a mapping feature so
       that all possible enumerations of the type are not required.
       You can now specify a default enumeration string, and enumeration
       strings for specific values, in addition to positional
       enumerations. This feature allows easy implementation of
       user-defined enumerations for one-hot state machine encodings.
       For example:
       virtual type {{'h1 ST0}{'h2 ST1}{'h4 ST2}{'h8 ST3}{'h10
       ST4}{default BAD}} mystates
       defines a set of enumerations for a five-bit one-hot encoding. To
       see the state names in the display instead of the raw binary,
       define a virtual signal that is a type conversion of the original
       bus to the "mystates" virtual type:
       virtual signal {(mystates) my5bitstate} myNames
       Adding signal "myNames" to the Wave or List window will give you
       the names you want for the states of the original signal
       "my5bitstate".
       This works for either VHDL or Verilog. The virtual type command
       accepts based-constants in either VHDL or Verilog format, and
       C-language format as well. For example, all of the following are
       acceptable and equivalent:
       virtual type {{1 ST0}{2 ST1}{4 ST2}{8 ST3}{16 ST4}{default BAD}}
       mystates
       virtual type {{'b00001 ST0}{'b00010 ST1}{'b00100 ST2}{'b01000
       ST3}{'b10000 ST4}{default BAD}} mystates
       virtual type {{2#00001# ST0}{2#00010# ST1}{2#00100# ST2}{2#01000#
       ST3}{2#10000# ST4}{default BAD}} mystates
       virtual type {{'h1 ST0}{'h2 ST1}{'h4 ST2}{'h8 ST3}{'h10
       ST4}{default BAD}} mystates
       virtual type {{0x1 ST0}{0x2 ST1}{0x4 ST2}{0x8 ST3}{0x10
       ST4}{default BAD}} mystates
       You can also mix positional enumerations with mapped enumerations,
       as for example:
       virtual type {BAD ST0 ST1 {0x4 ST2}{0x8 ST3}{0x10 ST4}{default
       BAD}} mystates
     * FLI C++ shared libraries are now officially supported. There is a
       new section in the Foreign Language Interface manual that
       describes how to compile C++ shared libraries that can be loaded
       into ModelSim.
       NOTE: On HP platforms, if you get the following error, you are
       running an 11.0 executable on a 10.20 machine:
       /usr/lib/dld.sl: Can't find path for shared library: libc.2
       /usr/lib/dld.sl: No such file or directory
       IOT trap
     * PLI/VPI C++ shared libraries are now officially supported. There
       is a new section in the Verilog chapter of the User's Manual that
       describes how to compile C++ shared libraries that can be loaded
       into ModelSim.
       NOTE: On HP platforms, if you get the following error, you are
       running an 11.0 executable on a 10.20 machine:
       /usr/lib/dld.sl: Can't find path for shared library: libc.2
       /usr/lib/dld.sl: No such file or directory
       IOT trap
     * The new ability to save an elaboration image of a design uses vsim
       checkpoint technology to create a loadable image (elaboration
       file) which can be simulated repeatedly. It is currently
       implemented using two new command line switches to vsim. The
       switch -elab, loads the design and creates an elaboration file.
       The -load_elab switch causes vsim to load an elaboration file for
       simulation.
       The elaboration file contains a trace of PLI calls that occur
       prior to capture of the elaboration checkpoint file. The PLI
       activity is played back after the PLI shared objects are loaded
       with the elaboration file to put the PLI code modules in their
       post-elaboration state.
       By default, elaboration file creation and loading does not use
       compression. To enable compression use the -compress_elab flag
       with both -elab and -load_elab.
       
      Creating an elaboration:
       To get the maximum benefit from an elaboration, elaboration files
       should be created to contain all timing data (backannotated SDF
       files). Application of stimulus should be deferred until after
       elaboration. All normal vsim command line arguments should be
       applied with the elaboration. These command line arguments are
       then selectively modified using command line arguments at
       elaboration loading. Use of $sdf_annotate causes timing to be
       applied after elaboration.
       
      New switches and usage:
          + -elab filename : create elaboration file for use with
            -load_elab
          + -elab_cont filename : create elaboration file for use with
            -load_elab and allows the simulation to proceed after
            elaboration file creation
          + -load_elab filename : simulate an elaboration created with
            -elab
          + -compress_elab : cause compression of elaboration files
          + -filemap_elab HDLfilename=NEWfilename : define a mapping used
            during -load_elab.
       The following mechanisms are provided to allow user modification
       of stimulus for each run.
         1. Command line specification of +args which are readable by the
            PLI routine mc_scan_plusargs(). Note +args values specified
            with -elab are superseded by +args values specified with
            -load_elab.
         2. Use of the change command to modify parameters or generic
            values. Note that use of this mechanism only affects values
            and does not have any effect on triggers, compiler
            directives, or generate statements which reference either a
            generic or a parameter.
         3. Use of the -filemap_elab command line argument allows a
            mapping to be established between files named in the
            elaboration file. File mappings affect vpi_mcd_open(),
            $readmem, $fopen and textio operators. Note: Mapping occurs
            before environment variable expansion and cannot be used to
            redirect stdin/stdout..
         4. VCD stimulus file arguments can be specified on the
            -load_elab command line. Both -vcdread and -vcdstim are
            supported. Note: VCD stimulus files passed in with -elab are
            not loaded until elaboration. Specifying a different filename
            with -load_elab supersedes the stimulus file specified with
            -elab.
       
      Simulating an elaboration
       The following command line arguments can be specified with
       -load_elab and have the effect of superseding those specified at
       elaboration creation.
          + -c or -i : overrides the display mode used at elaboration
            creation.
          + -filemap_elab : defines mapping to stimulus files.
          + -compress_elab : selects compression mode.
          + -vcdread or -vcdstim : specifies a vcd file to be used to
            stimulate the top level design unit.
          + -do : specifies commands to be executed.
          + +args : specifies plus args for use with mc_scan_plusargs().
     * The Zoom / Mouse button operations have changed in the Wave
       window. The zoom operations in the Wave window now match the
       Dataflow window. Middle Mouse Button ( [BUTTON] ) now provides 3
       zoom options:
    Down-Right:  Zoom Area (In)
    Up-Right:  Zoom Out
    Down-Left: Zoom Fit
       The Left Mouse Button ( [BUTTON] ) drags the closest cursor (as it
       did before). The zoom amount is displayed at the mouse cursor. A
       zoom operation must be more than 10 pixels to activate. The action
       Up-Left is currently undefined, and no action will be taken.
     * The view command has been changed to accept implicit wildcards or
       shortened window names. Abbreviations for windows can be used
       instead of typing the full window name. If an abbreviation matches
       multiple window names, then all matches will be viewed.
    view si dat pr  ;# Will open the Signals, Dataflow, and Process windows

    view s ;#  Will open the Signals and Source window

    view * ;#  Will still open all windows
     * A new attribute function has been added to Virtual Expressions.
       The 'hasX attribute returns a boolean if the signal, net, or
       register contains an X (unknown) value. For example:
       searchlog -expr {dbus'hasX} {0 ns} dbus
       This example is equivalent to the expression:
       {dbus(0) == 'x' || dbus(1) == 'x'} etc.
       It is now possible to search for X values without having to write
       a type-specific literal.
     * Generics and shared variables can now be examined without
       specifying a process context. The Signal window will display
       generics and shared variables declared in the context selected.
       Selecting a package in the Structure window will display all
       shared variables declared within that package. For compatibility,
       generics and shared variables can still be accessed from within a
       process context.
     * The following procedures or tasks (related to init_signal_spy)
       were added:
       VHDL Procedures
       init_signal_driver
       signal_force
       signal_release
       Verilog System Tasks
       $init_signal_driver
       $signal_force
       $signal_release
       These procedures and tasks allow the user to drive, force, or
       release signals anywhere in the hierarchy from an architecture or
       module regardless of which language comprises the hierarchy.
       Please refer to the ModelSim User's Manual for detailed
       descriptions of these procedures and tasks.
     * Over 500 messages in ModelSim have been converted to a new message
       format. The new format is:
       ** Severity: ([Tool-[Group-]]MsgNum) FormattedMsg
       To get more information about a particular message, you can use
       the new verror tool.
       For example, verror 3000 will display detailed information about
       message number 3000.
     * When the message "Defparam iteration limit of 10 exceeded." is
       generated, vsim will now go through a few more defparam assignment
       iterations and print a list of parameters being assigned so that
       you can trace the defparam chain to figure out the root of the
       problem.
     * There is a new command that identifies the number of optimized
       (-fast) cells in a loaded design. The command is write
       cell_report. Its usage is shown below:
       write cell_report [-nonopt] [-filter number] [filename]
       where:
   -nonopt            Report only nonoptimized instances
   -filter number     Don't report cells with instance counts less than number
   filename           Write output to a file instead of the transcript
     * ModelSim now allows the user to interrupt elaboration.
     * A new function, mti_ScheduleWakeup64(), has been added to the FLI
       to allow scheduling of processes with 64-bit delay values.
     * The waveform portion of the Wave window can also be used as a drop
       target. Prior to this release it was only possible to drop items
       into the name or value columns of the Wave window.
     * Support for extended VCD (dumpports system tasks) and for the vsim
       switch -vcdstim (using an extended VCD file as stimulus to a
       design) has been added to the PE version of ModelSim. Previously,
       these features were available only in the SE version.
     * A new function, mti_ScheduleDriver64(), has been added to the FLI
       to allow scheduling of driver transactions with a 64-bit delay.
     * The user can now suppress simulation messages like "Simulation
       stop requested" by setting the variable PrefMain(noRunMsg) to a
       value 1 in the tcl startup file or in the vsim command line. For
       example,
       set PrefMain(noRunMsg) 1
     * Dataset Snapshot is a new feature which allows you to save data
       from the current WLF file (vsim.wlf by default) at a specified
       interval. This lets you take sequential or cumulative "snapshots"
       of your simulation data. See the User's Manual and Command
       Reference for further details.
     * Implemented Verilog multi-dimensional arrays per IEEE 1364-2001
       standard. This includes support for reg, integer, time, real,
       realtime, and net arrays.
     * ModelSim version 5.6 fully supports the new Vital 2000 standard
       (IEEE P1076.4, 2000). This includes upgrades to the vital_timing
       package, support of the new vital_memory package, and support of
       true multisource interconnect delays. In order to be backwards
       compatible with Vital 1995 current usage, the Vital 1995 packages
       are still compiled into the ModelSim IEEE library, and the Vital
       2000 packages are compiled into another library called
       "vital2000". This requires you to add library and use statements
       in your VHDL source code for the vital2000 library. Vital 2000 is
       supported with the same degree of acceleration as Vital 1995. True
       multisource interconnect delays support means that for VHDL and
       Vital an SDF file can annotate more than one interconnect delay to
       a given input, for additional drivers on a tristate bus, and
       during simulation the actual delay corresponding to the active
       driver will be used. Although multisource interconnect delays is
       part of the Vital 2000 spec, the implementation also supports this
       for earlier versions of Vital. The vsim command line option
       +multisource_int_delays enables multisource interconnect delays
       (this is the same option used to enable Verilog multisource
       interconnect delays).
     * Added Verilog parameter value assignment by name (1364-2001
       Section 12.2.2.2).
     * ModelSim now supports direct printing from the Source window. This
       feature is for Windows only.
     * A new tool called wlfrecover checks and attempts to repair 5.6 and
       later WLF files which were rendered unreadable due to an
       abnormally terminated simulation session. This includes a
       simulation crash or a WLF file being copied before the end of a
       simulation session.
     * Windows platforms now support WLF files greater than 2GB in size.
       In a FAT32 file system, the maximum is 4GB.
     * Added support for environment variables in design unit names on
       the vsim command line.
     * Mixed language multisource SDF interconnect delays are now
       supported.
     * There is a new function in the FLI, mti_GetProcessRegion(), which
       will return a handle to the region containing the specified
       process.
     * WLF file loading may be interrupted with the 'break' button. The
       WLF file loading progress is reported.


