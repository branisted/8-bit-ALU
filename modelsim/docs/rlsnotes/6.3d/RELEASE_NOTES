
                   Release Notes For ModelSim Altera 6.3d


                                Nov 26 2007

               Copyright 1991-2007 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
   Corporation. The original recipient of this document may duplicate this
  document in whole or in part for internal business purposes only, provided
  that this entire notice appears in all copies. In duplicating any part of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.

   TRADEMARKS: The trademarks, logos and service marks ("Marks") used herein
    are the property of Mentor Graphics Corporation or other third parties.
   No one is permitted to use these Marks without the prior written consent
    of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as a
     source of a product, but is intended to indicate a product from, or
  associated with, a particular third party. The following are trademarks of
   of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.

   End-User License Agreement: You can print a copy of the End-User License
         Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.3d

     [7]Verilog Defects Repaired in 6.3d

     [8]PLI Defects Repaired in 6.3d

     [9]VHDL Defects Repaired in 6.3d

     [10]FLI Defects Repaired in 6.3d

     [11]VITAL Defects Repaired in 6.3d

     [12]SystemC Defects Repaired in 6.3d

     [13]Assertion Defects Repaired in 6.3d

     [14]Mixed Language Defects Repaired in 6.3d

     [15]Coverage Defects Repaired in 6.3d

     [16]General Defects Repaired in 6.3d

     [17]Mentor Graphics DRs Repaired in 6.3d

     [18]Known Defects in 6.3d

     [19]Product Changes to 6.3d

     [20]New Features Added to 6.3d
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + linuxaloem - RedHat 7.2 and higher.
   ______________________________________________________________________

   User Interface Defects Repaired in 6.3d
     * Wave format Analog Custom dialog comes out empty.
     * C/C++ source files containing both the // and /**/ comment delimiters
       can cause the Source window to hang. An example would be //*****//.
     * When a divider was added to the Wave window via the "new divider" dialog
       box, an error would occur when attempting to copy or cut and then paste
       the divider.
     * Selection in the Coverage Instance window is lost after certain commands
       or operations are executed, causing the user to have to re-navigate to
       the desired location.
     * vopt would run during a restart command if vopt options were specified
       with double quotes when running the vsim command using -voptargs from
       inside the user interface. For example, -voptargs="+acc".
     * Some signals in WLF files were loosing transitions when viewed optimized
       and scaled out (i.e. view all). The display is correct if viewed with
       -wlfnooptimize. The incorrect WLF files can be corrected using wlfman
       from the fixed version, with the 'filter' option.
     * Slices of an array in an interface cannot be displayed in Wave window.
     * Source annotation did not work when source files were compiled together
       on one command line in certain cases.
     * Source annotation was not displayed for some optimized designs.
     * Double-clicking on a signal name in the Source window produced a TCL
       error.
     *
          + Wave Search Signal (search for signal value) in Wave window was not
            working if the signal is declared as an integer and vsim uses radix
            unsigned. The signal value over 9 (more than one digit) will not be
            found.
          + Frequency value printed in Wave window was incorrect if vsim has
            the resolution with 10 or 100(ps, ns, fs). It was working fine if
            the resolution is 1 (ps, ns, fs).
     * The tb command sometimes reported the wrong subprogram name in VHDL
       designs.
     * Various windows will not return to the previous user specified sort
       order when restarted or re-invoked.
     * If a Source window is expanded in the MDI to fit the complete GUI window
       and there are multiple source tabs within the MDI, or any other tabs,
       i.e, Wave, Dataflow etc, then when the window is closed via the "x"
       button, the remaining MDI windows are unexpanded and returned to normal
       mode. The expectation is that the window would stay in the expanded view
       and one of the other tabs selected. This has been fixed to behave as
       expected. Only when the last MDI window is closed will the U/I return to
       the normal view mode.
     * User configurable grid spacing does not work when the time line is in
       simulation time mode. This has been fixed by adding an optional "Auto
       Period" option. When this option is enabled, the grid period will be
       determined by the major tick marks in the time line. When this option is
       unchecked, the user specified grid period will be used.
     * Verification Management has redesigned dialogs for "Configure Column
       Layout"(browser and tracker), setup for "Command Execution"(browser),
       and setup for "Filter"(tracker). All of them provide naming ability to
       save different setups.
     * Testbrowser pane is providing short keys 'Delete' for "Remove File" ->
       "From Browser Only" and 'Control-Delete' for "Remove File" -> "Browser
       and File System".
     * Tcl cannot "source" or "do" files that are accessed through paths that
       contain a soft link and "..".
     * Grouping transactions in Wave window could lead to unexpected behavior
       in earlier versions. This has now been fixed so that transactions may be
       members of wave-window groups.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.3d
     * The error messaging system has been improved when the compiler detects
       an unexpected end of Verilog source text.
     * A process, edge sensitive to a vector, could fail to execute when a
       different process is sensitive to a single bit of the vector.
     * On the Windows platform, an error occurred when optimizing named or
       unnamed  user defined primitives that were loaded from an unmapped
       library. An error messages of the following form was generated in this
       case.
       ** Error: file.v(1000): Error reading file at 0x23762
     * Bit-Select expressions used with assignment operators such as +=, -=,
       |=, etc. sometimes caused errors like:
       Internal error: ../../../src/vlog/vgenexpr.c(9843) !is_cancelledOf(e)
     * Under certain circumstances, a port of a Verilog module always displays
       an X unless it is logged before any run command.
     * The simulator crashed in some cases if a non-blocking assignment update
       triggered  a simulator when command, which in turn executed a stop
       command.
     * If a SDF file referenced an instance name and a portname (in that order)
       that are identical, sdfcom crashed.
     * When  a  parameter  with initial value as string literal was being
       overwritten  by string concatenation using defparam, in vopt mode,
       sometimes its type was not being correctly identified as accStringParam.
     * The "++" operator was broken for elements of associative arrays of long
       integers. For example:
             longint a[longint];
       a[0] = 1;
       a[0]++; // a[0] should be 2 but it was being set to 0.
     * Overriding the value of a parameter of type time would not work properly
       if the value used was a parent module's parameter value of type time.
     * When using a module based bind in a Verilog design with a top-level
       configuration in effect, incorrect errors of the form "name already
       declared in the bind target scope." could be reported.
     * Verilog  conditional  compilation  now  correctly ignores the text
       "`if/`else/`endif" when such text is embedded within a string literal.
     * If the simulator is elaborating a design unoptimized by vopt, and the
       design contains a Verilog configuration in which there is a cell-clause
       whose selected cell name is identical to the cell name specified in the
       associated use-clause, the simulator would fail to load the design after
       continuously attempt to reload the use-clause's cell for 75 attempts.
     * A Verilog optimized cell using input of net_type tri0/tri1 produced
       wrong simulation results.
     * Killing a process that was waiting on a semaphore or mailbox could
       result in vsim crashing when that semaphore or mailbox became available.
     * Fatal compile errors could result if $bits or similar was used within a
       generate loop to define the type of a declaration.
     * SDF interconnect delay annotation failed silently in an optimized design
       if the source port resided in a module not containing a specify block
       and if -v2k_int_delays was not specified and if compiled SDF was not
       used. Primitives connected to the source port may have been optimized to
       a  form  not  affected  by the interconnect delay unless they were
       explicitly  preserved  with  the  vopt +acc=u option. They are now
       automatically preserved.
     * The 0->x, 0->z, 1->x and 1->z transitions were not detected on RETAIN
       delays. This caused incorrect simulation results due to incorrect delay
       selection.
     * Refresh of libraries containing comma-separated sensitivity lists now
       works in conjunction with the -vlog95compat switch.
     * If there is a continuous assignment to a register (i.e., a non-wire),
       and a 'force', followed by a 'release' is done on that register, the
       continuous assignment must then be re-evaluated. This was not happening
       in earlier versions of vsim.
     * Event  schedules  with  negative relative delays could get handled
       differently depending on other non-related pending events.
     * Compiling  `protected code with vlog -incr sometimes generated the
       message:
       This version of the compiler is incompatible with library file.
       followed by a syntax error.
     * The file I/O task $fgets returns an incorrect value when using long data
       with a multiple of 2048.
     * SDF  statements  referencing conditions consisting of a mixture of
       argument and event conditions in a setuphold or recrem timing check may
       not annotate.
     * begin_keywords issued an incorrect error when only non-variable items
       appeared in the $unit scope.
     * vopt could fail if multiple anonymous sequential blocks containing
       declarations appeared on the same source line. This would typically be
       caused by macro-expansion of source containing distinct processes with
       sequential loops.
     * The transaction recording API routine $add_attribute() now rejects
       attributes of type wire (net). This restriction will be lifted in a
       future release.
     * A latch implemented as an always block in an optimized design failed to
       propagate a data input change to the output in some cases if there was a
       following same iteration glitch on the enable from "closed" to "open" to
       "closed" again. Subsequently, when the enable changed again to "open"
       (no glitch), the new data input was not propagated to the output.
     * An arithmetic shift right on a signed literal (or, any other signed
       constant expression) failed to zero fill the vacated bit positions when
       the shift expression appeared in a context where the signed expression
       must be converted to unsigned. For example, ((1'sb1 >>> 1) != 1'b0)
       evaluated to 1'b1, whereas it should have evaluated to 1'b0.
     * vlog would occasionally crash when processing large designs that contain
       a `uselib directive and the -compile_uselibs switch.
     * Use of +delayed_timing_checks could cause incorrectly timed notifier
       toggles of period and width timing check violations.
     * Designs optimized with vopt which use SDF sometimes gave incorrect
       results.
     * If an initial block contained $sdf_annotate statements that targeted
       protected regions they had to be the first items in that block. Now we
       allow other system tasks and non-blocking assignments to be interspersed
       with $sdf_annotate statements.
     * Annotating a compiled SDF file containing 0 delay INTERCONNECTs in the
       presence of +multisource_int_delays switch sometimes caused a fatal
       error message or a crash.
   ______________________________________________________________________

   PLI Defects Repaired in 6.3d
     * Calling acc_object_of_type() with a named event (accNamedEvent) and
       accScalar would erroneously return TRUE. This has been fixed so it
       returns FALSE.
   ______________________________________________________________________

   VHDL Defects Repaired in 6.3d
     * In vopt, we now detect and report an error for cases where a procedure
       call with a wait statement is called either directly or indirectly by a
       function  call.  It  is illegal for a function to be a parent of a
       subprogram that has a wait statement.
     * In some cases, vopt crashed while optimizing a wait statement with no
       sensitivity  list  and  an until expr that contained references to
       variables, but no signals. The wait statement is a degenerate case that
       is  equivalent to a simple "wait;" and generates a warning to that
       effect.
     * Some  subprogram  calls,  where  the subprogram had local constant
       declarations whose initial value depended on a formal parameter declared
       with a default value, were incorrectly inlined.
     * The compiler could issue an internal error (** Error: test.vhd(14):
       Internal error: ../../../src/vcom/gendecl.c(44) current_process) when a
       process contained a non locally static scalar SUBTYPE declaration with a
       range  that was the same as that appearing in a prior FOR GENERATE
       generation scheme.
     * Added the -deferSubpgmCheck switch to vcom and vopt. This switch forces
       the compiler to report array indexing and length errors as warnings when
       encountered within subprograms. When subprograms with indexing and
       length errors are invoked during simulation, errors will be reported by
       the  simulator.  The  additional  checks can potentially slow down
       simulation.
     * In rare cases, a signal array driven in a lower block failed to have its
       value propagated through instances of other block(s) instantiated at a
       higher level.
     * In rare cases, an optimization that merged processes with the same
       sensitivity list failed to resolve the signals driven.
     * When a slice of 9 elements of a driven std_logic_vector was passed to an
       output port, it would sometimes cause a crash depending on how it was
       driven at the lower level.
     * Method calls without arguments at the block level are now flagged as
       illegal concurrent statements.
     * An elaboration time error could occur if a generic or port is of a user
       defined integer or real type. The error would occur only if the formal's
       value is an expression containing only literals and predefine operators.
       The  value of the formal could be provided by the actual or be the
       default value if the formal is left open.
   ______________________________________________________________________

   FLI Defects Repaired in 6.3d
   ______________________________________________________________________

   VITAL Defects Repaired in 6.3d
   ______________________________________________________________________

   SystemC Defects Repaired in 6.3d
     * The argument following -sc_arg could not have -g or -G as the first two
       characters.
     * SystemC objects instantiated inside a try block in sc_main() were not
       debuggable.
     * Using sc_int with sc_fixed was causing ambiguous operator overload
       errors.
     * Concatenation of two sc_int larger than 32-bit was giving wrong results.
     * sccom was unable to merge debug databases from two libraries if typedefs
       were used in template parameters.
   ______________________________________________________________________

   Assertion Defects Repaired in 6.3d
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.3d
     * Under certain conditions, applying compiled SDF to a design caused
       signal propagation failures across VHDL-System Verilog hierarchical
       boundaries.
     * Instantiation of a Verilog configuration from a VHDL design unit would
       sometimes  fail  to  process the configuration's cell and instance
       statements.
     * If vsim is used with the 2-step vopt flow (vopt is implicitly invoked),
       and if a VHDL design unit is instantiated from a library that has a name
       identical  to  the  top-level design unit's name (from a different
       library), vsim may print the following error:
       ** Error: (vsim-8345) Unable to find original top-level design units for
       optimized design "_opt".
       If the design units are Verilog, simulation will proceed without error,
       but subsequent simulations may not reuse the optimized design.
     * When  using  vlog  -fast on a module that instantiates two or more
       instances of some other module, where that module itself was compiled
       with -fast and instantiates a VHDL design unit via a fully expanded name
       (as escaped identifier, i.e., '\work.entity(architecture) '), vlog could
       crash.
     * Verilog array of instances was not working properly at the Verilog-VHDL
       mixed language boundary when the VHDL component had ports of type array.
   ______________________________________________________________________

   Coverage Defects Repaired in 6.3d
     * Fixed a crash in vsim with code coverage on.
     * The Instance Coverage window displayed NULL in viewcov mode if the
       design has more than 500 flat instances and the selected environment has
       child instances at the end of the flat instance list.
     * Incorrect number of branches reported by vcover report command due to
       overflow in counts.
     * Fixed some problems with code coverage on, and running vsim with vopt.
       Any of these problems could result in a vsim crash. These problems are
       related to multiple instances of an inlined module, where some instances
       are optimized differently than others.
     * Multiple -du and -instance options are now supported in the coverage
       save command from simulation.
     * Port direction of toggles was wrong in UCDB.
     * There was a simulation mismatch between coverage flow and non coverage
       flow. The mismatch was because of overloading the "=" operator.
     * The "Coverage Report" menu is added in Tools menu to have the new dialog
       box containing both Code Coverage and Functional Coverage items. The
       "Coverage Report" menu has three sub menus for Text, HTML, and Exclusion
       report dialogs.
     * An error message is added for detecting corrupted UCDB files by Windows
       by inserting control-M characters.
     * The "Colorization Configuration" submenus are added in the RMB popup
       menus from Browser and Tracker in the Verification Management GUI. This
       is to set the low threshold and high threshold coverage values for
       highlighting coverage values in different Coverage columns with three
       different colors depending on the coverage values. If coverage value is
       less than the low threshold value then the coverage is highlighted in
       red, if the coverage value is greater than the high threshold value then
       the coverage is highlighted in green, otherwise coverage values are
       highlighted using yellow.
     * Vector signals reported in the toggle coverage details page of the HTML
       coverage  report were mis-parsed if the signal was a Verilog-style
       escaped identifier. The symptom is that the bits of the vector would all
       be reported with the same name and the bit number would be reported as
       the "alias" signal.
     * Signals on the toggle details page of the HTML coverage report would be
       reported as uncovered (0.0%) if an alias for the signal also appeared at
       a higher level of hierarchy in the design.
     * If an imported testplan section contains a path delimiter ("/"), it gets
       converted to a VHDL-style escaped identifier. This identifier would be
       copied to the Java-script based design navigation pane of the HTML
       report, causing the pane to fail to render.
     * Fixed a number of problems related to code coverage and module inlining.
       This could cause a crash when running vsim with code coverage on. Also
       fixed some problems with code coverage and Generate Blocks.
     * Implementation of the -code argument was reworked to fix bugs and give
       better error messages. For information on how to use this argument refer
       to the coverage or vcover command documentation (subcommands: tag,
       ranktest, stats).
     * The UCDB SIMTIME attribute had the incorrect simulation time value.
     * The vcover merge command did not maintain the size of test vectors
       correctly and caused an internal UCDB error in some cases.
     * In the UCDB Browser, teststatus incorrectly showed "ok" rather than
       "merge_error" in some cases.
     * There is now a user-visible error message that appears during the merge
       when  two  or  more test records are merged with the same name but
       inconsistent data values.
     * Absolute paths did not produce correct results with the coverage -source
       command and from the GUI.
     * Compute-intensive coverage analyze queries may now be aborted with the
       break key.
     * The current working directory of the simulation (from which a UCDB is
       saved) is now recorded in the UCDB for later access by the test re-run
       facility in the UCDB RUNCWD attribute.
     * The command coverage exclude -du was not working correctly.
   ______________________________________________________________________

   General Defects Repaired in 6.3d
     * Failures  could  occur  when generating a compressed checkpoint or
       elaboration file greater the 4Gbytes in size.
     * In releases prior to 6.3d if the user used an alternate pathname to find
       their modeltech install tree (for example if they were running the same
       release on Windows and UNIX), optimized designs created with vopt might
       not be compatible, and would fail to load.
     * Designs that contained references to libraries with embedded spaces in
       library pathname(s) might not load properly.
     * A memory leak in the DPI routine svGetScopeFromName() was fixed.
     * An  error  could  occur when doing a "restore" if the "checkpoint"
       operation was done with an active context whose name contained extended
       identifiers(i.e. "\my test\").
     * vsim crashed if the installation directory had spaces in it and vsim was
       invoked with the -c switch.
     * When /tmp or $TMPDIR is full, the simulation would keep running and
       lines written to the transcript file output would be lost. Now the
       simulation  stops  and prints an error. If /tmp is cleaned up, the
       simulation can then be resumed.
     * Fixed the SAIF format as per LRM.
          + Changed VERSION to PROGRAM_VERSION.
          + Escaping ()[]. (,) will be dumped as [,].
          + Putting ( ) around the nets.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.3d
     * dts0100342772 - No SDF warning message when internal interconnect delay
       is not annotated or used.
     * dts0100378555 - Support annotating timing to protected modules when
       $sdf_annotate is not the first function in an initial block.
     * dts0100422637 - Designs that contained references to libraries with
       embedded spaces in library pathname(s) might not load properly.
     * dts0100427864 - vsim_break is not documented.
     * dts0100428030 - VoptFlow fails because the top-level unit cannot be
       found for the optimized design "_opt".
     * dts0100429156 - Killing a process that was waiting on a semaphore or
       mailbox could result in vsim crashing when that semaphore or mailbox
       became available.
     * dts0100429949 - The simulator now supports non-blocking assignments
       through  virtual  interfaces  inside class methods, as long as the
       resulting variable is a valid target.
     * dts0100435898 - Concatenation of two sc_int larger than 32-bit was
       giving wrong results.
     * dts0100436833 - Syntax and documentation of vdir command is incorrect.
     * dts0100438827 - SDF statements referencing conditions consisting of a
       mixture of argument and event conditions in a setuphold or recrem timing
       check may not annotate.
     * dts0100438924 - Source annotation did not work when source files were
       compiled together on one command line in certain cases.
     * dts0100439158 - Some subprogram calls, where the subprogram had local
       constant declarations whose initial value depended on a formal parameter
       declared with a default value, were incorrectly inlined.
     * dts0100439294  -  On  the Windows platform, an error occurred when
       optimizing named or unnamed user defined primitives that were loaded
       from an unmapped library. An error messages of the following form was
       generated in this case. ** Error: file.v(1000): Error reading file at
       0x23762
     * dts0100439295 - Internal error pointing to an assignment statement
       (assign tmp = in.rstclk;) where tmp and rstclk are interfaces.
     * dts0100440670 - Coverage save results in tool crash.
     * dts0100448983 - Problem linking two SystemC libraries together.
   ______________________________________________________________________

   Known Defects in 6.3d
     * Syntax highlighting may not function properly in the Source window (all
       the source is shown as plain text). You can fix this problem by editing
       ~/hte/v2_38/hte.ini (where ~ represents your "HOME" directory) and
       deleting the line that says:
       languages=cxx tcl verilog vhdl XML PSL
     * The viewcov mode version of "coverage clear" has a known difference in
       behavior compared to the vsim mode version. In the viewcov mode version,
       clearing coverage data in a design unit instance does not affect the
       coverage data for that design unit, itself. Also, if you clear coverage
       data  in  a design unit, all instances of that design unit are not
       affected by that operation. In vsim mode, the data is more tightly
       linked such that one operation affects the other. In viewcov mode, if
       you want to have correct data correlation between instances and design
       units, then you need to clear both instances and design units.
     * The simulator will hang if it tries to create a WLF file while running
       on a Linux 64-bit operating system from a working directory which does
       not support large files. One common instance of this is executing an add
       wave command, when the working directory was created under an older
       32-bit Linux OS.
       This  is  a  Linux operating system bug and cannot be fixed by the
       simulator.
       A workaround for release 6.3 and above is to execute the simulator with
       command line option -wlfnolock.
     * The stack unwinder on the linux_x86_64 OS is unreliable. The unwinder is
       the fundamental facility provided by the OS for sampling where program
       execution is at. The unwinder is necessary for gathering performance
       data. This is a known issue with this specific OS and is why performance
       data will be incorrect or non-existent on this platform.
     * Users should be mindful of enabling both performance profiling and
       memory  profiling at the same time. Memory profiling requires much
       overhead  process,  and it can skew the results of the performance
       profiling data.
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * Specparams can be learned during the learn flow, but cannot be found on
       consumption. The workaround is to use full +acc deoptimization.
     * Attempting  to  traverse from an unnamed VPI typespec handle to an
       instance or a scope will result in a crash.
     * There are some limitations related to coverage exclusions:
          + Toggle exclusions are not supported in viewcov mode yet.
          + Exclusion report on toggles are not supported in both vsim and
            viewcov mode.
     * Concatenations and bit slices are not yet supported for System Verilog
       clocking blocks.
     * On Red Hat Enterprise Linux release 5 platform, If SIGSEGV signal occurs
       during the simulation and if CDEBUG is on, C-debugger traps the signal,
       and when continued, vsim gets terminated right away, instead of exiting
       with proper error status.
     * When code coverage is on, and vopt is used with verilog module inlining,
       instances within generate blocks will not show code coverage data. This
       will be fixed in release 6.3e.
   ______________________________________________________________________

   Product Changes to 6.3d
     * File locking for UCDB merge:
       We support a cumulative merge (vcover merge out.ucdb out.ucdb in.ucdb).
       Such merge requests may occur simultaneously from various platforms in a
       networking environment. In order to avoid corrupting cumulative coverage
       results, merges of UCDB files are serialized. "out.ucdb" is only written
       by a single process at a time.
          + Creation of lock files whose purpose is to signal by their presence
            that a UCDB is locked for writing.
          + Operations are atomic. When creating the lock file, the process
            verifies that it does not exist and then creates it, but without
            allowing  another process the opportunity to create it in the
            meantime.
          + The lock is advisory. Processes which intend to modify a UCDB file,
            by convention, check for locks to coordinate access to that file.
            The system fails if this convention is ignored.
          + There is a back-up file mechanism within vcover merge that, when
            optioned for, saves a back-up of the merge output before merging
            and can, when optioned for, automatically restore the back-up in
            case another process has its lock broken.
          + When blocked on a lock:
               o We print out "Waiting for lock..." messages every so often and
                 let the user explicitly break the lock if they think it safe.
               o We produce a message similar to: "User Bilbo on machine Frodo
                 has had the lock for 16 days".
               o Retry attempts will occur every 10 seconds.
               o Blocked messages will repeat about every 3 minutes.
          + The lock is released after a time-out period:
               o This cannot inadvertently time-out. Cannot be broken if a
                 process  is  starved simply because others get in first.
                 Time-out is only for the case where a single process takes too
                 long.
               o The time-out period is user-configurable.
               o When a time-out condition occurs, the process timing out will
                 be sent a "kill" signal.
     * The Verilog front-end now preserves block comments defined in the macro
       body through the macro substitution process.
     * The  vsim  '-assertfile  '  switch  now  only applies to assertion
       (VHDL/SVA/PSL) messages issued by the tool. Use the vsim '-errorfile '
       switch to redirect non-assertion tool messages into the specified file.
       To retain the tools previous behavior, set the environment variable
       MTI_ASSERTFILE_COMPATIBILITY to any value. This environment variable may
       eventually be deprecated. In the modelsim.ini file, all AssertionFormat
       variables  have  been  renamed  as  MessageFormat  variables.  The
       MessageFormat variables are valid for both assertion and non-assertion
       tool messages, as before. For backward compatibility the AssertionFormat
       variables will continue to be supported.
     * The restart command will reload the current dataset if the current
       dataset is not the active simulation ("sim"), in effect acting just like
       a restart of a simulation. See the dataset restart command below under
       "New Features".
     * The XML Testplan Import configuration file (xml2ucdb.ini) has been moved
       from the product directory to a sub-directory, vm_src, directly below
       the product directory.
     * The ucdb2html utility has been removed from the release. The HTML report
       functionality had been integrated into vcover for 6.3 (see vcover report
       -html).
     * Due to changes required for resolution of product defects, the generated
       names of specializations of parameterized classes could be permuted. For
       example, if a name such as "C::C__2" was previously used for "C#(int)"
       and "C::C__3" was used for "C#(logic)", the names might be exchanged.
       The conditions under which name permutation could occur are based on
       internal details of how specializations are matched and are not directly
       correlated to source descriptions.
     * The default action for the command onbreak has changed from "pause" to
       "resume". This will only impact dofiles that do not currently contain
       any onbreak commands. The "pause" action causes the macro file to stop
       executing and issues a "Paused" prompt to allow interactive debugging of
       the macro file. The resume command continues the execution of the macro
       file at the point of the break. The result of this change in default
       value will affect macro files without an onbreak command so that those
       files will continue executing after hitting a break point. If the old
       behavior is required, then it will be necessary to add the command
       onbreak pause at the beginning of the macro file.
     * The default collapsed mode for VCD output from the vcd dumpports command
       has changed from not collapsed to collapsed. The specific change was to
       the line in the modelsim.ini file: "DumpportsCollapse = 0".
       For 6.3, this was changed to: "DumpportsCollapse = 1".
       To get the old non-collapsed format, change this setting back to 0 in
       the modelsim.ini file.
     * Starting in 6.3 concatenations are no longer treated as 'assignment
       patterns'. Previously, the simulator attempted to detect these cases and
       produced the following warning:
       You should use "'{" to specify this literal.
       Now we will print errors, as in the following example:
       int a[3:0] = {default:0};
       int b[1:2] = {32'b1, 32'd2};
       ...
       ** Error: test2.sv(31): Can't use named concat. literals here.
       ** Error: test2.sv(31): Illegal concatenation of an unsized constant.
       ** Error: test2.sv(31): Cannot assign a packed type to an unpacked type.
       ** Error: test2.sv(32): Cannot assign a packed type to an unpacked type.
     * Previously,  an attempt to print a memory using $display displayed
       nothing, while $display of other unpacked types (such as structs and
       dynamic  arrays)  did produce output. In 6.3, we will now print an
       elaboration error, #8323, for all such constructs (which are illegal).
       This error may be suppressed.
       To  print  unpacked  data, we have added the "%p" and "%0p" format
       specifiers.  The  former  prints  the  data in the form of a legal
       "assignment pattern", while "%0p" prints in a shorter format.
     * Wildcard indexed associative array can no longer be used as a foreach
       array.
     * The IEEE Std 1800 has approved an important restriction to packages.
       With the new rules, packages are not permitted to refer to compilation
       unit items. An example of such of reference is the following small
       design:
            typedef int T;
            package p;
                T foo;
            endpackage
       Packages may depend on other packages so compilation unit declarations
       that packages need should be refactored into separate packages. For
       example, the previous design should be changed to a form similar to the
       following:
            package shared_types;
                typedef int T;
            endpackage
            package p;
                import shared_types::*;
                T foo;
            endpackage
       It is also important to note that "import" statements immediately before
       a package declaration are compilation unit imports and not imports into
       the subsequent package. With the new rules, the package references may
       not look into such an import. For example, the following approach will
       no longer work:
            package shared_types;
                typedef int T;
            endpackage
            import shared_types::*;
            package p;
                T foo; // cannot refer to T since it is imported into
                // the compilation unit, not into the package
            endpackage
       The new rules are now being enforced. Designs must be refactored so that
       packages do not refer to anything in the compilation unit.
     * Version 6.3d includes the v2.1 Mentor Graphics Documentation System,
       which includes the following components:
       InfoHub -- A browser-based directory that provides links to all your
       locally installed documentation. The InfoHub also provides a search
       interface, from which you can search across all your locally installed
       documents. The search interface also enables you to submit a search
       directly  to  SupportNet.  The InfoHub provides access to User and
       Reference manuals and Tutorials, delivered in both HTML and PDF formats,
       and Release Notes, delivered in text format.
       PDF Bookcase -- A PDF file that provides links to the PDF documentation
       if you cannot use an HTML browser.
       Improvements to the v2.1 Mentor Graphics Documentation System include
       the following:
       Search changes -- Improved search time, multiple keyword support, search
       ranking icons, results filtering by book or topic, and improved accuracy
       of results.
       Search and content scopes -- A new My Search Scope option lets you
       define a custom set of books to search.
       Global   index   improvements   --   improved  viewing  speed  and
       collapse/uncollapse of "like" terms.
       Getting Started movie -- provides an overview of all the features of the
       InfoHub  and Mentor Graphic Documentation System. You can view the
       Getting Started (Movie) from the Quick Tips menu located in the lower
       left-hand corner of the InfoHub.
       Font size -- increase or decrease the default size of the font by using
       the new triple "A" icon in the header.
     * The  vopt  +acc=g option has been replaced by the +floatparameters
       option(Verilog designs) and the +floatgenerics option (VHDL designs).
       Both +floatparameters and +floatgenerics accept the same [+<module>][.]
       syntax accepted by +acc. Use +floatparameters and +floatgenerics to
       instruct vopt not to lock down values of parameters and generics during
       optimization. The parameters and generics will be left "floating", and
       thus  capable  of accepting modified values via the vsim -g and -G
       options. +floatparameters and +floatgenerics may have adverse effects on
       performance in some cases.
     * The vopt +acc=m option has been changed such that it no longer preserves
       primitive instances. Primitive instances are now preserved by using the
       new +acc=u option.
     * The VoptCoverageOptions variable has been removed from the modelsim.ini
       file. vopt optimizations for coverage are now controlled by the CoverOpt
       modelsim.ini file variable and the -cover command line option.
     * The  -coverage  option  to  vopt  is  no  longer needed. vopt will
       automatically detect whether any of the source files were compiled with
       a -cover option, and will adjust its optimizations accordingly. Also, if
       you give a -cover xyz option to vopt, it will be logically OR'd with any
       -cover abc option given to an individual source file when processing
       that source file. In addition, if you compiled some source files with
       coverage on, you can force coverage off by giving vopt the -nocover
       option. This allows you to control whether coverage is on or off at vopt
       time instead of having to recompile individual source files.
     * The pathname reported by the simulator and User Interface for items
       inside SystemVerilog packages is incorrect. A path separator ('/') was
       used instead of the language correct package scope separator ('::').
     * The recording of attributes for transactions has changed. Previously,
       any attribute recorded on a transaction was not only added to every
       transaction on that same substream, but to all parallel transactions and
       the transactions on their substreams as well.
       Now, any attribute recorded on a transaction is still added to every
       transaction on that same substream, but is no longer automatically added
       to every parallel transaction and the transactions on their substreams.
       Typically, all transactions on a given stream (and all of it's parallel
       substreams) have the same set of attributes, and for that case, there
       will be no difference due to this change.
     * Changes for coverage exclude command:
          + Replace the option -instance with -scope to accommodate more scope
            types like generate block.
          + Transition  names are used with the option -ftrans instead of
            transition id's. The new syntax is:
                [-ftrans <state_var_name><transition_name>+ | all]
            where transition_name is specified as <state_name>-> <state_name>.
          + State names are used with the option -fstate instead of state id's.
            The new syntax is:
                [-fstate <state_var_name> <state_name>+ | all]
          + A new option -else is added to exclude the else part of every
            if-branch specified in the line range. Note that the line number
            for the else-branch is where the if-branch appears.
          + Recursive  exclusion for a scope is supported. To recursively
            exclude a scope, -scope is specified together with -r.
          + -scope and -du are supported with -togglenode.
     * The  UCDB  bin name for if-branch is changed from 'true_branch' to
       'if_branch'.
     * The  simulator has been improved to recognize and maintain Verilog
       escaped  identifier  syntax  for  all Verilog escaped identifiers.
       Previously  such identifiers were converted to VHDL-style extended
       identifiers, and then appeared as VHDL extended identifiers in tool
       output and CLI commands.
       Starting in 6.3, all default Verilog escaped object names inside the
       simulator appear identical to their names in original HDL source files.
       Sometimes in mixed language designs, hierarchical identifiers might
       refer to both VHDL extended identifiers and Verilog escaped identifiers
       in the same fullpath. For example:
       /top/\VHDL*ext\/\Vlog*ext /bottom
       top.\VHDL*ext\.\Vlog*ext .bottom
       (depending if the HierPathDelim variable is set to '/' or '.')
       Any fullpath that appears as user input to the tool (e.g. on the vsim
       command line, in a .do file, on the vopt command line, etc.) should be
       composed of components with escape syntax appropriate to their language
       kind.
       A modelsim.ini variable called "GenerousIdentifierParsing" can control
       parsing of identifiers input to the tool. If this variable is set (it is
       set by default now), either escape syntax to be used for objects of
       either language kind. This can be helpful to maintain compatibility with
       older  do files, which often contain pure VHDL extended identifier
       syntax, even for escaped identifiers in Verilog design regions.
       Note that SDF files are always parsed in "generous mode". SignalSpy
       function arguments are also parsed in "generous mode".
       On the vsim command line, the language-correct escape syntax should be
       used for top-level module names. Using incorrect escape syntax on the
       command  line  will  work  in the incr flow, but not in vopt. This
       limitation may be removed in a future release.
     * If  an  invalid  end  time  is specified when recording the end of
       transaction, a warning is still issued but the current simulation time
       is used as the transaction end time instead of the transaction start
       time.
     * The format of the library contents file (_info file) has been changed
       for the purpose of improved compiler performance. The new format is not
       backwards compatible with previous releases. Consequently, any attempt
       to refresh or recompile a 6.3 library with an older release will result
       in an error similar to the following:
       ** Error: (vcom-42) Unsupported ModelSim library format for "./work".
       (Format: 3).
       Converting the library back to an older release requires that you remove
       the library and rebuild it from scratch. Or, if you are converting back
       to a 6.2 release only, then you can convert the library format to the
       6.2 format and then freely refresh back and forth between 6.2 and 6.3
       releases. Use the 6.3 version of vlib to convert the format to the 6.2
       version using the -format option. For example:
       vlib -format 1 work
       The format version for pre-6.3 releases is 1, while the format version
       for 6.3 is 3. Format version 2 is related to libraries created with the
       -archive option and should be avoided when specifying the vlib -format
       option.
     * The  XML  Testplan  Import Utility (xml2ucdb) was enhanced and the
       command-line and configuration parameters were re-named for consistency.
       The following changes were made:
         1. Command-line
              1. Added a -verbose option to show testplan hierarchy and design
                 mapping. By default, the utility is a lot less noisy than
                 before.
              2. A -ucdbfilename <file> option has been added to remove the
                 order-dependence  of  the files on the command line (the
                 original syntax is still accepted).
              3. The command-line arguments are now order-independent.
              4. Any -format <format> option found on the command line is
                 processed first and other extraction parameters found on the
                 command line act as overrides on top of the parameters found
                 in the configuration file.
              5. The same parameter names are used both on the command line and
                 in the configuration file.
              6. The  -tagseparators  <chars>  option,  when  used on the
                 command-line, applies only to the taglist parameters specified
                 on the command line (see below).
         2. Configuration file
              1. Added "datalabels" parameter to support user-defined embedded
                 data labels.
              2. The following parameters have been re-named for consistency.
                 In all cases, the former name is still recognized:
                   1. start => starttags
                   2. stop => stoptags
                   3. exclude => excludetags
                   4. description => descriptiontag
                   5. sectionitem => sectiontags
                   6. dataitem => datatags
                   7. testitem => titletag
                   8. coveritem => linktag
                   9. coverattr => linkattr
              3. The "Tags" field name in the "fieldnames" and "fieldlabels"
                 parameters has been renamed "Link". The former name is still
                 recognized.
         3. Behavior
              1. The UCDB tags used to link testplan sections to coverage items
                 now has the contents of the "title" parameter prepended.
                 Lacking that, the basename of the XML input file is used.
              2. The "startsection" parameter now reflects the initial section
                 number for each level of hierarchy (auto-number mode only).
              3. Data  capture is no longer enabled from the start of the
                 document in auto- number mode. An element matching "starttags"
                 or a section number matching the "startstoring" parameter is
                 required to enable data capture.
     * If the PATH column value is set to "-" it will be ignored (this is
       useful for the PATH-per-LINK case where one of the LINK values doesn't
       need a PATH).
     * XML Import (xml2ucdb) now supports a "Path" column to direct testplan
       link item matching to a specific region of the design. In addition, a
       path may be prepended onto any CoverGroup, CoverPoint or Cross link
       item.
       For CoverPoint, CoverGroup, and Cross link items:
          + If  the  contents  of the Path column are non-blank, the Path
            information will be used as the value of the -path option to the
            tag command and the trailing component of the Link column will be
            parsed as usual and used to match the cover item. Any path added to
            the string in the Link column will be ignored.
          + If the Path column is not used or is left blank, and a path is
            prepended onto the string in the Link column, the prepended path
            will be used as the value of the -path option on the tag command.
       For CoverItem, Assertion, or Directive link items:
          + If the string in the Link column starts with a path separator
            character, the Link string is used as the value of the -path option
            in the tag command and no other tag command option is used.
          + If  the  string in the Link column does not start with a path
            separator (in other words, is not a full path), and the contents of
            the Path column are non-blank, the Path string is used as the value
            of the -path option and the Link strung is used as the value of the
            -match option on the tag command.
          + Otherwise, the Link string is used as the value of the -match
            option on the tag command and no path is specified.
       For all other link item types, the contents of the Path column are
       ignored. Note: If the Path column for a given link item is the literal
       string "-", the Path column is ignored for that link item only.
     * XML Import (xml2ucdb) now supports test data record tagging. If the Type
       column for a given link item is "Test", the contents of the Link column
       will be used as the value of the -testrecord option on the tag command
       associated with that link item.
     * XML  Import  (xml2ucdb)  now  supports a -stylesheet <file> option
       ("stylesheet="  in  the  INI  file).  This option points to an XSL
       transformation stylesheet which is applied to the imported XML file
       prior to extraction.
     * XML Import (xml2ucdb) now supports XML files generated by Jasper's
       GamePlan testplan utility. Use the -format GamePlan option.
     * Use of the "analog" format within the Wave window has been made easier
       by adding support for the use of -min and -max to control waveform
       scaling (the old method required use of "offset" and "scale").
     * Font Changes
       The way fonts are used and configured in the product has changed. There
       are  now  5 configurable fonts in the product: menuFont, textFont,
       fixedFont, treeFont, and footerFont. These fonts are used by all windows
       and are customer configurable using the Edit Preferences dialog box. The
       previous  method  of  configuring  fonts is no longer used and the
       preference variables will be ignored. The Source window will continue to
       use it's own font setting as that window shares the font preferences
       with other products that use the DesignPad text editor.
       For current customers upgrading to 6.3b and later releases that have set
       up  customized font preferences, these preferences will have to be
       manually configured for the new fonts, otherwise the product will look
       and behave just the same.
     * A change to licensing for this release eliminates extraneous entries in
       the license server log file that were the result of an availability
       check for a license feature. There used to be a license checkout line
       (i.e., OUT) followed by a license checkin line (i.e., IN) with 0 time
       duration each time the application checked on the availability of a
       license to decide whether to attempt the actual checkout of the license.
     * The vcd limit <size> command has been changed adding support for a file
       size limit greater than 2 GB. The size argument now excepts a unit
       specifier. The default <size> unit remains as bytes. An optional suffix
       of either KB, MB or GB specifies the units in which the size should be
       interpreted. For example:
       vcd limit 6GB
       or
       vcd limit 400MB
     * Taglists (used as data extraction parameters) may now include a subset
       of the XPath syntax to identify elements not only by tag name but also
       by  the  contents  of  attributes  attached to said elements. This
       pseudo-Xpath syntax only handles "=" and "!=" and can only examine the
       attribute values attached to the element being compared. Moreover, only
       one attribute comparison may be performed.
       For example, the following extraction parameter:
"-starttags Worksheet[@ss:Name=Sheet1]"
       will match the following element in the incoming XML:
<Worksheet ss:Name="Sheet1">...</Worksheet>
       but will not match the following element:
<Worksheet ss:Name="Sheet2">...</Worksheet>
     * The behavior of several extraction parameters in the XML Import utility
       has  been  clarified  to  allow  various  parameters  to work more
       independently.  The  affected parameters are: starttags, stoptags,
       excludetags, and startstoring.
     * The change command can now be used to modify local variables in Verilog
       tasks and functions.
     * There have been some performance improvements to the learn phase of the
       learn flow. The learn no longer learns individual bits.
   ______________________________________________________________________

   New Features Added to 6.3d
     * A new command, suppress, was added to the simulator. This extends the
       functionality of the existing vsim -suppress command line switch to
       allow controlling message suppression during simulation run-time. The
       syntax is the same as the command line switch, with the addition of a
       -clear switch used for clearing message suppression. The command can be
       used  to  suppress particular messages during a select period of a
       simulation, such as during design reset and initialization.
     * The timeline in the Wave window can be configured to use a different
       time unit from the simulation time units. Valid values are any time unit
       specifier (i.e. fs, ps, ns, us, ms, sec, min, hr). The -timelineunits
       option is used either via the configure wave -timelineunits command or
       via the Wave window properties dialog box. The current configuration is
       saved  with  the wave format file so it may be restored later. The
       preference  variable PrefWave(timelineunits) is used to define the
       default value if the window is not specifically configure otherwise.
     * A  "#"  by itself in the first element of a testplan section (row)
       matching one of the datatags parameter will cause that section (row) to
       be ignored as a comment. Note that this only works if there are no
       explicitly-tagged data fields (like a title) in the row.
     * The radix and add wave commands and user interface have been updated to
       support a time radix for displaying Verilog registers as a time value.
     * A new UCDB API call ucdb_GetToggleCovered() was added to compute whether
       a toggle node is covered.
     * Inline genvar declaration support has been added for System Verilog. An
       example of this form is as follows:
           for (genvar i = 0; i < 5; i++)
     * The simulator now supports non-blocking assignments through virtual
       interfaces inside class methods, as long as the resulting variable is a
       valid target.
     * The XML Testplan Import tool, xml2ucdb, now has limited support for
       nested XML testplans. The parent XML file can specify a Link string of
       Type "XML" which contains optional command-line parameters and a path to
       another XML testplan file. The child testplan sections will be inserted
       as children of the parent section which called out the "XML" link.


