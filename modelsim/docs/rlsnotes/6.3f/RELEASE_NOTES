
                   Release Notes For ModelSim Altera 6.3f


                                Feb 28 2008

               Copyright 1991-2008 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
   Corporation. The original recipient of this document may duplicate this
  document in whole or in part for internal business purposes only, provided
  that this entire notice appears in all copies. In duplicating any part of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.

   TRADEMARKS: The trademarks, logos and service marks ("Marks") used herein
    are the property of Mentor Graphics Corporation or other third parties.
   No one is permitted to use these Marks without the prior written consent
    of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as a
     source of a product, but is intended to indicate a product from, or
  associated with, a particular third party. The following are trademarks of
   of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.

   End-User License Agreement: You can print a copy of the End-User License
         Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   ModelSim Altera is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.3f

     [7]Verilog Defects Repaired in 6.3f

     [8]PLI Defects Repaired in 6.3f

     [9]VHDL Defects Repaired in 6.3f

     [10]FLI Defects Repaired in 6.3f

     [11]VITAL Defects Repaired in 6.3f

     [12]SystemC Defects Repaired in 6.3f

     [13]Assertion Defects Repaired in 6.3f

     [14]Mixed Language Defects Repaired in 6.3f

     [15]Coverage Defects Repaired in 6.3f

     [16]General Defects Repaired in 6.3f

     [17]Mentor Graphics DRs Repaired in 6.3f

     [18]Known Defects in 6.3f

     [19]Product Changes to 6.3f

     [20]New Features Added to 6.3f
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + linuxaloem - RedHat 7.2 and higher.
   ______________________________________________________________________

   User Interface Defects Repaired in 6.3f
     * If a waveform name contained "[]" syntax, an attempt to use analog
       formatting would fail. This has been corrected.
     * The change command failed to work on System Verilog string variables.
     * Memory tab in Workspace does not update the memory list after "restart".
     * Windows would jump back to the selected item when a node is expanded
       (click  on  the [+] sign) if the tree is sorted in an ascending or
       descending direction. This issue can be seen in any tree window. The
       issue has been resolved.
     * System Verilog transaction does not expand correctly in the Wave window,
       this is now fixed. The attribute that gave trouble was a Verilog reg
       type and expanded with a virtual signal. All such attributes now work
       correctly.
     * Fixed a bug in the WLF logging code that would sometimes lead to the GUI
       crashing with the message:
       Bad pointer access... Closing vish. Font treeFont still in cache.
       The bug was intermittent, but could be worked around by running on a
       single processor system, or disabling WLF threads with the command line
       option -wlfnothreads.
     * A virtual signal or function that cast a scalar value to a virtual type
       produced incorrect results. The scalar value was not used as an index
       into the virtual type. The value required to index a std_logic type to
       produce the scalar value was used. A new casting directive has been
       added for GUI Expressions called cast_enum. The cast_enum directive uses
       the std_logic type index as the value to index the virtual type.
     * A new wave group could not be created using the original name of the
       renamed wave group.
     * The onerror and onbreak commands now warn when used outside a macro. The
       onerror command failed to report the correct action when it was set to
       an empty string. The value of OnErrorDefaultAction is used, but was not
       properly reported with an empty onerror command.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.3f
     * The simulator would not identify the correct library to search when a
       design unit was instantiated within a generate block, and the library
       was specified by a nested configuration.
     * The transaction engine allowed the user to create an attribute from a
       Verilog  named  event.  Since this makes no sense in a transaction
       attribute, events have been disallowed by the transaction engine. A
       warning is issued.
     * Performing a write timing command during a +notimingchecks simulation
       could result in a crash.
     * Triggering  an  event with a hierarchical name within a task would
       sometimes cause a crash during simulation unless the Verilog code was
       compiled as System Verilog.
     * Fixed a crash during elaboration that would occur if randomize() was
       invoked as the result of a parameter's initializer. This has been fixed,
       as randomize() is now correctly recognized as a non-const function.
     * An optimized design containing modules with ports declared as "trireg"
       resulted in an elaboration crash in some cases.
     * Bit select on enums was causing vlog to fail with +acc option.
     * INTERCONNECT/PORT  delay  values  targeted  for ports with escaped
       identifiers in compiled SDF files were not annotated.
     * Logging an inout port to a gate-level optimized cell could crash the
       simulation.
     * Optimization of designs could incorrectly report a non-optimizable
       recursive generated instantiation when an arrayed instantiation was
       conditionally generated.
     * An import package in a Verilog module that gets bound to a VHDL target
       may cause vsim to crash.
     * Cells  containing  very  long  iopath  delays  and  simulated with
       +delayed_timing_checks could have erroneous timing check violation
       messages.
     * The simulator would sometimes crash during elaboration with expressions
       like ++class_obj.array_field[index] or class_obj.array_field[index]++
       when used inside a parameterized class.
     * vlog gave incorrect error messages when index of port connection had
       function call arguments as genvar.
     * Conditional $setuphold timingcheck on unoptimized cells was broken.
     * The DPI function, svGetScopeFromName() will assume that the scope name
       passed to it is a full-path to the scope when the function is called
       from outside a regular DPI call chain. A regular DPI call chain always
       originates in SystemVerilog and starts with a C import tf call. A call
       to scGetScopeFromName() from PLI, VPI, FLI and SystemC is considered as
       a call outside a regular DPI call chain.
   ______________________________________________________________________

   PLI Defects Repaired in 6.3f
   ______________________________________________________________________

   VHDL Defects Repaired in 6.3f
     * The simulator would crash when an optimization was performed on a signal
       array in a package.
     * vsim would crash when a std_logic_vector signal was passed to the only
       element of a port that was an array of std_logic_vectors.
     * In rare instances, the initialization of a driver for a signal array
       would incorrectly change the signal array initialization.
     * vsim crashed while executing a clocked process that had been incorrectly
       optimized.
     * vsim would crash in rare instances of an instantiated port vector of
       length one.
   ______________________________________________________________________

   FLI Defects Repaired in 6.3f
     * The gcc 3.x series compilers would fail to compile user C/C++ source
       file including new class templates named "u" or "s" and also including
       mti.h header file. The new mti.h header file does not have this issue.
       gcc 4.x series does not have a similar problem.
   ______________________________________________________________________

   VITAL Defects Repaired in 6.3f
   ______________________________________________________________________

   SystemC Defects Repaired in 6.3f
   ______________________________________________________________________

   Assertion Defects Repaired in 6.3f
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.3f
     * The vlog command line option -genvhdl was not properly handled in some
       cases when the -sv option was used with it.
     * When all the parameters in a Verilog module are such that they can not
       be dumped in _primary.vhd (because they are not representable), then
       instead  of dumping nothing, an empty generic is incorrectly being
       dumped.
   ______________________________________________________________________

   Coverage Defects Repaired in 6.3f
     * The coverage attribute command truncated strings whenever it encountered
       the special character '%' when printing in Tcl format.
     * The coverage attribute command could not accept attribute names and
       values starting with "-".
     * Fixed a problem in which branch coverage data for a Verilog ternary
       expression would be reversed because of an optimization that swapped the
       operands. Operand swapping is now disabled if branch coverage is on for
       the expression.
     * Fixed  a  problem for code coverage in Verilog case statements. An
       optimization that folds multiple cases that do the same thing into
       common code, caused statement coverage results to be incorrect. This
       caseFold optimization is now turned off for a Verilog case statement
       that has code coverage enabled.
     * Fixed a problem with vsim running in vopt mode with inlined modules and
       arrays of instances. vsim would output errors such as:
       # Internal Error 2 in createLinearToUnionMapNonMonotonic: incorrect
       merged map
       # Internal error in MergeMultipleMaps: NULL merged map for inlined du
       (...)
   ______________________________________________________________________

   General Defects Repaired in 6.3f
     * Incompatible switch error with -load_elab did not abort the load.
     * Fixed an issue with the vsim command line options -error and -fatal. In
       some cases, these options would not change the severity level of some
       warning messages generated during simulation.
     * The 6.3e vsim could not be executed on Windows platforms by some OEM
       products due to an unresolved symbol named "mti_main".
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.3f
     * dts0100473031 - Memory tab not refreshed at restart.
     * dts0100468614 - System Verilog transaction does not expand correctly in
       the Wave window.
     * dts0100475656 - Random crashing when full zooming in the Wave window.
     * dts0100438159 - Virtual types does not display as expected in the wave
       window.
     * dts0100475960 - Grouping of signals, renaming problem.
     * dts0100469375 - "onerror' out of context of a macro does no return a
       message that nothing is being done.
     * dts0100469411 - Error messages show all pure virtual functions as not
       overridden when only one is missing from a pkg.
     * dts0100472364 - External function 'func_index' may not be used in a
       constant expression.
     * dts0100471123 - Crash with code 211, bad pointer access.
     * dts0100470022 - branch coverage report issue.
     * dts0100474739 - vcover merge fails when input list has 5000 entries.
     * dts0100468081 - Incorrect syntax usage for "mem list" in Reference
       Manual.
     * dts0100467223 - Licensing documentation needs to be updated.
     * dts0100466861 - Problem in loading SDF model files with hierarchical
       designs, with 6.3a.
     * dts0100435246 - Elaboration file with $value$plusargs.
     * dts0100378138 - Add ability to overwrite existing files in project
       directory.
   ______________________________________________________________________

   Known Defects in 6.3f
     * Syntax highlighting may not function properly in the Source window (all
       the source is shown as plain text). You can fix this problem by editing
       ~/hte/v2_38/hte.ini (where ~ represents your "HOME" directory) and
       deleting the line that says:
       languages=cxx tcl verilog vhdl XML PSL
     * The viewcov mode version of "coverage clear" has a known difference in
       behavior compared to the vsim mode version. In the viewcov mode version,
       clearing coverage data in a design unit instance does not affect the
       coverage data for that design unit, itself. Also, if you clear coverage
       data  in  a design unit, all instances of that design unit are not
       affected by that operation. In vsim mode, the data is more tightly
       linked such that one operation affects the other. In viewcov mode, if
       you want to have correct data correlation between instances and design
       units, then you need to clear both instances and design units.
     * The simulator will hang if it tries to create a WLF file while running
       on a Linux 64-bit operating system from a working directory which does
       not support large files. One common instance of this is executing an add
       wave command, when the working directory was created under an older
       32-bit Linux OS.
       This  is  a  Linux operating system bug and cannot be fixed by the
       simulator.
       A workaround for release 6.3 and above is to execute the simulator with
       command line option -wlfnolock.
     * The stack unwinder on the linux_x86_64 OS is unreliable. The unwinder is
       the fundamental facility provided by the OS for sampling where program
       execution is at. The unwinder is necessary for gathering performance
       data. This is a known issue with this specific OS and is why performance
       data will be incorrect or non-existent on this platform.
     * Users should be mindful of enabling both performance profiling and
       memory  profiling at the same time. Memory profiling requires much
       overhead  process,  and it can skew the results of the performance
       profiling data.
     * On certain (RedHat) Linux Operating System versions the "-restore"
       feature  occasionally  fails. This is due to the memory allocation
       security (anti-hacking) feature of Linux. RedHat Enterprise release v.3
       update3 was the first version to have this security feature. In these
       Linux releases two consecutive program invocations do not get the same
       memory allocation foot-print. For the "-restore" feature the simulator
       relies  on having the same memory allocation foot-print. Users are
       advised to re-try this feature a few times as on average 3 out of 5
       attempts are successful. In recent Linux versions, an override for this
       anti-hacking feature is provided. Please use it at your own discretion.
     * In code coverage, there is no way to exclude a condition or expression
       table row for the case of more than one table on a line and the table in
       question is not the first table on the line.
     * Support  of debugging C code during a quit command was disabled on
       Windows. The corresponding C Debug command cdbg stop_on_quit was also
       disabled on Windows.
     * Specparams can be learned during the learn flow, but cannot be found on
       consumption. The workaround is to use full +acc deoptimization.
     * Attempting  to  traverse from an unnamed VPI typespec handle to an
       instance or a scope will result in a crash.
     * There are some limitations related to coverage exclusions:
          + Toggle exclusions are not supported in viewcov mode yet.
          + Exclusion report on toggles are not supported in both vsim and
            viewcov mode.
     * Concatenations and bit slices are not yet supported for System Verilog
       clocking blocks.
     * On Red Hat Enterprise Linux release 5 platform, If SIGSEGV signal occurs
       during the simulation and if CDEBUG is on, C-debugger traps the signal,
       and when continued, vsim gets terminated right away, instead of exiting
       with proper error status.
     * vlog  will  now  print  an  "unsupported" error message for nested
       design-units, as this feature is not fully supported in 6.3. This error
       may be suppressed using the -suppress 2230 command-line options.
   ______________________________________________________________________

   Product Changes to 6.3f
     * If you use the GUI virtual signal/function command with "-install /",
       the signal will no longer be installed at the real context tree root, in
       which case it may be inaccessible, and certainly not observable in the
       objects window, but will now be installed in the top context of the
       first top-level design unit.
     * Nested XML testplan import (importing one testplan from inside another
       testplan) has been enhanced to support cross-format nesting. Previous
       issues   with   nesting   an   auto-numbered  testplan  inside  an
       explicit-numbered  testplan have been resolved. In particular, the
       following limitations are lifted:
          + Parameter inheritance now works correctly.
          + An explicit-numbered child testplan no longer has to be numbered to
            match the parent section.
          + Auto-numbered child testplans will now be numbered to match their
            parent section.
     * XML Testplan Import: The behavior of the "-title" and "-tagprefix"
       options has been clarified in light of the nested testplan enhancement:
          + For the top-most testplan, if "-title" is not set, the basename of
            the input XML file is used.
          + For the top-most testplan, if "-tagprefix" is not set, the "-title"
            value is used.
          + For nested testplans, neither option has a default (ie: if not set,
            they remain unset).
       Local (child) tags are only generated if the "-tagprefix" is set for the
       child testplan in question.
     * HTML Coverage Report: The "Coverage by Linked Item" table (on testplan
       scope summary page) has been significantly enhanced. The instance column
       now  indicates  the enclosing HDL scope for branch, condition, and
       expression coverage; the string in that column is a link pointing to the
       detailed coverage information for that item; and a column containing the
       filename and line number of the coverage item has been added.
     * The HTML coverage report has been enhanced to supress the coverage
       summary page for scopes which have no coverage (either because the
       source was not instrumented or was later excluded). In most cases, the
       scope will remain in the navigation tree but will be grayed-out (and not
       linked to a coverage summary page). In the design tree, if a scope and
       all it's children have no coverage, the children are dropped from the
       tree (testplan scopes are never dropped).
     * There have been some changes to the learn flow. Some performance issues
       have been addressed, including reducing the information learned during
       an SDF back-annotation phase.
     * File locking for UCDB merge:
       We support a cumulative merge (vcover merge out.ucdb out.ucdb in.ucdb).
       Such merge requests may occur simultaneously from various platforms in a
       networking environment. In order to avoid corrupting cumulative coverage
       results, merges of UCDB files are serialized. "out.ucdb" is only written
       by a single process at a time.
          + Creation of lock files whose purpose is to signal by their presence
            that a UCDB is locked for writing.
          + Operations are atomic. When creating the lock file, the process
            verifies that it does not exist and then creates it, but without
            allowing  another process the opportunity to create it in the
            meantime.
          + The lock is advisory. Processes which intend to modify a UCDB file,
            by convention, check for locks to coordinate access to that file.
            The system fails if this convention is ignored.
          + There is a back-up file mechanism within vcover merge that, when
            optioned for, saves a back-up of the merge output before merging
            and can, when optioned for, automatically restore the back-up in
            case another process has its lock broken.
          + When blocked on a lock:
               o We print out "Waiting for lock..." messages every so often and
                 let the user explicitly break the lock if they think it safe.
               o We produce a message similar to: "User Bilbo on machine Frodo
                 has had the lock for 16 days".
               o Retry attempts will occur every 10 seconds.
               o Blocked messages will repeat about every 3 minutes.
          + The lock is released after a time-out period:
               o This cannot inadvertently time-out. Cannot be broken if a
                 process  is  starved simply because others get in first.
                 Time-out is only for the case where a single process takes too
                 long.
               o The time-out period is user-configurable.
               o When a time-out condition occurs, the process timing out will
                 be sent a "kill" signal.
     * The Verilog front-end now preserves block comments defined in the macro
       body through the macro substitution process.
     * The  vsim  '-assertfile  '  switch  now  only applies to assertion
       (VHDL/SVA/PSL) messages issued by the tool. Use the vsim '-errorfile '
       switch to redirect non-assertion tool messages into the specified file.
       To retain the tools previous behavior, set the environment variable
       MTI_ASSERTFILE_COMPATIBILITY to any value. This environment variable may
       eventually be deprecated. In the modelsim.ini file, all AssertionFormat
       variables  have  been  renamed  as  MessageFormat  variables.  The
       MessageFormat variables are valid for both assertion and non-assertion
       tool messages, as before. For backward compatibility the AssertionFormat
       variables will continue to be supported.
     * The restart command will reload the current dataset if the current
       dataset is not the active simulation ("sim"), in effect acting just like
       a restart of a simulation. See the dataset restart command below under
       "New Features".
     * The XML Testplan Import configuration file (xml2ucdb.ini) has been moved
       from the product directory to a sub-directory, vm_src, directly below
       the product directory.
     * The ucdb2html utility has been removed from the release. The HTML report
       functionality had been integrated into vcover for 6.3 (see vcover report
       -html).
     * Due to changes required for resolution of product defects, the generated
       names of specializations of parameterized classes could be permuted. For
       example, if a name such as "C::C__2" was previously used for "C#(int)"
       and "C::C__3" was used for "C#(logic)", the names might be exchanged.
       The conditions under which name permutation could occur are based on
       internal details of how specializations are matched and are not directly
       correlated to source descriptions.
     * The default action for the command onbreak has changed from "pause" to
       "resume". This will only impact dofiles that do not currently contain
       any onbreak commands. The "pause" action causes the macro file to stop
       executing and issues a "Paused" prompt to allow interactive debugging of
       the macro file. The resume command continues the execution of the macro
       file at the point of the break. The result of this change in default
       value will affect macro files without an onbreak command so that those
       files will continue executing after hitting a break point. If the old
       behavior is required, then it will be necessary to add the command
       onbreak pause at the beginning of the macro file.
     * The default collapsed mode for VCD output from the vcd dumpports command
       has changed from not collapsed to collapsed. The specific change was to
       the line in the modelsim.ini file: "DumpportsCollapse = 0".
       For 6.3, this was changed to: "DumpportsCollapse = 1".
       To get the old non-collapsed format, change this setting back to 0 in
       the modelsim.ini file.
     * Starting in 6.3 concatenations are no longer treated as 'assignment
       patterns'. Previously, the simulator attempted to detect these cases and
       produced the following warning:
       You should use "'{" to specify this literal.
       Now we will print errors, as in the following example:
       int a[3:0] = {default:0};
       int b[1:2] = {32'b1, 32'd2};
       ...
       ** Error: test2.sv(31): Can't use named concat. literals here.
       ** Error: test2.sv(31): Illegal concatenation of an unsized constant.
       ** Error: test2.sv(31): Cannot assign a packed type to an unpacked type.
       ** Error: test2.sv(32): Cannot assign a packed type to an unpacked type.
     * Previously,  an attempt to print a memory using $display displayed
       nothing, while $display of other unpacked types (such as structs and
       dynamic  arrays)  did produce output. In 6.3, we will now print an
       elaboration error, #8323, for all such constructs (which are illegal).
       This error may be suppressed.
       To  print  unpacked  data, we have added the "%p" and "%0p" format
       specifiers.  The  former  prints  the  data in the form of a legal
       "assignment pattern", while "%0p" prints in a shorter format.
     * Wildcard indexed associative array can no longer be used as a foreach
       array.
     * The IEEE Std 1800 has approved an important restriction to packages.
       With the new rules, packages are not permitted to refer to compilation
       unit items. An example of such of reference is the following small
       design:
            typedef int T;
            package p;
                T foo;
            endpackage
       Packages may depend on other packages so compilation unit declarations
       that packages need should be refactored into separate packages. For
       example, the previous design should be changed to a form similar to the
       following:
            package shared_types;
                typedef int T;
            endpackage
            package p;
                import shared_types::*;
                T foo;
            endpackage
       It is also important to note that "import" statements immediately before
       a package declaration are compilation unit imports and not imports into
       the subsequent package. With the new rules, the package references may
       not look into such an import. For example, the following approach will
       no longer work:
            package shared_types;
                typedef int T;
            endpackage
            import shared_types::*;
            package p;
                T foo; // cannot refer to T since it is imported into
                // the compilation unit, not into the package
            endpackage
       The new rules are now being enforced. Designs must be refactored so that
       packages do not refer to anything in the compilation unit.
     * Version 6.3d includes the v2.1 Mentor Graphics Documentation System,
       which includes the following components:
       InfoHub -- A browser-based directory that provides links to all your
       locally installed documentation. The InfoHub also provides a search
       interface, from which you can search across all your locally installed
       documents. The search interface also enables you to submit a search
       directly  to  SupportNet.  The InfoHub provides access to User and
       Reference manuals and Tutorials, delivered in both HTML and PDF formats,
       and Release Notes, delivered in text format.
       PDF Bookcase -- A PDF file that provides links to the PDF documentation
       if you cannot use an HTML browser.
       Improvements to the v2.1 Mentor Graphics Documentation System include
       the following:
       Search changes -- Improved search time, multiple keyword support, search
       ranking icons, results filtering by book or topic, and improved accuracy
       of results.
       Search and content scopes -- A new My Search Scope option lets you
       define a custom set of books to search.
       Global   index   improvements   --   improved  viewing  speed  and
       collapse/uncollapse of "like" terms.
       Getting Started movie -- provides an overview of all the features of the
       InfoHub  and Mentor Graphic Documentation System. You can view the
       Getting Started (Movie) from the Quick Tips menu located in the lower
       left-hand corner of the InfoHub.
       Font size -- increase or decrease the default size of the font by using
       the new triple "A" icon in the header.
     * The  vopt  +acc=g option has been replaced by the +floatparameters
       option(Verilog designs) and the +floatgenerics option (VHDL designs).
       Both +floatparameters and +floatgenerics accept the same [+<module>][.]
       syntax accepted by +acc. Use +floatparameters and +floatgenerics to
       instruct vopt not to lock down values of parameters and generics during
       optimization. The parameters and generics will be left "floating", and
       thus  capable  of accepting modified values via the vsim -g and -G
       options. +floatparameters and +floatgenerics may have adverse effects on
       performance in some cases.
     * The vopt +acc=m option has been changed such that it no longer preserves
       primitive instances. Primitive instances are now preserved by using the
       new +acc=u option.
     * The VoptCoverageOptions variable has been removed from the modelsim.ini
       file. vopt optimizations for coverage are now controlled by the CoverOpt
       modelsim.ini file variable and the -cover command line option.
     * The  -coverage  option  to  vopt  is  no  longer needed. vopt will
       automatically detect whether any of the source files were compiled with
       a -cover option, and will adjust its optimizations accordingly. Also, if
       you give a -cover xyz option to vopt, it will be logically OR'd with any
       -cover abc option given to an individual source file when processing
       that source file. In addition, if you compiled some source files with
       coverage on, you can force coverage off by giving vopt the -nocover
       option. This allows you to control whether coverage is on or off at vopt
       time instead of having to recompile individual source files.
     * The pathname reported by the simulator and User Interface for items
       inside SystemVerilog packages is incorrect. A path separator ('/') was
       used instead of the language correct package scope separator ('::').
     * The recording of attributes for transactions has changed. Previously,
       any attribute recorded on a transaction was not only added to every
       transaction on that same substream, but to all parallel transactions and
       the transactions on their substreams as well.
       Now, any attribute recorded on a transaction is still added to every
       transaction on that same substream, but is no longer automatically added
       to every parallel transaction and the transactions on their substreams.
       Typically, all transactions on a given stream (and all of it's parallel
       substreams) have the same set of attributes, and for that case, there
       will be no difference due to this change.
     * Changes for coverage exclude command:
          + Replace the option -instance with -scope to accommodate more scope
            types like generate block.
          + Transition  names are used with the option -ftrans instead of
            transition id's. The new syntax is:
                [-ftrans <state_var_name><transition_name>+ | all]
            where transition_name is specified as <state_name>-> <state_name>.
          + State names are used with the option -fstate instead of state id's.
            The new syntax is:
                [-fstate <state_var_name> <state_name>+ | all]
          + A new option -else is added to exclude the else part of every
            if-branch specified in the line range. Note that the line number
            for the else-branch is where the if-branch appears.
          + Recursive  exclusion for a scope is supported. To recursively
            exclude a scope, -scope is specified together with -r.
          + -scope and -du are supported with -togglenode.
     * The  UCDB  bin name for if-branch is changed from 'true_branch' to
       'if_branch'.
     * The  simulator has been improved to recognize and maintain Verilog
       escaped  identifier  syntax  for  all Verilog escaped identifiers.
       Previously  such identifiers were converted to VHDL-style extended
       identifiers, and then appeared as VHDL extended identifiers in tool
       output and CLI commands.
       Starting in 6.3, all default Verilog escaped object names inside the
       simulator appear identical to their names in original HDL source files.
       Sometimes in mixed language designs, hierarchical identifiers might
       refer to both VHDL extended identifiers and Verilog escaped identifiers
       in the same fullpath. For example:
       /top/\VHDL*ext\/\Vlog*ext /bottom
       top.\VHDL*ext\.\Vlog*ext .bottom
       (depending if the HierPathDelim variable is set to '/' or '.')
       Any fullpath that appears as user input to the tool (e.g. on the vsim
       command line, in a .do file, on the vopt command line, etc.) should be
       composed of components with escape syntax appropriate to their language
       kind.
       A modelsim.ini variable called "GenerousIdentifierParsing" can control
       parsing of identifiers input to the tool. If this variable is set (it is
       set by default now), either escape syntax to be used for objects of
       either language kind. This can be helpful to maintain compatibility with
       older  do files, which often contain pure VHDL extended identifier
       syntax, even for escaped identifiers in Verilog design regions.
       Note that SDF files are always parsed in "generous mode". SignalSpy
       function arguments are also parsed in "generous mode".
       On the vsim command line, the language-correct escape syntax should be
       used for top-level module names. Using incorrect escape syntax on the
       command  line  will  work  in the incr flow, but not in vopt. This
       limitation may be removed in a future release.
     * If  an  invalid  end  time  is specified when recording the end of
       transaction, a warning is still issued but the current simulation time
       is used as the transaction end time instead of the transaction start
       time.
     * The format of the library contents file (_info file) has been changed
       for the purpose of improved compiler performance. The new format is not
       backwards compatible with previous releases. Consequently, any attempt
       to refresh or recompile a 6.3 library with an older release will result
       in an error similar to the following:
       ** Error: (vcom-42) Unsupported ModelSim library format for "./work".
       (Format: 3).
       Converting the library back to an older release requires that you remove
       the library and rebuild it from scratch. Or, if you are converting back
       to a 6.2 release only, then you can convert the library format to the
       6.2 format and then freely refresh back and forth between 6.2 and 6.3
       releases. Use the 6.3 version of vlib to convert the format to the 6.2
       version using the -format option. For example:
       vlib -format 1 work
       The format version for pre-6.3 releases is 1, while the format version
       for 6.3 is 3. Format version 2 is related to libraries created with the
       -archive option and should be avoided when specifying the vlib -format
       option.
     * The  XML  Testplan  Import Utility (xml2ucdb) was enhanced and the
       command-line and configuration parameters were re-named for consistency.
       The following changes were made:
         1. Command-line
              1. Added a -verbose option to show testplan hierarchy and design
                 mapping. By default, the utility is a lot less noisy than
                 before.
              2. A -ucdbfilename <file> option has been added to remove the
                 order-dependence  of  the files on the command line (the
                 original syntax is still accepted).
              3. The command-line arguments are now order-independent.
              4. Any -format <format> option found on the command line is
                 processed first and other extraction parameters found on the
                 command line act as overrides on top of the parameters found
                 in the configuration file.
              5. The same parameter names are used both on the command line and
                 in the configuration file.
              6. The  -tagseparators  <chars>  option,  when  used on the
                 command-line, applies only to the taglist parameters specified
                 on the command line (see below).
         2. Configuration file
              1. Added "datalabels" parameter to support user-defined embedded
                 data labels.
              2. The following parameters have been re-named for consistency.
                 In all cases, the former name is still recognized:
                   1. start => starttags
                   2. stop => stoptags
                   3. exclude => excludetags
                   4. description => descriptiontag
                   5. sectionitem => sectiontags
                   6. dataitem => datatags
                   7. testitem => titletag
                   8. coveritem => linktag
                   9. coverattr => linkattr
              3. The "Tags" field name in the "fieldnames" and "fieldlabels"
                 parameters has been renamed "Link". The former name is still
                 recognized.
         3. Behavior
              1. The UCDB tags used to link testplan sections to coverage items
                 now has the contents of the "title" parameter prepended.
                 Lacking that, the basename of the XML input file is used.
              2. The "startsection" parameter now reflects the initial section
                 number for each level of hierarchy (auto-number mode only).
              3. Data  capture is no longer enabled from the start of the
                 document in auto- number mode. An element matching "starttags"
                 or a section number matching the "startstoring" parameter is
                 required to enable data capture.
     * If the PATH column value is set to "-" it will be ignored (this is
       useful for the PATH-per-LINK case where one of the LINK values doesn't
       need a PATH).
     * XML Import (xml2ucdb) now supports a "Path" column to direct testplan
       link item matching to a specific region of the design. In addition, a
       path may be prepended onto any CoverGroup, CoverPoint or Cross link
       item.
       For CoverPoint, CoverGroup, and Cross link items:
          + If  the  contents  of the Path column are non-blank, the Path
            information will be used as the value of the -path option to the
            tag command and the trailing component of the Link column will be
            parsed as usual and used to match the cover item. Any path added to
            the string in the Link column will be ignored.
          + If the Path column is not used or is left blank, and a path is
            prepended onto the string in the Link column, the prepended path
            will be used as the value of the -path option on the tag command.
       For CoverItem, Assertion, or Directive link items:
          + If the string in the Link column starts with a path separator
            character, the Link string is used as the value of the -path option
            in the tag command and no other tag command option is used.
          + If  the  string in the Link column does not start with a path
            separator (in other words, is not a full path), and the contents of
            the Path column are non-blank, the Path string is used as the value
            of the -path option and the Link strung is used as the value of the
            -match option on the tag command.
          + Otherwise, the Link string is used as the value of the -match
            option on the tag command and no path is specified.
       For all other link item types, the contents of the Path column are
       ignored. Note: If the Path column for a given link item is the literal
       string "-", the Path column is ignored for that link item only.
     * XML Import (xml2ucdb) now supports test data record tagging. If the Type
       column for a given link item is "Test", the contents of the Link column
       will be used as the value of the -testrecord option on the tag command
       associated with that link item.
     * XML  Import  (xml2ucdb)  now  supports a -stylesheet <file> option
       ("stylesheet="  in  the  INI  file).  This option points to an XSL
       transformation stylesheet which is applied to the imported XML file
       prior to extraction.
     * XML Import (xml2ucdb) now supports XML files generated by Jasper's
       GamePlan testplan utility. Use the -format GamePlan option.
     * Use of the "analog" format within the Wave window has been made easier
       by adding support for the use of -min and -max to control waveform
       scaling (the old method required use of "offset" and "scale").
     * Font Changes
       The way fonts are used and configured in the product has changed. There
       are  now  5 configurable fonts in the product: menuFont, textFont,
       fixedFont, treeFont, and footerFont. These fonts are used by all windows
       and are customer configurable using the Edit Preferences dialog box. The
       previous  method  of  configuring  fonts is no longer used and the
       preference variables will be ignored. The Source window will continue to
       use it's own font setting as that window shares the font preferences
       with other products that use the DesignPad text editor.
       For current customers upgrading to 6.3b and later releases that have set
       up  customized font preferences, these preferences will have to be
       manually configured for the new fonts, otherwise the product will look
       and behave just the same.
     * A change to licensing for this release eliminates extraneous entries in
       the license server log file that were the result of an availability
       check for a license feature. There used to be a license checkout line
       (i.e., OUT) followed by a license checkin line (i.e., IN) with 0 time
       duration each time the application checked on the availability of a
       license to decide whether to attempt the actual checkout of the license.
     * The vcd limit <size> command has been changed adding support for a file
       size limit greater than 2 GB. The size argument now excepts a unit
       specifier. The default <size> unit remains as bytes. An optional suffix
       of either KB, MB or GB specifies the units in which the size should be
       interpreted. For example:
       vcd limit 6GB
       or
       vcd limit 400MB
     * Taglists (used as data extraction parameters) may now include a subset
       of the XPath syntax to identify elements not only by tag name but also
       by  the  contents  of  attributes  attached to said elements. This
       pseudo-Xpath syntax only handles "=" and "!=" and can only examine the
       attribute values attached to the element being compared. Moreover, only
       one attribute comparison may be performed.
       For example, the following extraction parameter:
"-starttags Worksheet[@ss:Name=Sheet1]"
       will match the following element in the incoming XML:
<Worksheet ss:Name="Sheet1">...</Worksheet>
       but will not match the following element:
<Worksheet ss:Name="Sheet2">...</Worksheet>
     * The behavior of several extraction parameters in the XML Import utility
       has  been  clarified  to  allow  various  parameters  to work more
       independently.  The  affected parameters are: starttags, stoptags,
       excludetags, and startstoring.
     * The change command can now be used to modify local variables in Verilog
       tasks and functions.
     * The profile UI has been modified in the following ways:
       - A new pane named "Design Units" has been added to the profile window.
       It aggregrates results on a per design unit basis.
       - "sum(Mem in)" and "sum(Mem in(%))" columns have been added to the
       Ranked and Design Units profile panes. These columns report cumulative
       values for memory in and memory in %, providing another metric to use
       when examining memory profile results.
       - Memory values are displayed in the profile windows as comma separated
       numbers rather than with K and M suffixes. This provides correspondence
       between the printed size of the number and its actual value; the goal is
       to make the data easier to read.
   ______________________________________________________________________

   New Features Added to 6.3f
     * The static and automatic lifetime qualifiers on SystemVerilog modules,
       programs, interfaces and packages is now supported.


