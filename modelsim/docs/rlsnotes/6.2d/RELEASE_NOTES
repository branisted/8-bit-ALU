
                   Release Notes For ModelSim Altera 6.2d

                 Copyright 2006 Mentor Graphics Corporation
                            All rights reserved.
  This document contains information that is proprietary to Mentor Graphics
                                Corporation.
    The original recipient of this document may duplicate this document in
                                whole or in
  part for internal business purposes only, provided that this entire notice
                               appears in all
  copies. In duplicating any part of this document, the recipient agrees to
                                 make every
  reasonable effort to prevent the unauthorized use and distribution of the
                                proprietary
                                information.



                                Oct 16 2006
   ______________________________________________________________________

     Product Installation and Licensing Information
   For  brief  instructions  about  product installation please visit the
   "install_notes" file in www.model.com. The install_notes file can be viewed
   at:
   [1]http://www.model.com/products/release.asp
   For detailed information about product installation and licensing see the
   ModelSim Start Here Guide. The manual can be downloaded from:
   [2]http://www.model.com/support/documentation.asp


     Release Notes Archives
   For release notes of previous versions visit the release notes archive at:
   [3]http://www.model.com/support/default.asp
   or  find  them  in  the installed modeltech tree in <path to modeltech
   installation>/docs/rlsnotes


     How to get Support

   This OEM product is supported by Altera Corporation
     * World-Wide-Web Support
       [4]http://www.altera.com/mySupport


   ______________________________________________________________________

  Index to Release Notes

     [5]Key Information

     [6]User Interface Defects Repaired in 6.2d

     [7]Verilog Defects Repaired in 6.2d

     [8]PLI Defects Repaired in 6.2d

     [9]VHDL Defects Repaired in 6.2d

     [10]FLI Defects Repaired in 6.2d

     [11]VITAL Defects Repaired in 6.2d

     [12]SystemC Defects Repaired in 6.2d

     [13]Assertion Defects Repaired in 6.2d

     [14]Mixed Language Defects Repaired in 6.2d

     [15]General Defects Repaired in 6.2d

     [16]Mentor Graphics DRs Repaired in 6.2d

     [17]Known Defects in 6.2d

     [18]Product Changes to 6.2d

     [19]New Features Added to 6.2d
   ______________________________________________________________________

   Key Information
     * The following lists the supported platforms:
          + win32aloem - Windows 2000, XP
          + sunos5aloem - Solaris 8, 9, 10
          + hp700aloem - HP-UX 11
          + linuxaloem - RedHat 7.2 and higher.
     * The following platform will be discontinued as of the 6.3 release:
          + HPUX Platform - hp700aloem
   ______________________________________________________________________

   User Interface Defects Repaired in 6.2d
     * Virtual signals with the -delay option could not be added to the Wave
       window.
     * Under some circumstances, the following incorrect error messages were
       displayed:
       "... Recursive kernel call. Cannot execute ...".
     * In certain cases, selecting processes in an undocked Dataflow window
       lead to the GUI locking up and becoming unresponsive.
     * Closing a maximized MDI window (e.g. wave, source, dataflow, memory)
       resulted in an incorrect and unusable window layout in certain cases.
     * The  Wave  window could hang after many 'zoom in' operations if an
       extremely large (e.g. >1,000,000 units) wave grid spacing was specified.
     * An undocked workspace window now has a filter toolbar. This allows the
       dataset (sim) tab to be filtered when the workspace is undocked.
     * Double clicking on a message in the msgviewer window that had no file
       information caused a Tcl error.
     * After a restart operation the Wave windows current vertical scroll
       position is retained. Previously, after a restart the Wave windows
       verical scroll position was moved to the top.
     * SystemC aggregate signals (such as an array of sc_signal) did not log
       correctly if they were driven from HDL.
     * Repositioning the simulation GUI toolbars was difficult.
     * When hovering over a large record in the Wave window the balloon popup
       displaying the value displayed incorrectly or caused a crash.
     * The diff.exe now is provided for win32, win32pe and win32. This is
       needed for users who don't have diff.exe in their win32 system and try
       to use memtool "Compare Contents..." feature.
     * The wlfman utility did not correctly preserve the signal mode (in, out,
       inout, or internal) in the output WLF file. They were always marked as
       internal.
     * Message  Viewer window now can be closed. A "x" icon is added when
       msgviewer window is created, and it is grayed out when transcript tab is
       selected. The "View" -> "Message Viewer" pulldown menu now is a toggle
       menu.
     * Under certain cases an error resulted when attempting to bring up the
       cursor popup menu within the Wave window.
     * When undocked, the Workspace window toolbar now displays the "contains:"
       filter toolbar.
     * Users can now enter logical library names via the search library fields
       of the simulate and optimize design dialog boxes.
   ______________________________________________________________________

   Verilog Defects Repaired in 6.2d
     * Some of the SystemVerilog DPI open array API functions are not yet
       implemented. An error message is issued if such a function is called
       from user C code. The error message incorrectly stated that the function
       couldn't be called from "within a thread". Now a more appropriate error
       message is issued.
     * $ungetc was erroneously returning the value of the character argument
       when successful. It was modified to return zero as per IEEE 1364-2005.
     * There was a compilation error when correctly using void'() on a system
       function to discard the return value.
     * There was a compilation error when correctly assigning an enum array
       element imported from a package to an enum variable of the same kind.
     * Hierarchical  calls in fork..join blocks inside of automatic tasks
       sometimes crashed the simulator.
     * Using "ref" task arguments in a fork..join block in a task generated the
       following internal compiler error:
       **   Error:   **   Error:   fork_tasks.sv(39):   Internal   error:
       ../../../src/vlog/vgendecl.c(8367)    idx    >=   0   &&   idx   <
       block_shared_item_countOf(block)
     * The Verilog parser reported incorrect line numbers after a multi-line
       macro had been expanded.
     * Though  it  was  a  documented  option,  vlog gave an error saying
       -force_refresh was an unknown option.
     * The compiler crashed on 64-bit platforms in some cases of optimizing
       expressions.
     * A final block that generated events on logged signals and was triggered
       by  a $finish() task (as opposed to the command line quit command)
       crashed.
     * The simulator no longer errors on Verilog command line options which
       start with +acc but are not PLI or debug command access options such as
       +access+r+w.
     * There was a $countdrivers issue in mixed-language design where drivers
       from the upper hierarchy of a net were missed, thus an incorrect value
       was returned.
     * The  names created for an array of instances of bidirectional pass
       switches were incorrect, and caused the simulator to crash.
     * When multiple +libext arguments were sent to the compiler and several
       matching files were found, the compilation did not stop after compiling
       the first match. This resulted in the intended module definition being
       overwritten with the last file compiled.
     * An optimized design not at the top of the hierarchy using the optimized
       design name in the HDL source code could not be instatiated.
     * Some forms of multiplexers implemented as continuous assignments behaved
       incorrectly when optimized if the "select" vector was declared with an
       ascending range rather than a descending range.
     * A clocking block event failed to work when accessed through a virtual
       interface.
     * A clocking block input variable failed to register a value when declared
       within a parameterized virtual interface.
     * A design with input to input INTERCONNECT delay annotations using the
       option +multisource_int_delays on vector ports crashed the simulator.
     * An  $sdf_annotate  call that did not explicitly specify the target
       instance to annotate failed to annotate the correct instance (the parent
       module of the $sdf_annotate call) if the parent module was inlined in an
       optimized design.
     * A module instantiation containing a part-select of a variable, where one
       of the bounds depends on a user-defined function, in certain cases
       caused the simulator to crash during elaboration.
     * vlog crashed when an edge identifer was used in the default clocking
       skew of a clocking block.
     * When the -sv switch was not specified, vlog did not correctly flag the
       illegal use of null statements in sequential and parallel statement
       blocks as errors.
     * When the -sv switch was not specified, vlog did not correctly flag
       functions declared without any inputs as errors.
     * Specializing a parameterized class in a module instance with a bind
       construct caused a fatal error in some cases.
     * The $fmonitor system task failed to reread the file argument if it
       changed value after the call to $fmonitor and if the design was either
       System Verilog or an unoptimized design.
     * Under some circumstances, missed checking for all pure virtual methods
       overrides in case of derived parameterized classes.
     * When the -sv switch was not specified, vlog did not correctly flag the
       use of statement labels as errors.
     * Name  collisions  between System Verilog named blocks (and labeled
       statements)  that  share  the  same parent scope are now correctly
       identified and reported as errors.
     * The "foreach" statement did not always work properly on arrays of class
       handles.
     * Declaring a dynamic array in a normal Verilog source file mistakenly
       enabled System Verilog compatibility even when vlog was invoked without
       the -sv switch.
     * vlog crashed when a clocking block skew contained both an edge and a
       delay.
     * Gate-level optimized cells with wired tristate primitive drivers on edge
       sensitive logic may not evaluate correctly in some situations.
     * An optimized always construct implementing latch-like behavior skipped
       evaluations of the latch enable under some unusual circumstances if the
       sensitivity list also contained a signal not read in the body of the
       always construct.
     * The error checking for a blocking assignment to a hierarchical path was
       too strict.
     * When the annotation point specified with the -sdfmax, -sdftyp or -sdfmin
       options was neither a fully rooted path name nor immediately under the
       top level of hierarchy, and the design was optimized the simulator
       crashed.
     * Having multiple hierarchical references using $root could result in
       hierarchical name resolution failures.
     * Using event triggers on a class field of type "event" caused a crash in
       vsim on 64-bit platforms.
     * Calling some system functions from within an automatic task or function
       that contained no variable declarations crashed the simulator with a
       segmentation fault.
     * Using a system function call as an actual to a system task call (e.g.
       $display($time)) resulted in memory corruption and simulation failure in
       some complex scenarios.
     * If a system function call with automatic arguments was nested inside
       another system task or function call, the value passed to the outer call
       was incorrect.
   ______________________________________________________________________

   PLI Defects Repaired in 6.2d
     * The tf_infonode PLI routine returned the wrong handle in bit select
       node.
     * Under some circumstances, a VPI iteration for vpiLoad on a vpiNet or
       vpiNetBit handle looped endlessly.
   ______________________________________________________________________

   VHDL Defects Repaired in 6.2d
     * If the actual expression of an association list was in the form of a
       function call with multiple constant arguments, the compiler erroneously
       classify the expression as a type conversion function, and issue the
       following error:
       Error: ...: (vcom-1042) Conversion function ... must have exactly one
       formal parameter.
     * In an association list containing an individually associated formal,
       where there appears a formal designator that is a slice of the formal,
       and where the formal is of an unconstrained array type, the LRM requires
       that  the direction of the slice discrete range be the same as the
       direction of the index subtype of the array type. In legacy releases,
       this rule was not enforced and instead, the direction of the formal was
       obtained from the direction of the slice discrete range. Recently, a
       strict  enforcement of this rule was added. This release, however,
       reverts back to the non-compliant behavior. All slices for a given
       formal associated individually must have the same direction, and this
       direction will determine the direction of the (unconstrained array type)
       formal being associated.
     * vcom and vopt crashed when an alias to a function was called as a unary
       or binary operator.
     * In  an optimized VHDL design containing a black boxed instance and
       unbound  instances  in certain cases unexpected simulation results
       ocurred. The problem showed up as signals having unexpected "U" values.
     * vopt erroneously reported out-of-bounds errors for generic and port
       associations occurring in generate blocks that vopt determined would not
       be evaluated. Given the component declaration below:
       component comp is
           generic(gcomp : natural)
       end component;
       If vopt determined generic g evaluates to 1, then compilation of the
       following generate statement erroneously reported an out-of-range error.
       gen_comp : if g /= 1 generate
           inst_comp : component comp generic map(gcomp => -1);
       end generate;
     * Optimizations caused incorrect drivers on composite signals on output
       parameters to subprograms. This caused the simulator to crash.
     * For a class SIGNAL mode OUT formal parameter of an unconstrained array
       type where the element subtype is also an array, the 'LENGTH computation
       was incorrect for optimzation level -O4 or higher.
     * Implicit concatenation with an operand of an unconstrained array type
       (e.g. a function call) resulted in a simulator crash in some cases.
     * In some circumstances, incorrect simulation results occurred when an
       "if" statement condition used an indexed signal name prefix of a 'EVENT
       attribute name.
     * For the 6.2c release, a configuration specification whose generic map
       had an unassociated (or OPEN) array type generic whose corresponding
       entity generic had a locally static default expression caused a message
       such as:
       Internal error: ../../../src/vcom/genexpr.c(5483).
       In older releases, this configuration specification caused intermittent
       crashes.
     * When  optimizing  a VHDL design, vopt would incorrectly exit while
       reporting a circular dependency when two package bodies referenced each
       other's package header.
     * When optimizing a VHDL design, if different parts of the design were
       compiled with different levels of optimizations, in certain cases vsim
       generated the error message:
       # ** INTERNAL ERROR: export_lookup() failed.
     * Under rare circumstances a recursive call procedure call chain caused a
       stack overflow and vcom crash.
   ______________________________________________________________________

   FLI Defects Repaired in 6.2d
   ______________________________________________________________________

   VITAL Defects Repaired in 6.2d
   ______________________________________________________________________

   SystemC Defects Repaired in 6.2d
     * vsim  crashed  during  SystemC elaboration when a sub-module and a
       sc_signal under the same scope had the same names. A warning message is
       now issued in this case.
     * sccom exited with an error if the pathname to your work library had
       spaces.
   ______________________________________________________________________

   Assertion Defects Repaired in 6.2d
   ______________________________________________________________________

   Mixed Language Defects Repaired in 6.2d
     * When a black box instantiated VHDL, vsim did not find the info file for
       the standard package and the following error messages were produced:
       #    **    Error:    (vsim-7)    Failed    to   open   info   file
       "work/_opt/__model_tech_.._std__info" in read mode.
       # No such file or directory. (errno = ENOENT)
     * If the drivers command was applied to a Verilog input port that was
       driven in a VHDL upper level architecture, the command reported drivers
       on the upper level signal, but omitted any Verilog drivers on the port.
       If there were conflicting values driven onto the port within the Verilog
       module, the drivers report provided misleading information.
     * An integer type VHDL generic associated with a System Verilog parameter
       resized the parameter to 32-bits in the case that the parameter was not
       explicitly typed and the default value was a 2-state value of a size
       other than 32-bits. The intention was for the parameter to retain its
       default size.
     * Escaped identifiers in the hierarchical path name of source ports in
       INTERCONNECT delays were not processed correctly.
     * In some situations annotating multisource INTERCONNECT delays to VITAL
       models, when the source port is on an optimized Verilog module, caused a
       crash.
     * vopt crashed on a top-level design name of the form library.module, when
       the library name contained one or more "+" characters.
     * If there are multiple instances of a VHDL design unit instantiated below
       a  hierarchy  in  which  levels  of  Verilog  and VHDL designs are
       interspersed, vopt may infer incorrect constant values for generics of
       some of the instances which resulted in the following warning from vsim:
       ** Warning: (vsim-8148) The constant value inferred for generic 'g' is
       different from the value that was posted.
   ______________________________________________________________________

   General Defects Repaired in 6.2d
     * The  Signal Spy function signal_release() errored out when a valid
       enumerated  value  was used as the index of a vectored signal. The
       function now correctly handles valid enumerated values.
     * Under some circumstances, incorrect conditional timing check violations
       were reported.
     * Hold timing check violation is missing when data and ref events occur at
       the same time due to a Performance optimization. The problem is fixed.
     * vmakes output was not correct when embedded spaces were in the source
       file path name. A backslash is now added in this case (e.g. "A B" -->
       "A\ B"). This applies to both embedded spaces in the directory name and
       file name.
     * vopt tried to unlink 64 or 32-bit asm files from a read-only library.
     * The wlfman utility crashed in some cases when trying to filter a System
       Verilog array of structs signals.
   ______________________________________________________________________

   Mentor Graphics DRs Repaired in 6.2d
     * dts0100357208 - Tool hangs if zooming in in wave window.
     * dts0100360805 - Difficult moving the menu bars in GUI.
     * dts0100244234 - Wave window crashes when pop-up message on large record
       type tries to display.
     * dts0100361926 - wlfman filter command converts all signals into type
       internal.
     * dts0100350244 - Incorrect line reporting.
     * dts0100353304 - $countdrivers system function does not work.
     * dts0100316949 - ModelSim crash with multisource_int_delay option.
     * dts0100351103 - Crashes when compiled/run with optimizations.
     * dts0100356900 - vsim crashes when attempting to load a design that binds
       a module containing an instance of an interface.
     * dts0100342856 - vopt generates incorrect code that results in a range
       error.
     * dts0100348856 - VHDL array attribute a'length returns the wrong value
       inside a procedure.
     * dts0100320766 - wlfman filter seg fault when SV types in wlf.
     * dts0100352785 - vmake with vopt.
     * dts0100354174 - Want ability to filter out generics from Object window.
     * dts0100345623 - The vlog command does not process multiple +libext
       options correctly.
     * dts0100349426 - Fatal vsim error 3967 - Invalid array element size
       (just_init_array).
     * dts0100358053 - Incorrect results from Verilog AND/OR expression.
     * dts0100362237 - Core dump on get from analysis_port FIFO in scoreboard.
     * dts0100358426 - Unlink error with 64 & 32-bit libs in read only dir.
     * dts0100359243 - Internal errors from Modelsim PE 6.2c : updateLines
       YScroll CB error: Recursive kernel call. Cannot execute Coverage Data.
     * dts0100331542 - The simulator complains about spaces in path.
     * dts0100356660 - vcom crashes with a segmentation fault.
     * dts0100346652 - Spurious runtime error with SV mailbox and struct data
       type.
   ______________________________________________________________________

   Known Defects in 6.2d
   ______________________________________________________________________

   Product Changes to 6.2d
     * vlog or vopt will now display a warning if cross coverage produces
       redundent results.
     * A stacktrace will no longer be printed when a fatal error is the result
       of incorrect user code and the fatal error is recoverable. Instead, the
       simulation stops and the failing source code line is reported.
     * The width of signal values displayed in the dataflow Window can now be
       controlled with the "Dataflow / valuelength" item in the Preferences
       dialog box.
   ______________________________________________________________________

   New Features Added to 6.2d
     * The vmake utility did not work properly when optimized design units were
       present in the library and gave a misleading error message. vmake now
       recognizes optimized design units and generates a valid vopt build rule
       for each explicitly optimized design.
     * The switch -prop was added to the vdir utility to report specific design
       unit options. A list of properties used by vdir -prop is shown below:
       vdir [-l| [-prop <prop>]] [-r] [ [-all] | [-lib <path>] [<primary>]]
       archcfg: Configuration for arch
       bbox: Blackbox for optimized design
       body: Needs a body
       default: default options
       dir: Source directory
       dpnd: Depends on
       entcfg: Configuration for entity
       extern: Package reference number
       inline: Module inlined
       lrm: Language standard
       mtime: Source modified time
       name: short name
       opcode: Opcode format
       options: Compile Options
       root: Optimized Verilog design root
       src: Source file
       top: Top Level model
       ver: Version Number
       vlogv: Verilog version
       voptv: Verilog Optimized Version
     * vmake  now  handles  multiple  source  files per design unit. This
       enhancement also supports Verilog include files plus Verilog and VHDL
       PSL vunit files.
     * scgenmod now has a -createtemplate option to create class template
       declaration  of  a  foreign module with integer template arguments
       corresponding to the integer parameter or generic defined in the VHDL or
       Verilog module. Ports in VHDL and Verilog modules instantiated from
       SystemC  can  now  have  thier range specified in terms of integer
       parameters or generics. Such port ranges will be specified in terms of
       the template arguments of the the foreign module.
     * JobSpy now supports SGE task arrays. Simulation jobs use SGE_TASK_ID as
       well as JOB_ID environment variables. The jobspy command can reference
       these jobs as "taskid.jobid".
     * JobSpy  can  now  be  used without running a jobspy daemon. If the
       JOBSPY_DAEMON environment variable is set to a directory rather than a
       port@host, then simulation jobs will create files in that directory with
       the job's information. The jobspy command and GUI will then use that
       information rather than gettting it from the daemon.
     * JobSpy now supports the profile simulator command. This command can be
       given while the remote simulation is running or not. The usage is:
       jobspy _jobid_ profile on | off | save [filename]
     * Support was added for the Verilog ternary operator in condition and
       expression coverage truth tables. Support was also added for Hi-Z states
       in the UDP for arguments of the ternary operator. Truth table rows that
       contain Z's are automatically excluded from coverage counting, unless it
       is overrided by using the vsim -noexcludehiz option.
     * Cdebug support for SystemC module instance-based C breakpoints has been
       added. To specify the instance of the SystemC module as a C breakpoint
       condition,    use    the    bp    command    and    switch   -inst
       <SystemC-module-instance-hier-name>. For example:
       bp -c -inst "sctop.a.b" ...
       bp -c -inst "sctop.a.c*" ...
       bp -c -inst "/sctop/a/c* sctop/a/b" ...
       The  switches  -cond and -inst can be used together. Wildcards are
       supported. The path separator in hierarchical names can be Verilog or
       VHDL  style,  or the one specified in modelsim.ini can be used. If
       multiple -inst switches are used, the last one wins.
     * The -du <design unit> switch was added to vmake to generate makefiles
       for specific design unit(s). The -du switch can be used more than once
       to include multiple design units.
     * The Objects window has a new filter for removing Parameters and Generics
       from the window. Filters are found under the View menu.
     * The new CLI commmand, find insource pattern searches all source files
       related to the current design and prints lines from files that match the
       pattern argument. A double-click on the reported matching lines in the
       Transcript window will open the file and display the reported lines
       containing the pattern match. Regular expression wildcards may be used
       in the pattern to further restrict the matches.
     * The new CLI command, find infiles <string pattern> <file pattern...>
       will search the specified files for matching strings. Lines matching the
       pattern will be listed in the Transcript window. A double-click on the
       matching lines reported in the Transcript window will open the file and
       display the reported lines.
     * The +dumpports+collapse switch was added to vsim for collapsing vectors
       in dumpports output. Dumpports output can also be controlled with the
       modelsim.ini entry:
       DumpportsCollapse = 0
       Starting with 6.2d the default setting for "DumpportsCollapse" is off
       (0).


